[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W17-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W17-3/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"\u0026nbsp;[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W17-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-W17-3/tp)","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"## Spend n Split (SnS)","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"Spend n Split (SnS) is a desktop app for managing expense from contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SnS can get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"Main features:","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"* Manage contacts and their personal information","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"* Manage expenses between you and your contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"Here is the link to our [User Guide](https://ay2324s1-cs2103t-w17-3.github.io/tp/UserGuide.html) and [Developer Guide](https://ay2324s1-cs2103t-w17-3.github.io/tp/DeveloperGuide.html)!","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"## Acknowledgements","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"This is a brownfield software project based on [AddressBook Level-3](https://se-education.org/addressbook-level3/) created by the [SE-EDU initiative](https://se-education.org), taken under the [CS2103T Software Engineering course](https://nus-cs2103-ay2223s1.github.io/website/index.html) held by the School of Computing at the National University of Singapore.","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ncduy0303":15,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"mainClassName \u003d \u0027seedu.spendnsplit.Main\u0027","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"run {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"    String javaFxVersion \u003d \u002717.0.9\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-numbers-fraction\u0027, version: \u00271.1\u0027","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"    archiveFileName \u003d \u0027spendnsplit.jar\u0027","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jedkohjk":6,"-":71,"wui-hong":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"### Jed","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"\u003cimg src\u003d\"images/jedkohjk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"[[github](https://github.com/jedkohjk)]","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"[[portfolio](team/jedkohjk.md)]","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"* Role: Software Engineer","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"* Responsibilities: Development, Code Reviews, Unit / Integration Testing","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"### Nguyen Cao Duy","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"\u003cimg src\u003d\"images/ncduy0303.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"[[github](https://github.com/ncduy0303)]","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"[[portfolio](team/ncduy0303.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"* Role: Software Engineer","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"* Responsibilities: Development, Code Reviews, Requirements","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"### Nathaniel Calimag","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"\u003cimg src\u003d\"images/nathanielcalimag.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"[[github](http://github.com/nathanielcalimag)]","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"[[portfolio](team/nathanielcalimag.md)]","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"* Role: Software Engineer","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"* Responsibilities: Development, Project Management, Code Quality","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"### Khoo Wui Hong","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"\u003cimg src\u003d\"images/wui-hong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"[[github](http://github.com/wui-hong)]","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"[[portfolio](team/wui-hong.md)]","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"* Role: Software Engineer","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"* Responsibilities: Development, Documentation, Project Management","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"### Jeffrey Jian","lastModifiedDate":"2023-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/jeffrey-jian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"[[github](http://github.com/jeffrey-jian)]","lastModifiedDate":"2023-09-28"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"[[portfolio](team/jeffrey-jian.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"* Role: Software Engineer","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"* Responsibilities: Development, Code Quality, Scheduling","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jedkohjk":3,"nathanielcalimag":16,"ncduy0303":4,"-":28,"wui-hong":3,"jeffrey-jian":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"We would like to acknowledge the following third-party libraries, frameworks and sources for their use in Spend n Split:","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"**Development**","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"* **[Jackson](https://github.com/FasterXML/jackson)**: The Java JSON library for parsing and creating JSON for SnS.","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"* **[JUnit 5](https://junit.org/junit5/)**: The Java testing framework of SnS.","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"* **[Apache Common Numbers](https://github.com/apache/commons-numbers/tree/master)**: The Java numbers library that enhance SnS\u0027 precision.","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"**Gradle**","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"* **[Checkstyle](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)**: The Gradle plugin that ensures consistent and appropriate code style.","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"* **[Shadow](https://github.com/johnrengelman/shadow)**: The Gradle plugin for creating fat JARs for SnS.","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"* **[Jacoco](https://github.com/palantir/gradle-jacoco-coverage)**: The Gradle plugin for generating code coverage reports.","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"**User Interface**","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"* **[JavaFX](https://openjfx.io/)**: The GUI framework of SnS.","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"* **[Poppins Font](https://fonts.google.com/specimen/Poppins)**: The primary font used in SnS.","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"* **[Tailwind CSS Colors](https://tailwindcss.com/docs/customizing-colors)**: The colour palette that inspired the SnS colour scheme.","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"**Others**","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"* **[Address Book 3](https://se-education.org/addressbook-level3/)**: The project SnS is based on.","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"* **[Jekyll](https://github.com/jekyll/jekyll)**: The static site generator that converts SnS markdown documentation into web pages.","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W17-3/tp/blob/master/src/main/java/seedu/spendnsplit/ui/Ui.java)","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel` etc. Some parts are made up of even smaller parts. All of these parts, including the `MainWindow`, are subclasses of the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI. ","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"Some parts (`PersonListPanel`, `TransactionListPanel`, `PersonCard`, `CommandBox`, `ResultDisplay`, `HelpWindow`) inherit from `UiPartFocusable` (a subclass of `UiPart`) which enables the to be focused on. This is used for the keyboard navigation feature as `MainWindow` keeps track of the currently focused part and can switch focus to another part when certain keyboard shortcuts are pressed.","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W17-3/tp/blob/master/src/main/java/seedu/spendnsplit/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W17-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Transaction` objects residing in the `Model`.","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"nathanielcalimag"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and all `Transaction` objects (which are contained in a `UniqueTransactionList` object).","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"nathanielcalimag"},"content":"* stores the currently \u0027selected\u0027 `Person` and `Transaction` objects (e.g., results of a search query) as separate _filtered_ lists which are exposed to outsiders as unmodifiable `ObservableList\u003cPerson\u003e` and `ObservableList\u003cTransaction\u003e` lists that can be \u0027observed\u0027 e.g. the UI can be bound to these lists so that the UI automatically updates when the data in the lists change.","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"ncduy0303"},"content":"### Keyboard Navigation Feature","lastModifiedDate":"2023-11-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":191,"author":{"gitId":"ncduy0303"},"content":"#### Overview","lastModifiedDate":"2023-11-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":193,"author":{"gitId":"ncduy0303"},"content":"The keyboard navigation feature allows users to navigate between different UI components using predefined keyboard shortcuts. This feature enhances fast-typing users\u0027 experience by allowing them to navigate the UI without having to use the mouse.","lastModifiedDate":"2023-11-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":195,"author":{"gitId":"ncduy0303"},"content":"#### Implementation","lastModifiedDate":"2023-11-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":197,"author":{"gitId":"ncduy0303"},"content":"The implementation of this feature is centered in the `MainWindow` class, which acts as the primary UI container for the application. Within `MainWindow`, two key methods are used: [`setKeyNavigation`](https://github.com/AY2324S1-CS2103T-W17-3/tp/blob/master/src/main/java/seedu/spendnsplit/ui/MainWindow.java#L148) and [`setKeyNavigations`](https://github.com/AY2324S1-CS2103T-W17-3/tp/blob/master/src/main/java/seedu/spendnsplit/ui/MainWindow.java#L115). The `setKeyNavigations` utilizes `setKeyNavigation` to assign specific keyboard events to different UI parts.","lastModifiedDate":"2023-11-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":199,"author":{"gitId":"ncduy0303"},"content":"The [`focusedUiPart`](https://github.com/AY2324S1-CS2103T-W17-3/tp/blob/master/src/main/java/seedu/spendnsplit/ui/MainWindow.java#L34) field in `MainWindow` keeps track of the currently focused UI part. When the user presses a key combination that matches the one assigned to a UI part, the currently focused UI part (if existed) will be unfocused and then assigned to the newly focused UI part. The newly focused UI part will then be focused.","lastModifiedDate":"2023-11-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":201,"author":{"gitId":"jedkohjk"},"content":"### Person-related Features","lastModifiedDate":"2023-11-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"ncduy0303"},"content":"![Overview of Person Class](images/PersonClassDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"ncduy0303"},"content":"The `Person` class is the main class in the `seedu.addressbook.person` package. It represents a person in the application and is composed of the following classes:","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"* `Name`: The name of the person. It must be unique and cannot be null.","lastModifiedDate":"2023-11-12"},{"lineNumber":208,"author":{"gitId":"ncduy0303"},"content":"* `Phone`: The phone number of the person.","lastModifiedDate":"2023-11-11"},{"lineNumber":209,"author":{"gitId":"ncduy0303"},"content":"* `Email`: The email address of the person.","lastModifiedDate":"2023-11-11"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"* `Address`: The address of the person.","lastModifiedDate":"2023-11-11"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"* `TelegramHandle`: The telegram handle of the person.","lastModifiedDate":"2023-11-11"},{"lineNumber":212,"author":{"gitId":"ncduy0303"},"content":"* `Tags`: The tags associated with the person.","lastModifiedDate":"2023-11-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"ncduy0303"},"content":"All `Person` objects are stored in `UniquePersonList` in `Model`.","lastModifiedDate":"2023-11-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":216,"author":{"gitId":"ncduy0303"},"content":"#### Adding a Person","lastModifiedDate":"2023-11-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":218,"author":{"gitId":"ncduy0303"},"content":"The `addPerson` command creates a new `Person` object with the details provided by the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":220,"author":{"gitId":"ncduy0303"},"content":"The activity diagram below shows an overview of the `addPerson` command:","lastModifiedDate":"2023-11-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":222,"author":{"gitId":"ncduy0303"},"content":"![Overview of the `addPerson` Command](images/AddPersonActivityDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":224,"author":{"gitId":"ncduy0303"},"content":"The sequence diagram below shows the interactions within the `Logic` component when user runs the `addPerson` command:","lastModifiedDate":"2023-11-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":226,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Logic Component for the `addPerson` Command](images/AddPersonSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":228,"author":{"gitId":"ncduy0303"},"content":"The overall flow of the `addPerson` command is as follows:","lastModifiedDate":"2023-11-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":230,"author":{"gitId":"ncduy0303"},"content":"1. The user specifies the details of the person to be added. Note that name is the only mandatory field.","lastModifiedDate":"2023-11-11"},{"lineNumber":231,"author":{"gitId":"ncduy0303"},"content":"2. The parsers check for the presence of the mandatory name field as well as the validity of all provided fields. Errors are raised if any of the fields are invalid.","lastModifiedDate":"2023-11-11"},{"lineNumber":232,"author":{"gitId":"ncduy0303"},"content":"3. Upon successful parsing, the `AddPersonCommand` is created with the person object to be added to the model.","lastModifiedDate":"2023-11-11"},{"lineNumber":233,"author":{"gitId":"ncduy0303"},"content":"4. The `AddPersonCommand` is executed by the `LogicManager`, which attempts to add the person to the model through `Model::addPerson(newPerson)`. Errors are raised if the person already exists in the model (duplicate name).","lastModifiedDate":"2023-11-11"},{"lineNumber":234,"author":{"gitId":"ncduy0303"},"content":"5. Upon successful execution, a `CommandResult` object is returned which contains the success message to be displayed to the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"ncduy0303"},"content":"#### Editing a Person","lastModifiedDate":"2023-11-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":238,"author":{"gitId":"ncduy0303"},"content":"The `editPerson` command edits an existing `Person` object with the details provided by the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":240,"author":{"gitId":"ncduy0303"},"content":"The activity diagram below shows an overview of the `editPerson` command:","lastModifiedDate":"2023-11-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":242,"author":{"gitId":"ncduy0303"},"content":"![Overview of the `editPerson` Command](images/EditPersonActivityDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":244,"author":{"gitId":"ncduy0303"},"content":"The sequence diagram below shows the interactions within the `Logic` component when user runs the `editPerson` command:","lastModifiedDate":"2023-11-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":246,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Logic Component for the `editPerson` Command](images/EditPersonSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":247,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":248,"author":{"gitId":"ncduy0303"},"content":"Since the `editPerson` command might affect the `Transaction` objects stored in the model, the sequence diagram below extends the previous sequence diagram to show the interactions within the `Model` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":249,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":250,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Model Component for the `editPerson` Command](images/EditPersonSequenceDiagram2.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":251,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":252,"author":{"gitId":"ncduy0303"},"content":"Key points to note:","lastModifiedDate":"2023-11-12"},{"lineNumber":253,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":254,"author":{"gitId":"ncduy0303"},"content":"- `UniquePersonList::setPerson` updates the `Person` object in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":255,"author":{"gitId":"ncduy0303"},"content":"- `UniqueTransactionList::setPerson` changes the `Name` fields of all `Transaction` objects in the list that involve the person to be edited to the new name.","lastModifiedDate":"2023-11-12"},{"lineNumber":256,"author":{"gitId":"ncduy0303"},"content":"- `SpendNSplit::syncNames` ensures the consistency of the casing of all `Name` fields in the model after the command.","lastModifiedDate":"2023-11-12"},{"lineNumber":257,"author":{"gitId":"ncduy0303"},"content":"- `SpendNSplit::sortPersons` ensures the consistency of the ordering of all `Person` objects in the model after the command.","lastModifiedDate":"2023-11-12"},{"lineNumber":258,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":259,"author":{"gitId":"ncduy0303"},"content":"The overall flow of the `editPerson` command is as follows:","lastModifiedDate":"2023-11-11"},{"lineNumber":260,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":261,"author":{"gitId":"ncduy0303"},"content":"1. The user specifies the index of the person to be edited and the details to be edited.","lastModifiedDate":"2023-11-11"},{"lineNumber":262,"author":{"gitId":"ncduy0303"},"content":"2. The parsers check for the presence of the mandatory index field as well as the validity of all provided fields. Errors are raised if any of the fields are invalid.","lastModifiedDate":"2023-11-11"},{"lineNumber":263,"author":{"gitId":"ncduy0303"},"content":"3. Upon successful parsing, the `EditPersonCommand` is created with the index of the person to be edited and the details to be edited expressed as an `PersonDescriptor` object.","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"ncduy0303"},"content":"4. The `EditPersonCommand` is executed by the `LogicManager`, which attempts to edit the person in the model through `Model::setPerson(personToEdit, editedPerson)`. Errors are raised if the index exceeds the number of persons currently displayed in `Model::getFilteredPersonList()` or if the edited person already exists in the model (duplicate name).","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"ncduy0303"},"content":"5. Upon successful execution, a `CommandResult` object is returned which contains the success message to be displayed to the user. ","lastModifiedDate":"2023-11-11"},{"lineNumber":266,"author":{"gitId":"ncduy0303"},"content":"6. Note that the displayed list of persons will be updated to show all persons in the model after the edit through `Model::updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)`.","lastModifiedDate":"2023-11-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"ncduy0303"},"content":"#### Deleting a Person","lastModifiedDate":"2023-11-11"},{"lineNumber":269,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":270,"author":{"gitId":"ncduy0303"},"content":"The `deletePerson` command deletes an existing `Person` object.","lastModifiedDate":"2023-11-11"},{"lineNumber":271,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"ncduy0303"},"content":"The activity diagram below shows an overview of the `deletePerson` command:","lastModifiedDate":"2023-11-12"},{"lineNumber":273,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":274,"author":{"gitId":"ncduy0303"},"content":"![Overview of the `deletePerson` Command](images/DeletePersonActivityDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":275,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":276,"author":{"gitId":"ncduy0303"},"content":"The sequence diagram below shows the interactions within the `Logic` component when user runs the `deletePerson` command:","lastModifiedDate":"2023-11-11"},{"lineNumber":277,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":278,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Logic Component for the `deletePerson` Command](images/DeletePersonSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":279,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":280,"author":{"gitId":"ncduy0303"},"content":"Since the `deletePerson` command might affect the `Transaction` objects stored in the model, the sequence diagram below extends the previous sequence diagram to show the interactions within the `Model` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":281,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":282,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Model Component for the `deletePerson` Command](images/DeletePersonSequenceDiagram2.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":283,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":284,"author":{"gitId":"ncduy0303"},"content":"Key points to note:","lastModifiedDate":"2023-11-12"},{"lineNumber":285,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":286,"author":{"gitId":"ncduy0303"},"content":"- `UniquePersonList::remove` removes the `Person` object from the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":287,"author":{"gitId":"ncduy0303"},"content":"- `UniqueTransactionList::deletePerson` updates the `Name` fields of all `Transaction` objects in the list that involve the person to be deleted to `Name.OTHERS`. If the updated `Transaction` object is not valid (not involving any other known person), it is removed from the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":288,"author":{"gitId":"ncduy0303"},"content":"- `SpendNSplit::sortPersons` ensures the consistency of the ordering of all `Person` objects in the model after the command.","lastModifiedDate":"2023-11-12"},{"lineNumber":289,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":290,"author":{"gitId":"ncduy0303"},"content":"The overall flow of the `deletePerson` command is as follows:","lastModifiedDate":"2023-11-11"},{"lineNumber":291,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"ncduy0303"},"content":"1. The user specifies the index of the person to be deleted.","lastModifiedDate":"2023-11-11"},{"lineNumber":293,"author":{"gitId":"ncduy0303"},"content":"2. The parsers check for the presence of the mandatory index field. Errors are raised if the index is invalid.","lastModifiedDate":"2023-11-11"},{"lineNumber":294,"author":{"gitId":"ncduy0303"},"content":"3. Upon successful parsing, the `DeletePersonCommand` is created with the index of the person to be deleted.","lastModifiedDate":"2023-11-11"},{"lineNumber":295,"author":{"gitId":"ncduy0303"},"content":"4. The `DeletePersonCommand` is executed by the `LogicManager`, which attempts to delete the person from the model through `Model::deletePerson(personToDelete)`. Errors are raised if the index exceeds the number of persons currently displayed in `Model::getFilteredPersonList()`.","lastModifiedDate":"2023-11-11"},{"lineNumber":296,"author":{"gitId":"ncduy0303"},"content":"5. Upon successful execution, a `CommandResult` object is returned which contains the success message to be displayed to the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"ncduy0303"},"content":"#### Listing Persons","lastModifiedDate":"2023-11-11"},{"lineNumber":299,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":300,"author":{"gitId":"ncduy0303"},"content":"The `listPerson` command lists existing `Person` objects with names matching the keywords provided by the user. If no keywords are provided, all `Person` objects are listed.","lastModifiedDate":"2023-11-11"},{"lineNumber":301,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":302,"author":{"gitId":"ncduy0303"},"content":"The activity diagram below shows an overview of the `listPerson` command:","lastModifiedDate":"2023-11-12"},{"lineNumber":303,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":304,"author":{"gitId":"ncduy0303"},"content":"![Overview of the `listPerson` Command](images/ListPersonActivityDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":305,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":306,"author":{"gitId":"ncduy0303"},"content":"The sequence diagram below shows the interactions within the `Logic` component when user runs the `listPerson` command:","lastModifiedDate":"2023-11-11"},{"lineNumber":307,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":308,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Logic Component for the `listPerson` Command](images/ListPersonSequenceDiagram.png)","lastModifiedDate":"2023-11-11"},{"lineNumber":309,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":310,"author":{"gitId":"ncduy0303"},"content":"The overall flow of the `listPerson` command is as follows:","lastModifiedDate":"2023-11-11"},{"lineNumber":311,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":312,"author":{"gitId":"ncduy0303"},"content":"1. The user specifies the keywords to be matched.","lastModifiedDate":"2023-11-11"},{"lineNumber":313,"author":{"gitId":"ncduy0303"},"content":"2. The parsers check for the validity of the provided keywords. Errors are raised if the keywords are invalid.","lastModifiedDate":"2023-11-11"},{"lineNumber":314,"author":{"gitId":"ncduy0303"},"content":"3. Upon successful parsing, the `ListPersonCommand` is created with the keywords to be matched expressed as a `NameContainsKeywordsPredicate` object which implements the `Predicate\u003cPerson\u003e` interface.","lastModifiedDate":"2023-11-11"},{"lineNumber":315,"author":{"gitId":"ncduy0303"},"content":"4. The `ListPersonCommand` is executed by the `LogicManager`, which attempts to update the displayed list of persons through `Model::updateFilteredPersonList(predicate)`.","lastModifiedDate":"2023-11-11"},{"lineNumber":316,"author":{"gitId":"ncduy0303"},"content":"5. Upon successful execution, a `CommandResult` object is returned which contains the success message to be displayed to the user.","lastModifiedDate":"2023-11-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"jedkohjk"},"content":"#### Sorting Persons","lastModifiedDate":"2023-11-10"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"ncduy0303"},"content":"The `sortPerson` command sorts displayed `Person` objects by the specified order.","lastModifiedDate":"2023-11-12"},{"lineNumber":321,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":322,"author":{"gitId":"ncduy0303"},"content":"The activity diagram below shows an overview of the `sortPerson` command:","lastModifiedDate":"2023-11-12"},{"lineNumber":323,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":324,"author":{"gitId":"ncduy0303"},"content":"![Overview of the `sortPerson` Command](images/SortPersonActivityDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":325,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":326,"author":{"gitId":"ncduy0303"},"content":"The sequence diagram below shows the interactions within the `Logic` component when user runs the `sortPerson` command:","lastModifiedDate":"2023-11-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":328,"author":{"gitId":"ncduy0303"},"content":"![Interactions Inside the Logic Component for the `sortPerson` Command](images/SortPersonSequenceDiagram.png)","lastModifiedDate":"2023-11-12"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":330,"author":{"gitId":"ncduy0303"},"content":"The overall flow of the `sortPerson` command is as follows:","lastModifiedDate":"2023-11-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":332,"author":{"gitId":"ncduy0303"},"content":"1. The user specifies the order to be sorted by. It is the only mandatory field and must be `+` (ascending) or `-` (descending).","lastModifiedDate":"2023-11-12"},{"lineNumber":333,"author":{"gitId":"ncduy0303"},"content":"2. The parsers check for the validity of the provided order. Errors are raised if the order is invalid.","lastModifiedDate":"2023-11-12"},{"lineNumber":334,"author":{"gitId":"ncduy0303"},"content":"3. Upon successful parsing, the `SortPersonCommand` is created with the order to be sorted by expressed as a boolean value.","lastModifiedDate":"2023-11-12"},{"lineNumber":335,"author":{"gitId":"ncduy0303"},"content":"4. The `SortPersonCommand` is executed by the `LogicManager`, which attempts to update the displayed list of persons through `Model::sortPersonAscending()` or `Model::sortPersonDescending()`.","lastModifiedDate":"2023-11-12"},{"lineNumber":336,"author":{"gitId":"ncduy0303"},"content":"5. Upon successful execution, a `CommandResult` object is returned which contains the success message to be displayed to the user.","lastModifiedDate":"2023-11-12"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":338,"author":{"gitId":"jedkohjk"},"content":"### Transaction-related Features","lastModifiedDate":"2023-11-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"jedkohjk"},"content":"#### Adding Transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"jedkohjk"},"content":"##### Settling Balances","lastModifiedDate":"2023-11-10"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"jedkohjk"},"content":"#### Editing Transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":346,"author":{"gitId":"jeffrey-jian"},"content":"Editing transactions mechanism is facilitated by `EditTransactionCommand`. It extends `Command` with the ability to edit a transaction.","lastModifiedDate":"2023-10-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":348,"author":{"gitId":"jeffrey-jian"},"content":"It consists of the following classes:","lastModifiedDate":"2023-10-24"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":350,"author":{"gitId":"jeffrey-jian"},"content":"* `EditTransactionCommand`— Represents a command to edit a transaction.","lastModifiedDate":"2023-10-24"},{"lineNumber":351,"author":{"gitId":"jeffrey-jian"},"content":"* `EditTransactionCommandParser`— Parses user input into a `EditTransactionCommand`.","lastModifiedDate":"2023-10-24"},{"lineNumber":352,"author":{"gitId":"jeffrey-jian"},"content":"* `EditTransactionDescriptor`— Stores the details to edit the transaction with. Each non-empty field value will replace the corresponding field value of the transaction.","lastModifiedDate":"2023-10-24"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":354,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/EditTransactionCommandDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":356,"author":{"gitId":"jeffrey-jian"},"content":"**Note**: The above class diagram is to be updated to reflect the new implementation, with the addition of `UpdateExpenseCommand`.","lastModifiedDate":"2023-10-24"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":358,"author":{"gitId":"jeffrey-jian"},"content":"Upon execution, `EditTransactionCommand` will retrieve the transaction to be edited from `filteredTransactionList` from `Model`, create a copy of the `Transaction` object with the new details, then replace the old `Transaction` object with the new one in `filteredTransactionList`.","lastModifiedDate":"2023-10-24"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":360,"author":{"gitId":"jeffrey-jian"},"content":"We chose this method of execution instead of directly editing the `Transaction` object in `filteredTransactionList` because `Model` re-renders the UI only when `filteredTransactionList` is updated. If we were to edit the `Transaction` object directly, `Model` would not be able to detect the change and re-render the UI.","lastModifiedDate":"2023-10-24"},{"lineNumber":361,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":362,"author":{"gitId":"jedkohjk"},"content":"##### Updating Portions","lastModifiedDate":"2023-11-10"},{"lineNumber":363,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":364,"author":{"gitId":"jedkohjk"},"content":"#### Deleting Transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":365,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":366,"author":{"gitId":"jedkohjk"},"content":"#### Duplicating Transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":368,"author":{"gitId":"jedkohjk"},"content":"#### Filtering Transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":369,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":370,"author":{"gitId":"jedkohjk"},"content":"### Other Features","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":372,"author":{"gitId":"jedkohjk"},"content":"#### Setting Shorthands","lastModifiedDate":"2023-11-10"},{"lineNumber":373,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"jeffrey-jian"},"content":"##### Overview","lastModifiedDate":"2023-11-12"},{"lineNumber":375,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":376,"author":{"gitId":"jeffrey-jian"},"content":"The `setShorthand` command allows users to set a shorthand, or alias for an existing command. This shorthand can then be used in place of the command.","lastModifiedDate":"2023-11-12"},{"lineNumber":377,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":378,"author":{"gitId":"jeffrey-jian"},"content":"The activity diagram is as follows:","lastModifiedDate":"2023-11-12"},{"lineNumber":379,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":380,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/SetShorthandCommandActivityDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":381,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":382,"author":{"gitId":"jeffrey-jian"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component and `Model` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":383,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":384,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/SetShorthandCommandSequenceDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":385,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":386,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/SetShorthandCommandSequenceDiagram2.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":387,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":388,"author":{"gitId":"jeffrey-jian"},"content":"##### Feature Details","lastModifiedDate":"2023-11-12"},{"lineNumber":389,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":390,"author":{"gitId":"jeffrey-jian"},"content":"1. The user specifies the original command and the new shorthand in the `setShorthand` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":391,"author":{"gitId":"jeffrey-jian"},"content":"2. If the original command is invalid or does not exist, the user will be informed of the error.","lastModifiedDate":"2023-11-12"},{"lineNumber":392,"author":{"gitId":"jeffrey-jian"},"content":"3. If the shorthand is already an existing original command, the user will be informed of the error.","lastModifiedDate":"2023-11-12"},{"lineNumber":393,"author":{"gitId":"jeffrey-jian"},"content":"4. If the shorthand is already being used as a shorthand for another command, the user will be informed of the error.","lastModifiedDate":"2023-11-12"},{"lineNumber":394,"author":{"gitId":"jeffrey-jian"},"content":"5. If the original command has an existing shorthand, the new shorthand will replace the existing shorthand.","lastModifiedDate":"2023-11-12"},{"lineNumber":395,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":396,"author":{"gitId":"jeffrey-jian"},"content":"##### Implementation Considerations","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":398,"author":{"gitId":"jeffrey-jian"},"content":"All existing commands are stored in a hashset. Newly created shorthands are stored in a hashmap. ","lastModifiedDate":"2023-11-12"},{"lineNumber":399,"author":{"gitId":"jeffrey-jian"},"content":"Upon executing a new command, the parser looks up the command word in the existing commands hashset first.","lastModifiedDate":"2023-11-12"},{"lineNumber":400,"author":{"gitId":"jeffrey-jian"},"content":"If the command word does not exist within the hashset, the parser then looks up the command word in the shorthands hashmap.","lastModifiedDate":"2023-11-12"},{"lineNumber":401,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":402,"author":{"gitId":"jeffrey-jian"},"content":"The shorthand allows each original command to have up to one and only one shorthand.","lastModifiedDate":"2023-11-12"},{"lineNumber":403,"author":{"gitId":"jeffrey-jian"},"content":"This is to prevent ambiguity when the user enters a shorthand that is used by multiple original commands, ","lastModifiedDate":"2023-11-12"},{"lineNumber":404,"author":{"gitId":"jeffrey-jian"},"content":"as well as confusion when an original command could have multiple shorthands.","lastModifiedDate":"2023-11-12"},{"lineNumber":405,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":406,"author":{"gitId":"jedkohjk"},"content":"#### Clearing App Data","lastModifiedDate":"2023-11-10"},{"lineNumber":407,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":408,"author":{"gitId":"jeffrey-jian"},"content":"##### Overview","lastModifiedDate":"2023-11-12"},{"lineNumber":409,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":410,"author":{"gitId":"jeffrey-jian"},"content":"The `clear` command allows users to clear all data stored in the app.","lastModifiedDate":"2023-11-12"},{"lineNumber":411,"author":{"gitId":"jeffrey-jian"},"content":"This includes all persons and transactions in the `spendnsplitbook.json` file,","lastModifiedDate":"2023-11-12"},{"lineNumber":412,"author":{"gitId":"jeffrey-jian"},"content":"as well as all shorthands in the `preferences.json` file.","lastModifiedDate":"2023-11-12"},{"lineNumber":413,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":414,"author":{"gitId":"jeffrey-jian"},"content":"This command is irreversible, and should be used with caution. This command is introduced for new users to be able to quickly","lastModifiedDate":"2023-11-12"},{"lineNumber":415,"author":{"gitId":"jeffrey-jian"},"content":"clear the sample data and start using the app with their own data. ","lastModifiedDate":"2023-11-12"},{"lineNumber":416,"author":{"gitId":"jeffrey-jian"},"content":"Should the user ever wish to clear the data and start afresh again in the future, they can also use this command.","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":418,"author":{"gitId":"jeffrey-jian"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component and `Model` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":419,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":420,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/ClearCommandSequenceDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":421,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":422,"author":{"gitId":"jeffrey-jian"},"content":"##### Feature Details","lastModifiedDate":"2023-11-12"},{"lineNumber":423,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":424,"author":{"gitId":"jeffrey-jian"},"content":"1. The user specifies the `clear` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":425,"author":{"gitId":"jeffrey-jian"},"content":"2. The app clears all data from its Storage, and displays empty person and transaction lists.","lastModifiedDate":"2023-11-12"},{"lineNumber":426,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":427,"author":{"gitId":"jedkohjk"},"content":"#### Accessing Help","lastModifiedDate":"2023-11-10"},{"lineNumber":428,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":429,"author":{"gitId":"jeffrey-jian"},"content":"##### Overview","lastModifiedDate":"2023-11-12"},{"lineNumber":430,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":431,"author":{"gitId":"jeffrey-jian"},"content":"The `help` command brings up the help window, which contains a URL link to the online user guide.","lastModifiedDate":"2023-11-12"},{"lineNumber":432,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":433,"author":{"gitId":"jeffrey-jian"},"content":"The sequence diagram below illustrates the interactions within the `Ui`, `Logic` and `Model` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":434,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":435,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/HelpCommandSequenceDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":436,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":437,"author":{"gitId":"jeffrey-jian"},"content":"##### Feature Details","lastModifiedDate":"2023-11-12"},{"lineNumber":438,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":439,"author":{"gitId":"jeffrey-jian"},"content":"1. The user specifies the `help` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":440,"author":{"gitId":"jeffrey-jian"},"content":"2. The app opens the help window and centers it on the screen.","lastModifiedDate":"2023-11-12"},{"lineNumber":441,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":442,"author":{"gitId":"jedkohjk"},"content":"#### Exiting the App","lastModifiedDate":"2023-11-10"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"jeffrey-jian"},"content":"##### Overview","lastModifiedDate":"2023-11-12"},{"lineNumber":445,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":446,"author":{"gitId":"jeffrey-jian"},"content":"The `exit` command exits the app. This closes the app window (including the help window if opened) and terminates the app.","lastModifiedDate":"2023-11-12"},{"lineNumber":447,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":448,"author":{"gitId":"jeffrey-jian"},"content":"The sequence diagram below illustrates the interactions within the `Ui`, `Logic` and `Model` component:","lastModifiedDate":"2023-11-12"},{"lineNumber":449,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":450,"author":{"gitId":"jeffrey-jian"},"content":"\u003cimg src\u003d\"images/ExitCommandSequenceDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":451,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":452,"author":{"gitId":"jeffrey-jian"},"content":"##### Feature Details","lastModifiedDate":"2023-11-12"},{"lineNumber":453,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":454,"author":{"gitId":"jeffrey-jian"},"content":"1. The user specifies the `exit` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":455,"author":{"gitId":"jeffrey-jian"},"content":"2. The app closes the app window and terminates the app.","lastModifiedDate":"2023-11-12"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":457,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"jedkohjk"},"content":"**Target User Profile**: University students who live in hall","lastModifiedDate":"2023-10-02"},{"lineNumber":474,"author":{"gitId":"nathanielcalimag"},"content":"* needs to manage a significant number of contacts and transactions","lastModifiedDate":"2023-11-11"},{"lineNumber":475,"author":{"gitId":"nathanielcalimag"},"content":"* often splits expenses with other hallmates (for groceries, meals, events etc.)","lastModifiedDate":"2023-11-11"},{"lineNumber":476,"author":{"gitId":"nathanielcalimag"},"content":"* often has their laptop on hand and prefer desktop apps","lastModifiedDate":"2023-11-11"},{"lineNumber":477,"author":{"gitId":"nathanielcalimag"},"content":"* used to typing fast on their laptop","lastModifiedDate":"2023-11-11"},{"lineNumber":478,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-11-11"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"nathanielcalimag"},"content":"**Value Proposition**: The app will allow users to seamlessly keep track of the","lastModifiedDate":"2023-11-11"},{"lineNumber":481,"author":{"gitId":"nathanielcalimag"},"content":"money they owe/are owed across their contacts, in regard to borrowers/lenders and","lastModifiedDate":"2023-11-11"},{"lineNumber":482,"author":{"gitId":"nathanielcalimag"},"content":"their expenses. It is CLI-based and manages contacts faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-11-11"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"| Priority | As a …​       | I want to …​                            | So that I can…​                                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"nathanielcalimag"},"content":"|----------|---------------|-----------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2023-11-11"},{"lineNumber":490,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | new user      | see usage instructions                  | learn how to use the application easily                                 |","lastModifiedDate":"2023-11-11"},{"lineNumber":491,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | new user      | view sample contacts and transactions   | familiarise myself with the application\u0027s data                          |","lastModifiedDate":"2023-11-11"},{"lineNumber":492,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | add a new person                        | save new contacts for expense tracking                                  |","lastModifiedDate":"2023-11-11"},{"lineNumber":493,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | delete a person                         | remove contacts that I no longer need to track                          |","lastModifiedDate":"2023-11-11"},{"lineNumber":494,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | edit a person                           | update the details of a contact                                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":495,"author":{"gitId":"nathanielcalimag"},"content":"| `* *`    | user          | find a person by name                   | locate contact details quickly without searching through all contacts   |","lastModifiedDate":"2023-11-11"},{"lineNumber":496,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | add a transaction involving my contacts | track shared expenses with my contacts                                  |","lastModifiedDate":"2023-11-11"},{"lineNumber":497,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | delete a transaction                    | remove transactions that I no longer need to track                      |","lastModifiedDate":"2023-11-11"},{"lineNumber":498,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | edit a transaction                      | update the details of a transaction                                     |","lastModifiedDate":"2023-11-11"},{"lineNumber":499,"author":{"gitId":"nathanielcalimag"},"content":"| `* *`    | user          | duplicate a transaction                 | recreate similar transactions easily                                    |","lastModifiedDate":"2023-11-11"},{"lineNumber":500,"author":{"gitId":"nathanielcalimag"},"content":"| `* *`    | user          | add recurring transactions              | automatically create regular transactions                               |","lastModifiedDate":"2023-11-11"},{"lineNumber":501,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | view balances with a person             | track how much I owe or am owed from a person                           |","lastModifiedDate":"2023-11-11"},{"lineNumber":502,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | settle my balance with a person         | clear any outstanding debts with a person from all transactions at once |","lastModifiedDate":"2023-11-11"},{"lineNumber":503,"author":{"gitId":"nathanielcalimag"},"content":"| `* * *`  | user          | find transactions by a person\u0027s name    | view transactions that involve a specific person                        |","lastModifiedDate":"2023-11-11"},{"lineNumber":504,"author":{"gitId":"nathanielcalimag"},"content":"| `* *`    | user          | sort my contacts by balance             | view the largest outstanding balances within my contacts                |","lastModifiedDate":"2023-11-11"},{"lineNumber":505,"author":{"gitId":"nathanielcalimag"},"content":"| `*`      | advanced user | add a command alias                     | type common commands quickly through shorthands                         |","lastModifiedDate":"2023-11-11"},{"lineNumber":506,"author":{"gitId":"nathanielcalimag"},"content":"| `*`      | advanced user | delete a command alias                  | remove shorthands that I no longer need                                 |","lastModifiedDate":"2023-11-11"},{"lineNumber":507,"author":{"gitId":"nathanielcalimag"},"content":"| `*`      | advanced user | edit a command alias                    | update shorthands                                                       |","lastModifiedDate":"2023-11-11"},{"lineNumber":508,"author":{"gitId":"nathanielcalimag"},"content":"| `*`      | user          | add attachments to transactions         | verify my transactions using receipts that I can refer to               |","lastModifiedDate":"2023-11-11"},{"lineNumber":509,"author":{"gitId":"nathanielcalimag"},"content":"| `*`      | user          | undo my last command                    | recover from a command I have ran by mistake                            |","lastModifiedDate":"2023-11-11"},{"lineNumber":510,"author":{"gitId":"nathanielcalimag"},"content":"| `*`      | user          | redo my last undo                       | reverse an undo command I ran by mistake                                |","lastModifiedDate":"2023-11-11"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"jeffrey-jian"},"content":"(For all use cases below, the **System** is the `Spend n Split` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":519,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":520,"author":{"gitId":"jeffrey-jian"},"content":"**Use Case: UC1 - Listing all Persons**","lastModifiedDate":"2023-10-05"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"jeffrey-jian"},"content":"1. User requests to view all contacts in the contact list.","lastModifiedDate":"2023-10-03"},{"lineNumber":525,"author":{"gitId":"jeffrey-jian"},"content":"2. Spend n Split shows a list of contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-05"},{"lineNumber":530,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. The user can include a flag to sort the list by name.","lastModifiedDate":"2023-10-05"},{"lineNumber":531,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split shows the list of contacts now sorted by name.","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 4.","lastModifiedDate":"2023-10-05"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":534,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":536,"author":{"gitId":"jeffrey-jian"},"content":"**Use Case: UC2 - Adding a New Person**","lastModifiedDate":"2023-10-05"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":538,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":540,"author":{"gitId":"jeffrey-jian"},"content":"1. User requests to add a new person.","lastModifiedDate":"2023-10-05"},{"lineNumber":541,"author":{"gitId":"jeffrey-jian"},"content":"2. Spend n Split informs the user that the new person has been added.","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"jeffrey-jian"},"content":"3. Spend n Split shows the updated contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":544,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":546,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-05"},{"lineNumber":547,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. Spend n Split detects that the person already exists in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":548,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split informs the user that the person already exists in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":549,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":550,"author":{"gitId":"jeffrey-jian"},"content":"* 1b. Spend n Split detects an error in the entered data for the new person.","lastModifiedDate":"2023-10-05"},{"lineNumber":551,"author":{"gitId":"jeffrey-jian"},"content":"  * 1b1. Spend n Split informs the user that the data entered is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"jeffrey-jian"},"content":"  * 1b2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"jeffrey-jian"},"content":"**Use Case: UC3 - Editing a Person**","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":560,"author":{"gitId":"jeffrey-jian"},"content":"1. User requests to edit a person.","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"jeffrey-jian"},"content":"2. Spend n Split informs the user that the person has been edited.","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"jeffrey-jian"},"content":"3. Spend n Split shows the updated contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. Spend n Split detects that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":568,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split informs the user that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":569,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":570,"author":{"gitId":"jeffrey-jian"},"content":"* 1b. Spend n Split detects an error in the entered data for the person.","lastModifiedDate":"2023-10-05"},{"lineNumber":571,"author":{"gitId":"jeffrey-jian"},"content":"  * 1b1. Spend n Split informs the user that the data entered is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":572,"author":{"gitId":"jeffrey-jian"},"content":"  * 1b2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":573,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":574,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":575,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":576,"author":{"gitId":"jeffrey-jian"},"content":"**Use Case: UC4 - Deleting a Person**","lastModifiedDate":"2023-10-05"},{"lineNumber":577,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":578,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":579,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":580,"author":{"gitId":"jeffrey-jian"},"content":"1. User requests to delete a person.","lastModifiedDate":"2023-10-05"},{"lineNumber":581,"author":{"gitId":"jeffrey-jian"},"content":"2. Spend n Split informs the user that the person has been deleted.","lastModifiedDate":"2023-10-05"},{"lineNumber":582,"author":{"gitId":"jeffrey-jian"},"content":"3. Spend n Split shows the updated contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":583,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":584,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":585,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":586,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-05"},{"lineNumber":587,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. Spend n Split detects that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":588,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split informs the user that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":589,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":591,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":592,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":593,"author":{"gitId":"jeffrey-jian"},"content":"**Use Case: UC5 - Finding a Person**","lastModifiedDate":"2023-10-05"},{"lineNumber":594,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":595,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":596,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":597,"author":{"gitId":"jeffrey-jian"},"content":"1. User requests to find a person.","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"jeffrey-jian"},"content":"2. Spend n Split shows the list of persons that match the search query.","lastModifiedDate":"2023-10-05"},{"lineNumber":599,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":600,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":601,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"jeffrey-jian"},"content":"**Use Case: UC# - Clear All Persons**","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":604,"author":{"gitId":"jeffrey-jian"},"content":"TODO: Internal note: let\u0027s remove / amend this feature, this command is too powerful and destructive.","lastModifiedDate":"2023-10-05"},{"lineNumber":605,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":606,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":607,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"ncduy0303"},"content":"**Use Case: UC6 - Listing all Transactions with a Person**","lastModifiedDate":"2023-10-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"jeffrey-jian"},"content":"Preconditions: Person exists in the contact list.","lastModifiedDate":"2023-10-03"},{"lineNumber":611,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":612,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":613,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":614,"author":{"gitId":"ncduy0303"},"content":"1. User requests to view the transaction list involving a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":615,"author":{"gitId":"ncduy0303"},"content":"2. Spend n Split shows the list of transactions involving that person.","lastModifiedDate":"2023-10-23"},{"lineNumber":616,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":617,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-03"},{"lineNumber":620,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. Person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":621,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split informs the user that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":622,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":623,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":624,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":625,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":626,"author":{"gitId":"ncduy0303"},"content":"**Use Case: UC7 - Add a New Transaction**","lastModifiedDate":"2023-10-23"},{"lineNumber":627,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":628,"author":{"gitId":"jeffrey-jian"},"content":"Preconditions: Person exists in the contact list.","lastModifiedDate":"2023-10-03"},{"lineNumber":629,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":630,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":631,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":632,"author":{"gitId":"ncduy0303"},"content":"1. User requests to add a new transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":633,"author":{"gitId":"ncduy0303"},"content":"2. Spend n Split informs the user that the new transaction has been added.","lastModifiedDate":"2023-10-23"},{"lineNumber":634,"author":{"gitId":"ncduy0303"},"content":"3. Spend n Split shows the updated transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-03"},{"lineNumber":639,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. Person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":640,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split informs the user that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":641,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"jeffrey-jian"},"content":"* 1b. Spend n Split detects an error in the request for the new person.","lastModifiedDate":"2023-10-05"},{"lineNumber":644,"author":{"gitId":"jeffrey-jian"},"content":"  * 1b1. Spend n Split informs the user that the request is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":645,"author":{"gitId":"jeffrey-jian"},"content":"  * 1b2. Use case resumes at step 1.","lastModifiedDate":"2023-10-05"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"ncduy0303"},"content":"**Use Case: UC8 - Edit a Transaction**","lastModifiedDate":"2023-10-23"},{"lineNumber":650,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":651,"author":{"gitId":"ncduy0303"},"content":"Preconditions: Transaction exists in the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":652,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":653,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":654,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":655,"author":{"gitId":"ncduy0303"},"content":"1. User requests to view the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":656,"author":{"gitId":"ncduy0303"},"content":"2. Spend n Split shows a list of transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":657,"author":{"gitId":"ncduy0303"},"content":"3. User requests to edit a transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":658,"author":{"gitId":"ncduy0303"},"content":"4. Spend n Split informs the user that the transaction has been edited.","lastModifiedDate":"2023-10-23"},{"lineNumber":659,"author":{"gitId":"ncduy0303"},"content":"5. Spend n Split shows the updated transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":660,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":661,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":662,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":663,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-03"},{"lineNumber":664,"author":{"gitId":"ncduy0303"},"content":"* 4a. Transaction does not exist in the portion list.","lastModifiedDate":"2023-10-23"},{"lineNumber":665,"author":{"gitId":"ncduy0303"},"content":"  * 4a1. Spend n Split informs the user that the transaction does not exist in the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":666,"author":{"gitId":"jeffrey-jian"},"content":"  * 4a2. Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":667,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":668,"author":{"gitId":"ncduy0303"},"content":"* 4b. Spend n Split detects an error in the request.","lastModifiedDate":"2023-10-23"},{"lineNumber":669,"author":{"gitId":"jeffrey-jian"},"content":"  * 4b1. Spend n Split informs the user that request is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":670,"author":{"gitId":"jeffrey-jian"},"content":"  * 4b2. Use case resumes at step 3.","lastModifiedDate":"2023-10-05"},{"lineNumber":671,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":672,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":673,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":674,"author":{"gitId":"ncduy0303"},"content":"**Use Case: UC9 - Settle with a person**","lastModifiedDate":"2023-10-23"},{"lineNumber":675,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":676,"author":{"gitId":"jeffrey-jian"},"content":"Preconditions: Person exists in the contact list.","lastModifiedDate":"2023-10-03"},{"lineNumber":677,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":678,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":679,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":680,"author":{"gitId":"ncduy0303"},"content":"1. User requests to settle with a person.","lastModifiedDate":"2023-10-23"},{"lineNumber":681,"author":{"gitId":"ncduy0303"},"content":"2. Spend n Split informs the user that all the outstanding balance with the person have been settled.","lastModifiedDate":"2023-10-23"},{"lineNumber":682,"author":{"gitId":"jeffrey-jian"},"content":"3. Spend n Split shows the list of contacts.","lastModifiedDate":"2023-10-05"},{"lineNumber":683,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":684,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":685,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":686,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-03"},{"lineNumber":687,"author":{"gitId":"jeffrey-jian"},"content":"* 1a. Person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":688,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a1. Spend n Split informs the user that the person does not exist in the contact list.","lastModifiedDate":"2023-10-05"},{"lineNumber":689,"author":{"gitId":"jeffrey-jian"},"content":"  * 1a2. Use case resumes at step 2.","lastModifiedDate":"2023-10-05"},{"lineNumber":690,"author":{"gitId":"nathanielcalimag"},"content":"* 1b. User does not have an outstanding balance with the person.","lastModifiedDate":"2023-10-25"},{"lineNumber":691,"author":{"gitId":"nathanielcalimag"},"content":"  * 1b1. Spend n Split informs the user that there is no outstanding balance with that person.","lastModifiedDate":"2023-10-25"},{"lineNumber":692,"author":{"gitId":"nathanielcalimag"},"content":"  * 1b2. Use case resumes at step 3.","lastModifiedDate":"2023-10-25"},{"lineNumber":693,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":694,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":695,"author":{"gitId":"ncduy0303"},"content":"**Use Case: UC10 - Delete a Transaction**","lastModifiedDate":"2023-10-23"},{"lineNumber":696,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":697,"author":{"gitId":"ncduy0303"},"content":"Preconditions: Transaction exists in the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":698,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":699,"author":{"gitId":"jeffrey-jian"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":700,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":701,"author":{"gitId":"ncduy0303"},"content":"1. User requests to view the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":702,"author":{"gitId":"ncduy0303"},"content":"2. Spend n Split shows a list of transactions.","lastModifiedDate":"2023-10-23"},{"lineNumber":703,"author":{"gitId":"ncduy0303"},"content":"3. User requests to delete a transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":704,"author":{"gitId":"ncduy0303"},"content":"4. Spend n Split informs the user that the transaction has been deleted.","lastModifiedDate":"2023-10-23"},{"lineNumber":705,"author":{"gitId":"ncduy0303"},"content":"5. Spend n Split shows the updated transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":706,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":707,"author":{"gitId":"jeffrey-jian"},"content":"Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":708,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":709,"author":{"gitId":"jeffrey-jian"},"content":"Extensions:","lastModifiedDate":"2023-10-03"},{"lineNumber":710,"author":{"gitId":"ncduy0303"},"content":"* 3a. Transaction does not exist in the portion list.","lastModifiedDate":"2023-10-23"},{"lineNumber":711,"author":{"gitId":"ncduy0303"},"content":"    * 3a1. Spend n Split informs the user that the transaction does not exist in the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":712,"author":{"gitId":"ncduy0303"},"content":"    * 3a2. Use case resumes at step 2.","lastModifiedDate":"2023-10-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"nathanielcalimag"},"content":"1.  The application should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-10-04"},{"lineNumber":719,"author":{"gitId":"nathanielcalimag"},"content":"2.  The application should be able to hold up to 1000 people without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":720,"author":{"gitId":"nathanielcalimag"},"content":"3.  A user with above average typing speed for regular English text (i.e, not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-04"},{"lineNumber":721,"author":{"gitId":"nathanielcalimag"},"content":"4.  The application should work without internet access.","lastModifiedDate":"2023-10-04"},{"lineNumber":722,"author":{"gitId":"nathanielcalimag"},"content":"5.  The application should not take more than 50MB of space.","lastModifiedDate":"2023-10-04"},{"lineNumber":723,"author":{"gitId":"nathanielcalimag"},"content":"6.  The user interface should be intuitive to new users. From the interface, users should easily find out how to write input, view output, and find the help guide.","lastModifiedDate":"2023-10-04"},{"lineNumber":724,"author":{"gitId":"ncduy0303"},"content":"7.  The application should be accurate when calculating portions, being able to handle the division of costs with precision.","lastModifiedDate":"2023-10-23"},{"lineNumber":725,"author":{"gitId":"nathanielcalimag"},"content":"8.  The application should store data to the hard disk consistently so that loading the data on a different device leads to the same application state.","lastModifiedDate":"2023-10-04"},{"lineNumber":726,"author":{"gitId":"nathanielcalimag"},"content":"9.  The GUI should organise and present data clearly so that users are able to read application details easily.","lastModifiedDate":"2023-10-04"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"ncduy0303"},"content":"**Application**","lastModifiedDate":"2023-10-23"},{"lineNumber":731,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":732,"author":{"gitId":"nathanielcalimag"},"content":"* **Contact**: A person stored in your application with additional information.","lastModifiedDate":"2023-10-04"},{"lineNumber":733,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"ncduy0303"},"content":"* **Transaction**: A monetary transaction that records costs involving a single contact who pays for the whole transaction and other contacts who are involved in the transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":735,"author":{"gitId":"ncduy0303"},"content":"* **Portion**: A breakdown of a transaction into individual portions, each of which involves a single contact and a weightage indicating the proportion of the transaction cost that the contact needs to pay to the person who paid for the transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":736,"author":{"gitId":"nathanielcalimag"},"content":"* **Balance**: The amount of money either owed to you or owed by you to another person in your contacts.","lastModifiedDate":"2023-10-04"},{"lineNumber":737,"author":{"gitId":"nathanielcalimag"},"content":"  * **Positive Balance**: Indicates that the contact owes you money.","lastModifiedDate":"2023-10-04"},{"lineNumber":738,"author":{"gitId":"nathanielcalimag"},"content":"  * **Negative Balance**: Indicates that you owe the contact money.","lastModifiedDate":"2023-10-04"},{"lineNumber":739,"author":{"gitId":"nathanielcalimag"},"content":"* **Outstanding Balance**: The amount of unsettled money between you and your contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":740,"author":{"gitId":"ncduy0303"},"content":"* **Settle**: The action of clearing any outstanding balance between you and another contact via a new portion.","lastModifiedDate":"2023-10-23"},{"lineNumber":741,"author":{"gitId":"wui-hong"},"content":"* **Payee**: The person that paid the bill for that specific transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":742,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":743,"author":{"gitId":"nathanielcalimag"},"content":"**General**","lastModifiedDate":"2023-10-04"},{"lineNumber":744,"author":{"gitId":"nathanielcalimag"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-10-04"},{"lineNumber":745,"author":{"gitId":"nathanielcalimag"},"content":"* **Command**: A text input from the user which tells the application to run a specific action.","lastModifiedDate":"2023-10-04"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"wui-hong"},"content":"### Deleting a transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":793,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":794,"author":{"gitId":"wui-hong"},"content":"1. Deleting a transaction while all transactions are being shown","lastModifiedDate":"2023-10-24"},{"lineNumber":795,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":796,"author":{"gitId":"wui-hong"},"content":"    1. Prerequisites: There already exist some transactions in the application.","lastModifiedDate":"2023-10-24"},{"lineNumber":797,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":798,"author":{"gitId":"wui-hong"},"content":"    1. Test case: `deleteTransaction 1`\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":799,"author":{"gitId":"wui-hong"},"content":"       Expected: First transaction is deleted from the list. Details of the deleted transaction shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-24"},{"lineNumber":800,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":801,"author":{"gitId":"wui-hong"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":802,"author":{"gitId":"wui-hong"},"content":"       Expected: No transaction is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-24"},{"lineNumber":803,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":804,"author":{"gitId":"wui-hong"},"content":"    1. Other incorrect delete commands to try: `deleteTransaction`, `deleteTransaction x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":805,"author":{"gitId":"wui-hong"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-10-24"},{"lineNumber":806,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":807,"author":{"gitId":"wui-hong"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-10-24"},{"lineNumber":808,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":809,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":817,"author":{"gitId":"nathanielcalimag"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-07"},{"lineNumber":818,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":819,"author":{"gitId":"nathanielcalimag"},"content":"## **Appendix: Effort**","lastModifiedDate":"2023-11-11"},{"lineNumber":820,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":821,"author":{"gitId":"nathanielcalimag"},"content":"### Summary","lastModifiedDate":"2023-11-11"},{"lineNumber":822,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":823,"author":{"gitId":"nathanielcalimag"},"content":"SpendNSplit is a brownfield software project based on the contacts-management application","lastModifiedDate":"2023-11-11"},{"lineNumber":824,"author":{"gitId":"nathanielcalimag"},"content":"[AddressBook Level-3 (AB3)](https://se-education.org/addressbook-level3/). Our dedicated team","lastModifiedDate":"2023-11-11"},{"lineNumber":825,"author":{"gitId":"nathanielcalimag"},"content":"has spent nearly 2 months evolving AB3 into a complex personal finance-tracking application","lastModifiedDate":"2023-11-11"},{"lineNumber":826,"author":{"gitId":"nathanielcalimag"},"content":"for university Hall students. This section describes some key challenges our team has faced.","lastModifiedDate":"2023-11-11"},{"lineNumber":827,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":828,"author":{"gitId":"nathanielcalimag"},"content":"### The relationship between transactions and persons","lastModifiedDate":"2023-11-11"},{"lineNumber":829,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":830,"author":{"gitId":"nathanielcalimag"},"content":"The `Transaction` entity is a core part of SnS, and its implementation was one of our","lastModifiedDate":"2023-11-11"},{"lineNumber":831,"author":{"gitId":"nathanielcalimag"},"content":"teams largest challenges. What\u0027s notable about `Transaction` is its relationship to","lastModifiedDate":"2023-11-11"},{"lineNumber":832,"author":{"gitId":"nathanielcalimag"},"content":"the `Person` entity. A person can be the payee of a transaction; the person who","lastModifiedDate":"2023-11-11"},{"lineNumber":833,"author":{"gitId":"nathanielcalimag"},"content":"footed the bill. Additionally, a person can be a payer of the transaction, owing the","lastModifiedDate":"2023-11-11"},{"lineNumber":834,"author":{"gitId":"nathanielcalimag"},"content":"payee a portion of the transaction\u0027s bill. A person can also be both the payee and","lastModifiedDate":"2023-11-11"},{"lineNumber":835,"author":{"gitId":"nathanielcalimag"},"content":"the payer of the bill. These entities are closely related via a many-to-many relationship,","lastModifiedDate":"2023-11-11"},{"lineNumber":836,"author":{"gitId":"nathanielcalimag"},"content":"which was incredibly challenging to design, implement and test.","lastModifiedDate":"2023-11-11"},{"lineNumber":837,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":838,"author":{"gitId":"nathanielcalimag"},"content":"### Synchronisation of our data","lastModifiedDate":"2023-11-11"},{"lineNumber":839,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":840,"author":{"gitId":"nathanielcalimag"},"content":"The strong coupling of these entities meant that updating a person may affect the","lastModifiedDate":"2023-11-11"},{"lineNumber":841,"author":{"gitId":"nathanielcalimag"},"content":"transactions, and vice-versa. Hence, our team had to think deeper about how to implement","lastModifiedDate":"2023-11-11"},{"lineNumber":842,"author":{"gitId":"nathanielcalimag"},"content":"commands to ensure that the data changes of one entity list appropriate synchronise","lastModifiedDate":"2023-11-11"},{"lineNumber":843,"author":{"gitId":"nathanielcalimag"},"content":"the other entity list. For instance, the deletion of persons was a difficult challenge","lastModifiedDate":"2023-11-11"},{"lineNumber":844,"author":{"gitId":"nathanielcalimag"},"content":"to tackle.","lastModifiedDate":"2023-11-11"},{"lineNumber":845,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":846,"author":{"gitId":"nathanielcalimag"},"content":"**Deleting a person**","lastModifiedDate":"2023-11-11"},{"lineNumber":847,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":848,"author":{"gitId":"nathanielcalimag"},"content":"When a person is deleted from SnS, our application needs to check all transactions","lastModifiedDate":"2023-11-11"},{"lineNumber":849,"author":{"gitId":"nathanielcalimag"},"content":"for the person\u0027s involvement as a payer or payee. The person would have to be removed","lastModifiedDate":"2023-11-11"},{"lineNumber":850,"author":{"gitId":"nathanielcalimag"},"content":"from the transaction. However, we wanted to preserve as much information in the","lastModifiedDate":"2023-11-11"},{"lineNumber":851,"author":{"gitId":"nathanielcalimag"},"content":"transactions as possible as they may involve other people as well. We didn\u0027t want","lastModifiedDate":"2023-11-11"},{"lineNumber":852,"author":{"gitId":"nathanielcalimag"},"content":"the deletion of a person to affect the history and balances of other people who","lastModifiedDate":"2023-11-11"},{"lineNumber":853,"author":{"gitId":"nathanielcalimag"},"content":"may still owe or be owed money. Hence, we have decided to create a special","lastModifiedDate":"2023-11-11"},{"lineNumber":854,"author":{"gitId":"nathanielcalimag"},"content":"`Others` category to represents unknown / deleted parties. Solving this issue was","lastModifiedDate":"2023-11-11"},{"lineNumber":855,"author":{"gitId":"nathanielcalimag"},"content":"a difficult problem from ideation to implementation.","lastModifiedDate":"2023-11-11"},{"lineNumber":856,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":857,"author":{"gitId":"nathanielcalimag"},"content":"### UI Overhaul","lastModifiedDate":"2023-11-11"},{"lineNumber":858,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":859,"author":{"gitId":"nathanielcalimag"},"content":"As our application manages both a persons list and transactions list, we had to completely","lastModifiedDate":"2023-11-11"},{"lineNumber":860,"author":{"gitId":"nathanielcalimag"},"content":"overhaul the existing UI to be able to display both lists to users. We faced many issues","lastModifiedDate":"2023-11-11"},{"lineNumber":861,"author":{"gitId":"nathanielcalimag"},"content":"extending the existing observer pattern to fit our needs. Previously, updating one","lastModifiedDate":"2023-11-11"},{"lineNumber":862,"author":{"gitId":"nathanielcalimag"},"content":"list should mean that we only need to update that UI for that particular list. However, as","lastModifiedDate":"2023-11-11"},{"lineNumber":863,"author":{"gitId":"nathanielcalimag"},"content":"mentioned earlier, our persons list and transactions list are closely related, which meant","lastModifiedDate":"2023-11-11"},{"lineNumber":864,"author":{"gitId":"nathanielcalimag"},"content":"that updating one list might require us to update the UI for both lists.","lastModifiedDate":"2023-11-11"},{"lineNumber":865,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":866,"author":{"gitId":"nathanielcalimag"},"content":"Another challenge with the UI was designing an appropriate transaction card to display","lastModifiedDate":"2023-11-11"},{"lineNumber":867,"author":{"gitId":"nathanielcalimag"},"content":"the data to the user. Each transaction may contain multiple payers. This means that","lastModifiedDate":"2023-11-11"},{"lineNumber":868,"author":{"gitId":"nathanielcalimag"},"content":"within our transactions list, each transaction may need to show a dynamic nested list of","lastModifiedDate":"2023-11-11"},{"lineNumber":869,"author":{"gitId":"nathanielcalimag"},"content":"payers, along with the portion of the bill they owe. We believe that through much trial and","lastModifiedDate":"2023-11-11"},{"lineNumber":870,"author":{"gitId":"nathanielcalimag"},"content":"error, we have designed our application to effectively display the data in a sleek","lastModifiedDate":"2023-11-11"},{"lineNumber":871,"author":{"gitId":"nathanielcalimag"},"content":"and concise manner.","lastModifiedDate":"2023-11-11"},{"lineNumber":872,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":873,"author":{"gitId":"nathanielcalimag"},"content":"### Precision","lastModifiedDate":"2023-11-11"},{"lineNumber":874,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":875,"author":{"gitId":"nathanielcalimag"},"content":"Our application values precision given that it manages financial transactions. We","lastModifiedDate":"2023-11-11"},{"lineNumber":876,"author":{"gitId":"nathanielcalimag"},"content":"utilised `BigFraction` as opposed to `Double` in order to combat floating-point","lastModifiedDate":"2023-11-11"},{"lineNumber":877,"author":{"gitId":"nathanielcalimag"},"content":"errors. This posed many challenges in the implementation of `Transaction`. To name some,","lastModifiedDate":"2023-11-11"},{"lineNumber":878,"author":{"gitId":"nathanielcalimag"},"content":"we had to take additional steps in order to handle arithmetic, represent `BigFraction`","lastModifiedDate":"2023-11-11"},{"lineNumber":879,"author":{"gitId":"nathanielcalimag"},"content":"in the UI, and parse in input from commands and storage.","lastModifiedDate":"2023-11-11"},{"lineNumber":880,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":881,"author":{"gitId":"nathanielcalimag"},"content":"### Overall Effort","lastModifiedDate":"2023-11-11"},{"lineNumber":882,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":883,"author":{"gitId":"nathanielcalimag"},"content":"SnS required a substantial amount of effort in ideation, design, implementation and","lastModifiedDate":"2023-11-11"},{"lineNumber":884,"author":{"gitId":"nathanielcalimag"},"content":"testing. We challenged ourselves to introduce new functionalities while preserving the","lastModifiedDate":"2023-11-11"},{"lineNumber":885,"author":{"gitId":"nathanielcalimag"},"content":"original features of AB3. We have not only introduced a completely new central `Transaction`","lastModifiedDate":"2023-11-11"},{"lineNumber":886,"author":{"gitId":"nathanielcalimag"},"content":"model, but also extended the existing `Person` model, transforming AB3 into an intricate","lastModifiedDate":"2023-11-11"},{"lineNumber":887,"author":{"gitId":"nathanielcalimag"},"content":"contact and transaction management system.","lastModifiedDate":"2023-11-11"},{"lineNumber":888,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":889,"author":{"gitId":"nathanielcalimag"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":890,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":891,"author":{"gitId":"nathanielcalimag"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-11-07"},{"lineNumber":892,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":893,"author":{"gitId":"nathanielcalimag"},"content":"### Stronger List Command Input Validation","lastModifiedDate":"2023-11-07"},{"lineNumber":894,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":895,"author":{"gitId":"nathanielcalimag"},"content":"- **Background**: Currently, the `Name` of our `Person` is currently validated.","lastModifiedDate":"2023-11-07"},{"lineNumber":896,"author":{"gitId":"nathanielcalimag"},"content":"For example, it cannot contain symbols and cannot begin with a whitespace.","lastModifiedDate":"2023-11-07"},{"lineNumber":897,"author":{"gitId":"nathanielcalimag"},"content":"However, the `listPerson` validation on input arguments is insufficient.","lastModifiedDate":"2023-11-07"},{"lineNumber":898,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":899,"author":{"gitId":"nathanielcalimag"},"content":"- **Issue**: Executing `listPerson $$$` shows \"0 person(s) listed\" with no error.","lastModifiedDate":"2023-11-07"},{"lineNumber":900,"author":{"gitId":"nathanielcalimag"},"content":"This is not the right behaviour as `$$$` will never be included in a `Name`, and an","lastModifiedDate":"2023-11-07"},{"lineNumber":901,"author":{"gitId":"nathanielcalimag"},"content":"error message should be shown instead.","lastModifiedDate":"2023-11-07"},{"lineNumber":902,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":903,"author":{"gitId":"nathanielcalimag"},"content":"- **Enhancement**: We plan on ensuring `listPerson` performs stronger validation on","lastModifiedDate":"2023-11-07"},{"lineNumber":904,"author":{"gitId":"nathanielcalimag"},"content":"its input, invalidating any arguments cannot exist in a `Name`. For instance, each","lastModifiedDate":"2023-11-07"},{"lineNumber":905,"author":{"gitId":"nathanielcalimag"},"content":"command argument in `listPerson` should be validated to be alphanumeric. Similarly,","lastModifiedDate":"2023-11-07"},{"lineNumber":906,"author":{"gitId":"nathanielcalimag"},"content":"`listTransaction` should also validate the arguments in a similar fashion. Should","lastModifiedDate":"2023-11-07"},{"lineNumber":907,"author":{"gitId":"nathanielcalimag"},"content":"the input arguments fail validation, we plan to show an error message as shown below.","lastModifiedDate":"2023-11-07"},{"lineNumber":908,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":909,"author":{"gitId":"nathanielcalimag"},"content":"Sample Execution:","lastModifiedDate":"2023-11-07"},{"lineNumber":910,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":911,"author":{"gitId":"nathanielcalimag"},"content":"$ listPerson $$$","lastModifiedDate":"2023-11-07"},{"lineNumber":912,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":913,"author":{"gitId":"nathanielcalimag"},"content":"Names in should only contain alphanumeric characters","lastModifiedDate":"2023-11-07"},{"lineNumber":914,"author":{"gitId":"nathanielcalimag"},"content":"Example: listPerson Alex David","lastModifiedDate":"2023-11-07"},{"lineNumber":915,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-07"},{"lineNumber":916,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":917,"author":{"gitId":"nathanielcalimag"},"content":"### Improved Space Sensitivity in Names","lastModifiedDate":"2023-11-07"},{"lineNumber":918,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":919,"author":{"gitId":"nathanielcalimag"},"content":"- **Background**: Currently, the `Name` of our `Person` is currently able to trim","lastModifiedDate":"2023-11-07"},{"lineNumber":920,"author":{"gitId":"nathanielcalimag"},"content":"leading and trailing spaces, allowing us to treat `Alex Yeoh` and `\u0026nbsp;\u0026nbsp;Alex Yeoh\u0026nbsp;\u0026nbsp;`","lastModifiedDate":"2023-11-07"},{"lineNumber":921,"author":{"gitId":"nathanielcalimag"},"content":"as the same `Name`. However, the `Name` is sensitive to spaces in between. This results","lastModifiedDate":"2023-11-07"},{"lineNumber":922,"author":{"gitId":"nathanielcalimag"},"content":"in `Alex Yeoh` and `Alex\u0026nbsp;\u0026nbsp;\u0026nbsp;Yeoh` being treated as different names.","lastModifiedDate":"2023-11-07"},{"lineNumber":923,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":924,"author":{"gitId":"nathanielcalimag"},"content":"- **Issue**: Suppose a `Person` named `Alex Yeoh` exists in our application","lastModifiedDate":"2023-11-07"},{"lineNumber":925,"author":{"gitId":"nathanielcalimag"},"content":"  (and no one is named `Alex\u0026nbsp;\u0026nbsp;\u0026nbsp;Yeoh` with the additional spaces in between).","lastModifiedDate":"2023-11-07"},{"lineNumber":926,"author":{"gitId":"nathanielcalimag"},"content":"Executing `addTransaction d\u003d n\u003dAlex\u0026nbsp;\u0026nbsp;\u0026nbsp;Yeoh ...` will show an error of","lastModifiedDate":"2023-11-07"},{"lineNumber":927,"author":{"gitId":"nathanielcalimag"},"content":"\"This transaction involves unknown parties; please set them to \u0027Others\u0027\" even if all","lastModifiedDate":"2023-11-07"},{"lineNumber":928,"author":{"gitId":"nathanielcalimag"},"content":"other names correctly refer to people in the application. This is not the right behaviour","lastModifiedDate":"2023-11-07"},{"lineNumber":929,"author":{"gitId":"nathanielcalimag"},"content":"as our application should be able to detect that `Alex Yeoh` and `Alex\u0026nbsp;\u0026nbsp;\u0026nbsp;Yeoh`","lastModifiedDate":"2023-11-07"},{"lineNumber":930,"author":{"gitId":"nathanielcalimag"},"content":"are equivalent.","lastModifiedDate":"2023-11-07"},{"lineNumber":931,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":932,"author":{"gitId":"nathanielcalimag"},"content":"- **Enhancement**: We plan on ensuring that our application collapses multiple spaces","lastModifiedDate":"2023-11-07"},{"lineNumber":933,"author":{"gitId":"nathanielcalimag"},"content":"between individual names such that names like `Alex Yeoh` and `Alex\u0026nbsp;\u0026nbsp;\u0026nbsp;Yeoh`","lastModifiedDate":"2023-11-07"},{"lineNumber":934,"author":{"gitId":"nathanielcalimag"},"content":"can be considered to refer to the same `Name`.","lastModifiedDate":"2023-11-07"},{"lineNumber":935,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":936,"author":{"gitId":"nathanielcalimag"},"content":"### Enhanced Timestamp Validation Messages","lastModifiedDate":"2023-11-10"},{"lineNumber":937,"author":{"gitId":"nathanielcalimag"},"content":"- **Background**: Many of the transaction-related commands, such as `addTransaction` and `editTransaction`","lastModifiedDate":"2023-11-10"},{"lineNumber":938,"author":{"gitId":"nathanielcalimag"},"content":"may involve a `Timestamp` input. Currently, we validate our `Timestamp` through a combination of regex","lastModifiedDate":"2023-11-10"},{"lineNumber":939,"author":{"gitId":"nathanielcalimag"},"content":"and checking of `DateTimeParseException` from `LocalDateTime.parse(datetime)`. Currently, if","lastModifiedDate":"2023-11-10"},{"lineNumber":940,"author":{"gitId":"nathanielcalimag"},"content":"any validation fails, we show the following error message.","lastModifiedDate":"2023-11-10"},{"lineNumber":941,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":942,"author":{"gitId":"nathanielcalimag"},"content":"\u003e Date must be in DD/MM/YYYY format and time must be in HH:MM format; date should","lastModifiedDate":"2023-11-10"},{"lineNumber":943,"author":{"gitId":"nathanielcalimag"},"content":"come before time with a single space separating them if both are provided","lastModifiedDate":"2023-11-10"},{"lineNumber":944,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":945,"author":{"gitId":"nathanielcalimag"},"content":"- **Issue**: This error message is too general, and does not effectively communicate","lastModifiedDate":"2023-11-10"},{"lineNumber":946,"author":{"gitId":"nathanielcalimag"},"content":"to the user why the date is invalid, making it difficult for the user to correct","lastModifiedDate":"2023-11-10"},{"lineNumber":947,"author":{"gitId":"nathanielcalimag"},"content":"the `Timestamp` input in the transaction-related commands.","lastModifiedDate":"2023-11-10"},{"lineNumber":948,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":949,"author":{"gitId":"nathanielcalimag"},"content":"- **Enhancement**: We plan to make our `Timestamp` validation error messages","lastModifiedDate":"2023-11-10"},{"lineNumber":950,"author":{"gitId":"nathanielcalimag"},"content":"more specific in order to let the user know how they can correct their input. Specifically,","lastModifiedDate":"2023-11-10"},{"lineNumber":951,"author":{"gitId":"nathanielcalimag"},"content":"we plan on covering these 5 cases:","lastModifiedDate":"2023-11-10"},{"lineNumber":952,"author":{"gitId":"nathanielcalimag"},"content":"1. Incorrect Date Format","lastModifiedDate":"2023-11-10"},{"lineNumber":953,"author":{"gitId":"nathanielcalimag"},"content":"2. Incorrect Time Format","lastModifiedDate":"2023-11-10"},{"lineNumber":954,"author":{"gitId":"nathanielcalimag"},"content":"3. Incorrect Date and Time Format (e.g. `25/06/2023 + 11:30` didn\u0027t separate the date and time","lastModifiedDate":"2023-11-10"},{"lineNumber":955,"author":{"gitId":"nathanielcalimag"},"content":"with a single space)","lastModifiedDate":"2023-11-10"},{"lineNumber":956,"author":{"gitId":"nathanielcalimag"},"content":"4. Invalid Date (e.g. `32/13/2023` has an invalid day and month)","lastModifiedDate":"2023-11-10"},{"lineNumber":957,"author":{"gitId":"nathanielcalimag"},"content":"5. Invalid Time (e.g. `25/06/2023 25:61` has an invalid time)","lastModifiedDate":"2023-11-10"},{"lineNumber":958,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":959,"author":{"gitId":"nathanielcalimag"},"content":"If there are multiple issues in the input, the error message will be prioritised based","lastModifiedDate":"2023-11-10"},{"lineNumber":960,"author":{"gitId":"nathanielcalimag"},"content":"on the order above.","lastModifiedDate":"2023-11-10"},{"lineNumber":961,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":962,"author":{"gitId":"nathanielcalimag"},"content":"Below are examples of the enhanced error messages in commands with `Timestamp` input.","lastModifiedDate":"2023-11-10"},{"lineNumber":963,"author":{"gitId":"nathanielcalimag"},"content":"The `Timestamp` input comes after `ts\u003d` in the `addTransaction` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":964,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":965,"author":{"gitId":"nathanielcalimag"},"content":"Example 1: Incorrect Date Format","lastModifiedDate":"2023-11-10"},{"lineNumber":966,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":967,"author":{"gitId":"nathanielcalimag"},"content":"$ addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003dabcd n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":968,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":969,"author":{"gitId":"nathanielcalimag"},"content":"Date must be in DD/MM/YYYY format with leading zeroes in the date, month and year,","lastModifiedDate":"2023-11-10"},{"lineNumber":970,"author":{"gitId":"nathanielcalimag"},"content":"and forward slashes as separators (e.g. 25/06/2020).","lastModifiedDate":"2023-11-10"},{"lineNumber":971,"author":{"gitId":"nathanielcalimag"},"content":"Example: addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2020 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":972,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":973,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":974,"author":{"gitId":"nathanielcalimag"},"content":"Example 2: Incorrect Time Format","lastModifiedDate":"2023-11-10"},{"lineNumber":975,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":976,"author":{"gitId":"nathanielcalimag"},"content":"$ addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2023 abcd n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":977,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":978,"author":{"gitId":"nathanielcalimag"},"content":"Time must be in HH:MM format with leading zeroes in the hours and minutes,","lastModifiedDate":"2023-11-10"},{"lineNumber":979,"author":{"gitId":"nathanielcalimag"},"content":"and a colon separating the hours and minutes (e.g. 09:05).","lastModifiedDate":"2023-11-10"},{"lineNumber":980,"author":{"gitId":"nathanielcalimag"},"content":"Example: addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2020 09:05 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":981,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":982,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":983,"author":{"gitId":"nathanielcalimag"},"content":"Example 3: Incorrect Date and Time Format","lastModifiedDate":"2023-11-10"},{"lineNumber":984,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":985,"author":{"gitId":"nathanielcalimag"},"content":"$ addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2023 + 11:30 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":986,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":987,"author":{"gitId":"nathanielcalimag"},"content":"The date and time must be in the format \u0027DD/MM/YYYY HH:MM\u0027 with a single space","lastModifiedDate":"2023-11-10"},{"lineNumber":988,"author":{"gitId":"nathanielcalimag"},"content":"between the date and time (e.g. 25/06/2020 09:05).","lastModifiedDate":"2023-11-10"},{"lineNumber":989,"author":{"gitId":"nathanielcalimag"},"content":"Example: addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2020 09:05 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":990,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":991,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":992,"author":{"gitId":"nathanielcalimag"},"content":"Example 4: Invalid Date","lastModifiedDate":"2023-11-10"},{"lineNumber":993,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":994,"author":{"gitId":"nathanielcalimag"},"content":"$ addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d32/13/2023 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":995,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":996,"author":{"gitId":"nathanielcalimag"},"content":"The date entered does not exist. Please use a valid date in DD/MM/YYYY format.","lastModifiedDate":"2023-11-10"},{"lineNumber":997,"author":{"gitId":"nathanielcalimag"},"content":"Example: addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2020 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":998,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":999,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1000,"author":{"gitId":"nathanielcalimag"},"content":"Example 5: Invalid Time","lastModifiedDate":"2023-11-10"},{"lineNumber":1001,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"},{"lineNumber":1002,"author":{"gitId":"nathanielcalimag"},"content":"$ addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2023 25:61 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":1003,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1004,"author":{"gitId":"nathanielcalimag"},"content":"The time you entered does not exist. Please use a valid time in HH:MM format between","lastModifiedDate":"2023-11-10"},{"lineNumber":1005,"author":{"gitId":"nathanielcalimag"},"content":"00:00 to 23:59.","lastModifiedDate":"2023-11-10"},{"lineNumber":1006,"author":{"gitId":"nathanielcalimag"},"content":"Example: addTransaction d\u003dBread n\u003dJohn c\u003d10 ts\u003d25/06/2020 09:05 n\u003dSelf w\u003d1","lastModifiedDate":"2023-11-10"},{"lineNumber":1007,"author":{"gitId":"nathanielcalimag"},"content":"```","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"jedkohjk":32,"nathanielcalimag":267,"ncduy0303":156,"-":307,"wui-hong":18,"jeffrey-jian":227}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"   1. Run the `seedu.spendnsplit.Main` and try a few commands.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"wui-hong":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"   e.g. `seedu.spendnsplit.commons.StringUtilTest`","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"   e.g. `seedu.spendnsplit.storage.StorageManagerTest`","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"   e.g. `seedu.spendnsplit.logic.LogicManagerTest`","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"-":33,"wui-hong":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"## Introduction","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"***Taking care of your finances has never been easier!***","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"Spend N Split (SnS) is an application meant for managing transactions from your contacts list. Built for university students that reside on campus, it utilises your fast typing skills to help you maintain financial accountability between yourself and your peers. All you need to do, is to record your transactions in Spend N Split. Filtering, sorting, as well as the calculations of balances owed will be automatically handled by Spend N Split.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"Spend N Split is perfect for **you** if you are","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"1. A university student staying on campus.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"2. A fast typist.","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"3. Comfortable using a keyboard to make full use of the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"## Table of Contents","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"1. [Introduction](#introduction)","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"2. [Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"3. [How to use the User guide](#how-to-use-the-user-guide)","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"4. [Labels](#labels)","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"5. [Key Terms](#key-terms)","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"6. [Quick Start](#quick-start)","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"7. [Navigating the App](#navigating-the-app)","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"8. [Parameters](#parameters)","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"9. [Features](#features)","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"10. [Data](#data)","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"11. [FAQ](#faq)","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"12. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"13. [Glossary](#glossary)","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"## How to use the User Guide","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"1. If Spend N Split is not yet installed, kindly navigate to the [Quick Start](#quick-start) section, which includes steps for installation","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"as well as sample commands for you to try.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"2. If you are not yet familiar with Spend N Split and want a refresher, we highly recommend heading to the [Navigating the App](#navigating-the-app) section.","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"3. Already an experienced user? Well, head to the [Features](#features) section for a quick","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"refresher on what Spend N Split can do for you!","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"## Labels","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"In our user guide, you may find coloured boxes that contain highlighted pieces of text. ","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":":bulb: Cyan boxes represent helpful tips to enhance your experience.","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":":warning: Blue boxes represent warnings that you should be cautious about.","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":":heavy_exclamation_mark: Red boxes represent dangers that you should pay a lot of attention to.","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"## Key Terms","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"The Spend N Split application links transactions and people. As such, it is important that you familiarise yourself","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"with the structure of each person and each transaction in our application.","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"### Person","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"A person is someone that you track your balance against. Before creating a transaction involving a specific","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"person, that person has to exist in the application. If not, that person has to be added to the application before the transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"is created.","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"A person has the following attributes:","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"- Name (Compulsory)","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"- Balance (Calculated by the application)","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"- Tag(s) (Optional)","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"- Phone number (Optional)","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"- Telegram handle (Optional)","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"- Email Address (Optional)","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"- Address (Optional)","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"Every person is identified by their name. Names are case-insensitive and the application does not support","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"adding people with the same names. This means that you cannot add two or more people with the same name.","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":":bulb: If a positive balance is displayed on a person, it means that they owe you money. Conversely, if the balance displayed is","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"negative, you owe that person money instead. ","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"### Transaction","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"Transactions are events in which money is exchanged.","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"A transaction has the following attributes:","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"- Description (Compulsory)","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"- Payee (Compulsory)","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"- Payer (Compulsory) ","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"- Amount (Compulsory)","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"- Timestamp (Optional. If this is not provided, the application will use the current system time of the computer for the Timestamp) ","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"- Portion(s) ","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":":warning: Note: There are 2 special names when adding transactions - \"Self\" and \"Others\". \"Self\" refers to you (the user of this application) and \"Others\" refers to people that have not been added to the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"After a transaction, each payer in the list of portions owes the payee a fraction of the amount, based on their weights in the list of portions.","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"Note: Spend N Split will only keep track of transactions that are considered [relevant](#3-what-is-considered-a-relevant-transaction).","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"## Quick Start","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"    To check the version of Java installed on your computer, click [here](https://www.java.com/en/download/help/version_manual.html) if you are using a Windows or Mac computer, and click [here](https://phoenixnap.com/kb/check-java-version-linux)","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"   if your computer is running Linux. ","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"2. Download the latest `spendnsplit.jar` from [here](https://github.com/AY2324S1-CS2103T-W17-3/tp/releases/tag/v1.4).","lastModifiedDate":"2023-11-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Spend N Split.","lastModifiedDate":"2023-09-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar spendnsplit.jar`","lastModifiedDate":"2023-09-30"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the application contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"5. Type the command in the Command Input Field and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"    * `listPerson` : Lists all persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"    * `listTransaction` : Lists all transactions.","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"wui-hong"},"content":"    * `exit` : Exits the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"6. Learn more about navigating the application in the [Navigating the App](#navigating-the-app) section below.","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"7. Learn more about the commands in the [Features](#features) section below.","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"ncduy0303"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"## Navigating the App","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"wui-hong"},"content":"Spend N Split has an intuitive Graphical User Interface (GUI) that allows you to navigate the application easily.","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"![](images/user-guide/labelledUi.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"| Component                  | Description                                                                                                                |","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"|----------------------------|----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"| **Command Input Field**    | Type commands here and press `Enter` to execute them.                                                                      |","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"| **Command Output Display** | Shows the result of the command execution.                                                                                 |","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"| **Transaction List**       | Shows a list of transactions. \u003cbr/\u003e The list can be filtered and sorted by the user.                                       |","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"| **Transaction Card**       | Shows the details of a transaction. \u003cbr/\u003e Details include the description, date, payee, as well as the breakdown of costs. |","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"ncduy0303"},"content":"| **Person List**            | Shows a list of persons. \u003cbr/\u003e The list can be filtered and sorted by the user.                                            |","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"| **Person Card**            | Shows the details of a person. \u003cbr/\u003e Details include name, balance, phone number, etc.                                     |","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"wui-hong"},"content":"## Parameters","lastModifiedDate":"2023-11-11"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"Some of our commands require parameters, which have specific formats and constraints applied on them. Before heading to the [Features](#features) section, we recommend taking a look at the type of parameters required by commands.","lastModifiedDate":"2023-11-12"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"\u003cbr\u003e ","lastModifiedDate":"2023-11-12"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":167,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":168,"author":{"gitId":"wui-hong"},"content":":heavy_exclamation_mark: Note: **All inputs** to parameters should not contain the \"\u003d\" sign.","lastModifiedDate":"2023-11-12"},{"lineNumber":169,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":170,"author":{"gitId":"wui-hong"},"content":"The following parameters are used for commands:","lastModifiedDate":"2023-11-11"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":172,"author":{"gitId":"wui-hong"},"content":"| Parameter        | Prefix | Format                                                                                                                                                                                                         | Example |","lastModifiedDate":"2023-11-11"},{"lineNumber":173,"author":{"gitId":"wui-hong"},"content":"|------------------| --- |----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| --- |","lastModifiedDate":"2023-11-12"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"| Index            | - | Positive integers only                                                                                                                                                                                         | `1`, `2`, `3` |","lastModifiedDate":"2023-11-11"},{"lineNumber":175,"author":{"gitId":"wui-hong"},"content":"| Keyword          | - |                                                                                                                                                                                                                | `Bob`, `Lunch` |","lastModifiedDate":"2023-11-11"},{"lineNumber":176,"author":{"gitId":"wui-hong"},"content":"| Name             | n | Alphanumeric, can contain multiple words                                                                                                                                                                       | `Bob`, `Alex Yeoh` |","lastModifiedDate":"2023-11-11"},{"lineNumber":177,"author":{"gitId":"wui-hong"},"content":"| Phone number     | p | Numeric, minimum length of 3 digits                                                                                                                                                                            | `99999999`, `88888888` |","lastModifiedDate":"2023-11-11"},{"lineNumber":178,"author":{"gitId":"wui-hong"},"content":"| Telegram handle  | tg | Starts with @, followed by a minimum of 5 alphanumeric characters or underscores                                                                                                                               | `@nus_cs2103` , `@spend_n_split` |","lastModifiedDate":"2023-11-11"},{"lineNumber":179,"author":{"gitId":"wui-hong"},"content":"| Email address    | e | Valid email format only                                                                                                                                                                                        | `damithch@comp.nus.edu.sg`, `dcsdcr@nus.edu.sg` |","lastModifiedDate":"2023-11-12"},{"lineNumber":180,"author":{"gitId":"wui-hong"},"content":"| Address          | a |                                                                                                                                                                                                                | `Kent Ridge Hall`, `RC4` |","lastModifiedDate":"2023-11-11"},{"lineNumber":181,"author":{"gitId":"wui-hong"},"content":"| Tag              | t | Single-word, alphanumeric                                                                                                                                                                                      | `friend`, `colleague` |","lastModifiedDate":"2023-11-11"},{"lineNumber":182,"author":{"gitId":"wui-hong"},"content":"| Description      | d |                                                                                                                                                                                                                | `Lunch`, `Dinner @ UTown` |","lastModifiedDate":"2023-11-11"},{"lineNumber":183,"author":{"gitId":"wui-hong"},"content":"| Amount/ Cost     | c | Positive rational numbers either in decimal or fraction format. Spaces are allowed                                                                                                                             | `12`, `.5`, `0.5/3`, `1.25 / 1.56`, `12 000 000` |","lastModifiedDate":"2023-11-11"},{"lineNumber":184,"author":{"gitId":"wui-hong"},"content":"| Timestamp        | ts | Dates should be formatted as DD/MM/YYYY, and time as HH:MM. You have the option to include only the date or time, or both. When providing both, ensure that the date precedes the time, with a space in between | `12:12`, `31/12/2020`, `28/02/2021 00:00` |","lastModifiedDate":"2023-11-12"},{"lineNumber":185,"author":{"gitId":"wui-hong"},"content":"| Weight           | w | Positive rational numbers either in decimal or fraction format. Spaces are allowed                                                                                                                             | `12`, `.5`, `0.5/3`, `1.25 / 1.56`, `12 000 000` |","lastModifiedDate":"2023-11-11"},{"lineNumber":186,"author":{"gitId":"wui-hong"},"content":"| Original command | o | An original command keyword listed in this user guide                                                                                                                                                          | `setShorthand`, `addTransaction` |","lastModifiedDate":"2023-11-12"},{"lineNumber":187,"author":{"gitId":"wui-hong"},"content":"| Shorthand        | s | Single-word, English alphabet characters only                                                                                                                                                                  | `s`, `aT` |","lastModifiedDate":"2023-11-11"},{"lineNumber":188,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2023-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"wui-hong"},"content":":warning: **Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"ncduy0303"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"wui-hong"},"content":"  E.g. In `addPerson n\u003dNAME`, `NAME` is a parameter to be provided by the user. \u003cbr\u003eExample usage: `addPerson n\u003dJohn Doe`.","lastModifiedDate":"2023-11-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"ncduy0303"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"wui-hong"},"content":"  E.g. For `n\u003dNAME [t\u003dTAG]`: \u003cbr\u003e Example usage `n\u003dJohn Doe t\u003dfriend` or `n\u003dJohn Doe`.","lastModifiedDate":"2023-11-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"wui-hong"},"content":"- Items followed by `…` are optional and can be listed multiple times.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":202,"author":{"gitId":"wui-hong"},"content":"  E.g. For `[t\u003dTAG]…​`: \u003cbr\u003e Example usage: ` ` (0 tags), or `t\u003dfriend` (1 tag) or `t\u003dfriend t\u003dfamily` (2 tags).","lastModifiedDate":"2023-11-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"wui-hong"},"content":"- If it is mentioned that the order of the parameters is flexible, it means that parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":205,"author":{"gitId":"wui-hong"},"content":"  E.g. For `n\u003dNAME p\u003dPHONE_NUMBER` \u003cbr\u003e Example usage: `n\u003dBob p\u003d91722828` or `p\u003d91722828 n\u003dBob` are both accepted and will be treated as equivalent inputs by the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":206,"author":{"gitId":"wui-hong"},"content":"- Unnecessary parameters provided for commands (such as `help`, `clear`, `exit`) that do not accept them will be disregarded. \u003cbr\u003e E.g. for the command `help` which does not accept any parameters, entering the command `help 123` will be interpreted by the application as `help`.","lastModifiedDate":"2023-11-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"wui-hong"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands. Space characters such as \" \" may result in errors. It is recommended that commands are manually copied and typed into the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":212,"author":{"gitId":"jedkohjk"},"content":"### Person-related features","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"jedkohjk"},"content":"#### Adding a person: `addPerson`","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"wui-hong"},"content":"Adds a person to the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"jedkohjk"},"content":"Format: `addPerson n\u003dNAME [p\u003dPHONE_NUMBER] [tg\u003dTELEGRAM_HANDLE] [e\u003dEMAIL] [a\u003dADDRESS] [t\u003dTAG]…​`","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"wui-hong"},"content":"The command word (addPerson) has to be at the front of the command. The order of the remaining parameters is flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":221,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"wui-hong"},"content":"After the command has been executed, every person in the application will be displayed in the Person List.","lastModifiedDate":"2023-11-12"},{"lineNumber":223,"author":{"gitId":"jedkohjk"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"jedkohjk"},"content":"* `addPerson  n\u003dJohn Doe p\u003d98765432 e\u003djohnd@example.com a\u003dJohn street, block 123, #01-01`","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"jedkohjk"},"content":"* `addPerson  n\u003dBetsy Crowe t\u003dfriend e\u003dbetsycrowe@example.com a\u003dLondon Block 55 p\u003d1234567 t\u003dLondon`","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"wui-hong"},"content":"Note: Only the name is compulsory when adding a person. After a person has been added to the application, more attributes to that person can be added using the `editPerson` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":229,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"wui-hong"},"content":"Once an attribute has been added to a person, it can only be edited and cannot be deleted, except for the tags of a person (as elaborated below under [Editing a person](#editing-a-person--editperson)).","lastModifiedDate":"2023-11-12"},{"lineNumber":231,"author":{"gitId":"jedkohjk"},"content":"#### Editing a person : `editPerson`","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"wui-hong"},"content":"Edits an existing person in the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":234,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"jedkohjk"},"content":"Format: `editPerson INDEX [n\u003dNAME] [p\u003dPHONE] [tg\u003dTELEGRAM_HANDLE] [e\u003dEMAIL] [a\u003dADDRESS] [t\u003dTAG]…​`","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"wui-hong"},"content":"The command word (editPerson) and the index has to be at the front of the command. The order of the remaining parameters is flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":238,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"wui-hong"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed Person List.","lastModifiedDate":"2023-11-12"},{"lineNumber":240,"author":{"gitId":"jedkohjk"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"wui-hong"},"content":"* At least one of the optional parameters must be provided.","lastModifiedDate":"2023-11-12"},{"lineNumber":242,"author":{"gitId":"jedkohjk"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"wui-hong"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2023-11-12"},{"lineNumber":244,"author":{"gitId":"jedkohjk"},"content":"* You can remove all the person’s tags by typing `t\u003d` without","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"jedkohjk"},"content":"  specifying any tags after it.","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"wui-hong"},"content":"After the command has been executed, every person in the application will be displayed in the Person List.","lastModifiedDate":"2023-11-12"},{"lineNumber":248,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":249,"author":{"gitId":"jedkohjk"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"jedkohjk"},"content":"* `editPerson 1 p\u003d91234567 e\u003djohndoe@example.com`","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"jedkohjk"},"content":"    * Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com`","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"jedkohjk"},"content":"      respectively.","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"jedkohjk"},"content":"* `editPerson 2 n\u003dBetsy Crower t\u003d`","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"jedkohjk"},"content":"    * Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"nathanielcalimag"},"content":"  ![editPerson_success](images/user-guide/editPerson.PNG)","lastModifiedDate":"2023-11-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"jedkohjk"},"content":"#### Deleting a person : `deletePerson`","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"wui-hong"},"content":"Deletes the specified person from the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"jedkohjk"},"content":"Format: `deletePerson INDEX`","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"jedkohjk"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"wui-hong"},"content":"* The index refers to the index number shown in the displayed Person List.","lastModifiedDate":"2023-11-12"},{"lineNumber":267,"author":{"gitId":"jedkohjk"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"wui-hong"},"content":"* Transactions involving the deleted person will have the deleted person\u0027s name changed to \"Others\". In the event that","lastModifiedDate":"2023-11-06"},{"lineNumber":269,"author":{"gitId":"wui-hong"},"content":" this results in the transaction becoming irrelevant, the transaction will be automatically deleted. All transactions involving","lastModifiedDate":"2023-11-06"},{"lineNumber":270,"author":{"gitId":"wui-hong"},"content":" the deleted person as a payee will also be automatically deleted.","lastModifiedDate":"2023-11-06"},{"lineNumber":271,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"jedkohjk"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"wui-hong"},"content":"* `list` followed by `deletePerson 2` deletes the 2nd person in the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":275,"author":{"gitId":"wui-hong"},"content":"* `find Betsy` followed by `deletePerson 1` deletes the 1st person in the results of the `find Betsy` command.","lastModifiedDate":"2023-11-12"},{"lineNumber":276,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"nathanielcalimag"},"content":"![deletePerson_success](images/user-guide/deletePerson.PNG)","lastModifiedDate":"2023-11-07"},{"lineNumber":278,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"jedkohjk"},"content":"#### Locating persons by name: `listPerson`","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"wui-hong"},"content":"Lists every person whose name contain any of the given keywords. If no keywords are entered, every person is listed.","lastModifiedDate":"2023-11-12"},{"lineNumber":282,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"jedkohjk"},"content":"Format: `listPerson [KEYWORD]...`","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"wui-hong"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`.","lastModifiedDate":"2023-11-12"},{"lineNumber":286,"author":{"gitId":"wui-hong"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2023-11-12"},{"lineNumber":287,"author":{"gitId":"wui-hong"},"content":"* Only the entire keyword will be matched e.g. A person named `Han` will not be displayed when `listPerson Hans` is executed.","lastModifiedDate":"2023-11-12"},{"lineNumber":288,"author":{"gitId":"wui-hong"},"content":"* If a person\u0027s name matches at least one keyword, they will be displayed.","lastModifiedDate":"2023-11-12"},{"lineNumber":289,"author":{"gitId":"wui-hong"},"content":"  E.g. `listPerson Hans Bo` will result in both `Hans Gruber` and `Bo Yang` being displayed, should both of them already exist in the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":290,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"jedkohjk"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":292,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"jedkohjk"},"content":"* `listPerson John` returns `john` and `John Doe`","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"jedkohjk"},"content":"* `listPerson alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2023-11-01"},{"lineNumber":295,"author":{"gitId":"jedkohjk"},"content":"![listPerson success](images/user-guide/listPerson.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":296,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":297,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":298,"author":{"gitId":"jedkohjk"},"content":"#### Sorting people by balance: `sortPerson`","lastModifiedDate":"2023-11-01"},{"lineNumber":299,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"wui-hong"},"content":"Sorts the list of people in the application based on their outstanding balances in either ascending or descending","lastModifiedDate":"2023-11-12"},{"lineNumber":301,"author":{"gitId":"wui-hong"},"content":"order. This allows you to quickly identify who owes the most or the least amount of money. Having a negative balance with someone means you","lastModifiedDate":"2023-11-12"},{"lineNumber":302,"author":{"gitId":"jedkohjk"},"content":"own them money.","lastModifiedDate":"2023-11-01"},{"lineNumber":303,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"jedkohjk"},"content":"Format: `sortPerson ORDER`","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"jedkohjk"},"content":"Parameters:","lastModifiedDate":"2023-11-01"},{"lineNumber":307,"author":{"gitId":"wui-hong"},"content":"- `ORDER`: Specifies the order in which to sort the balances. Use `-` for ascending order (Largest negative balance at the top) and `+` for descending order (Largest positive balance at the top).","lastModifiedDate":"2023-11-12"},{"lineNumber":308,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"jedkohjk"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":310,"author":{"gitId":"jedkohjk"},"content":"* `sortPerson -`","lastModifiedDate":"2023-11-01"},{"lineNumber":311,"author":{"gitId":"wui-hong"},"content":"    * This command will rearrange the Person List in ascending order.","lastModifiedDate":"2023-11-12"},{"lineNumber":312,"author":{"gitId":"jedkohjk"},"content":"* `sortPerson +`","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"wui-hong"},"content":"    * This command will rearrange the Person List in descending order.","lastModifiedDate":"2023-11-12"},{"lineNumber":314,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":315,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":316,"author":{"gitId":"jeffrey-jian"},"content":"![sortPersonDescending success](images/user-guide/sortPersonDescending.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":317,"author":{"gitId":"jeffrey-jian"},"content":"![sortPersonAscending success](images/user-guide/sortPersonAscending.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":318,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":319,"author":{"gitId":"jedkohjk"},"content":"### Transaction-related features","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":321,"author":{"gitId":"jedkohjk"},"content":"#### Adding a transaction: `addTransaction`","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"wui-hong"},"content":"Adds a transaction for multiple people with customised split ratios.","lastModifiedDate":"2023-11-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"jedkohjk"},"content":"Format: `addTransaction d\u003dDETAILS n\u003dNAME c\u003dCOST [ts\u003dTIME] [n\u003dNAME w\u003dWEIGHT]...`","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"jedkohjk"},"content":"- Cost and weights have to be decimal numbers or fractions, and they must be positive.","lastModifiedDate":"2023-10-25"},{"lineNumber":327,"author":{"gitId":"wui-hong"},"content":"- The first name refers to the payee (that is the person whom everyone else now owes money).","lastModifiedDate":"2023-11-12"},{"lineNumber":328,"author":{"gitId":"jedkohjk"},"content":"- If the timestamp is not provided, the default time is the current system time.","lastModifiedDate":"2023-10-25"},{"lineNumber":329,"author":{"gitId":"ncduy0303"},"content":"- If only the date is given, the default time is set as 00:00.","lastModifiedDate":"2023-11-03"},{"lineNumber":330,"author":{"gitId":"wui-hong"},"content":"- If you want to reference yourself, use `n\u003dSelf`.","lastModifiedDate":"2023-11-12"},{"lineNumber":331,"author":{"gitId":"jedkohjk"},"content":"- At least one pair of name and weight must be provided.","lastModifiedDate":"2023-10-25"},{"lineNumber":332,"author":{"gitId":"wui-hong"},"content":"- Payer names should not repeat.  E.g. `n\u003dBob w\u003d1.0 n\u003dBob w\u003d2.0` will be invalid. However, you are allowed to key in multiple portions for \"Others\" - the final weight for \"Others\" will be the sum of all the weights of the \"Others\" portions keyed in.","lastModifiedDate":"2023-11-12"},{"lineNumber":333,"author":{"gitId":"jedkohjk"},"content":"- The cost for each person is calculated as follows:","lastModifiedDate":"2023-10-25"},{"lineNumber":334,"author":{"gitId":"jedkohjk"},"content":"    - Individual cost \u003d Total Cost * (Individual Weight / Total Weight)","lastModifiedDate":"2023-10-25"},{"lineNumber":335,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":336,"author":{"gitId":"wui-hong"},"content":"After the command has been executed, every transaction in the application will be displayed in the transaction list.","lastModifiedDate":"2023-11-12"},{"lineNumber":337,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":338,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":339,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":340,"author":{"gitId":"wui-hong"},"content":":heavy_exclamation_mark: Note: The order of the parameters is NOT flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":341,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":342,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":344,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":345,"author":{"gitId":"wui-hong"},"content":"**:warning: Note:**\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":346,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"wui-hong"},"content":"Transactions added to Spend N Split must be relevant. Refer to the [Relevant Transactions](#3-what-is-considered-a-relevant-transaction) section for more details.","lastModifiedDate":"2023-11-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":352,"author":{"gitId":"jeffrey-jian"},"content":"* `addTransaction d\u003dRent n\u003dJohn c\u003d600 ts\u003d2020-10-10T12:00 n\u003dSelf w\u003d1 n\u003dJohn w\u003d1 n\u003dMary w\u003d1`","lastModifiedDate":"2023-11-08"},{"lineNumber":353,"author":{"gitId":"wui-hong"},"content":"    * A transaction for rent that cost $600 is added. John paid for this transaction at 12 o\u0027clock on 10 October 2020. You (`Self`) and Mary both owe John $200 (1/3 of $600) each.","lastModifiedDate":"2023-11-12"},{"lineNumber":354,"author":{"gitId":"wui-hong"},"content":"* `addTransaction d\u003dDinner n\u003dSelf c\u003d100 n\u003dJohn w\u003d2 n\u003dMary w\u003d2 n\u003dAlice w\u003d1`","lastModifiedDate":"2023-11-12"},{"lineNumber":355,"author":{"gitId":"wui-hong"},"content":"    * A transaction for Dinner that cost $100 is added. You (`Self`) paid for this transaction. John and Mary both owe you (`Self`) $40 (2/5 of $100) each, while Alice owes you (`Self`) $20 (1/5 of $100).","lastModifiedDate":"2023-11-12"},{"lineNumber":356,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":357,"author":{"gitId":"jedkohjk"},"content":"Sample execution:","lastModifiedDate":"2023-10-25"},{"lineNumber":358,"author":{"gitId":"jedkohjk"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":359,"author":{"gitId":"wui-hong"},"content":"$ addTransaction d\u003dDinner n\u003dself c\u003d100","lastModifiedDate":"2023-11-12"},{"lineNumber":360,"author":{"gitId":"wui-hong"},"content":"  n\u003dJohn w\u003d2 n\u003dMary w\u003d2 n\u003dAlice w\u003d1","lastModifiedDate":"2023-11-12"},{"lineNumber":361,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":362,"author":{"gitId":"jedkohjk"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":363,"author":{"gitId":"jedkohjk"},"content":"![addTransaction success](images/user-guide/addTransaction1.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":364,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":365,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":366,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":367,"author":{"gitId":"jedkohjk"},"content":"$ addTransaction c\u003d200 d\u003dTextbooks","lastModifiedDate":"2023-10-25"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":370,"author":{"gitId":"jedkohjk"},"content":"Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":371,"author":{"gitId":"wui-hong"},"content":"addTransaction: Adds a transaction to the spendnsplit book.","lastModifiedDate":"2023-11-05"},{"lineNumber":372,"author":{"gitId":"wui-hong"},"content":"Parameters: d\u003dDESCRIPTION n\u003dNAME c\u003dCOST","lastModifiedDate":"2023-11-12"},{"lineNumber":373,"author":{"gitId":"wui-hong"},"content":"[n\u003dNAME w\u003dWEIGHT] Example: addTransaction ","lastModifiedDate":"2023-11-12"},{"lineNumber":374,"author":{"gitId":"wui-hong"},"content":"d\u003dbread n\u003dJohn Doe c\u003d25.00 n\u003dSelf w\u003d1.5 ","lastModifiedDate":"2023-11-12"},{"lineNumber":375,"author":{"gitId":"wui-hong"},"content":"n\u003dJohn Doe w\u003d1","lastModifiedDate":"2023-11-12"},{"lineNumber":376,"author":{"gitId":"jedkohjk"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":378,"author":{"gitId":"jedkohjk"},"content":"#### Editing a Transaction: `editTransaction`","lastModifiedDate":"2023-11-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":380,"author":{"gitId":"jeffrey-jian"},"content":"Edits the transaction at the specified `INDEX`.","lastModifiedDate":"2023-11-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":382,"author":{"gitId":"jeffrey-jian"},"content":"Transaction details that can be edited:","lastModifiedDate":"2023-10-25"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":384,"author":{"gitId":"jeffrey-jian"},"content":"* Description","lastModifiedDate":"2023-10-25"},{"lineNumber":385,"author":{"gitId":"jeffrey-jian"},"content":"* Cost","lastModifiedDate":"2023-10-25"},{"lineNumber":386,"author":{"gitId":"jeffrey-jian"},"content":"* Payee","lastModifiedDate":"2023-10-25"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":388,"author":{"gitId":"jedkohjk"},"content":"Format: `editTransaction INDEX [d\u003dDESCRIPTION] [c\u003dCOST] [n\u003dPAYEE] [ts\u003dTIME]`","lastModifiedDate":"2023-11-01"},{"lineNumber":389,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":390,"author":{"gitId":"wui-hong"},"content":"The command word (editTransaction) and the index has to be at the front of the command. The order of the remaining parameters is flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":391,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":392,"author":{"gitId":"jeffrey-jian"},"content":"* Edits the transaction at the specified `INDEX`. The index refers to the index number shown in the displayed transaction list.","lastModifiedDate":"2023-11-08"},{"lineNumber":393,"author":{"gitId":"jeffrey-jian"},"content":"  The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-11-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-11-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-11-08"},{"lineNumber":396,"author":{"gitId":"wui-hong"},"content":"* If the Timestamp is provided as a parameter but only the date is given, the default time will be set to 00:00.","lastModifiedDate":"2023-11-12"},{"lineNumber":397,"author":{"gitId":"wui-hong"},"content":"* A transaction cannot be edited to be irrelevant.","lastModifiedDate":"2023-11-12"},{"lineNumber":398,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":399,"author":{"gitId":"wui-hong"},"content":"After the command has been executed, every transaction in the application will be displayed in the transaction list.","lastModifiedDate":"2023-11-12"},{"lineNumber":400,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":401,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":402,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":403,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":404,"author":{"gitId":"wui-hong"},"content":"**:warning: Note:**\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":405,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":406,"author":{"gitId":"wui-hong"},"content":"After editing, the transaction must be relevant. The application will not allow you to edit a transaction such that it becomes irrelevant. Refer to the [Relevant Transactions](#3-what-is-considered-a-relevant-transaction) section for more details.","lastModifiedDate":"2023-11-12"},{"lineNumber":407,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":408,"author":{"gitId":"jeffrey-jian"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":409,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":411,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":413,"author":{"gitId":"jeffrey-jian"},"content":"* `editTransaction 1 c\u003d12.12`","lastModifiedDate":"2023-10-25"},{"lineNumber":414,"author":{"gitId":"wui-hong"},"content":"  * Edits the transaction at index 1 to have a new cost of $12.12.","lastModifiedDate":"2023-11-12"},{"lineNumber":415,"author":{"gitId":"jeffrey-jian"},"content":"* `editTransaction 2 d\u003dPotato n\u003dBob`","lastModifiedDate":"2023-10-25"},{"lineNumber":416,"author":{"gitId":"wui-hong"},"content":"  * Edits the transaction at index 2 to have a new description of \"Potato\" and with Bob as the new payee.","lastModifiedDate":"2023-11-12"},{"lineNumber":417,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":418,"author":{"gitId":"wui-hong"},"content":"Sample Execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":419,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":420,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":421,"author":{"gitId":"jeffrey-jian"},"content":"editTransaction 1 n\u003dBob c\u003d12.12","lastModifiedDate":"2023-10-25"},{"lineNumber":422,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":423,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":424,"author":{"gitId":"jeffrey-jian"},"content":"![editTransaction success](images/user-guide/editTransactionSuccess.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":426,"author":{"gitId":"jedkohjk"},"content":"#### Updating a Portion of a Transaction: `updatePortion`","lastModifiedDate":"2023-11-01"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":428,"author":{"gitId":"wui-hong"},"content":"Updates the portion of a transaction at the specified `INDEX`. The index refers to the index number shown in the displayed transaction list. The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-11-12"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":430,"author":{"gitId":"wui-hong"},"content":"Portion refers to the amount of money that a payer owes the payee for a transaction. \\","lastModifiedDate":"2023-11-12"},{"lineNumber":431,"author":{"gitId":"jeffrey-jian"},"content":"The portion is calculated based on the cost of the transaction and the proportion of the transaction that the person has","lastModifiedDate":"2023-10-25"},{"lineNumber":432,"author":{"gitId":"jedkohjk"},"content":"to pay for, which is determined by the `WEIGHT` of the person. Hence the `WEIGHT` must be between 0 (inclusive) and 1 (exclusive).","lastModifiedDate":"2023-11-01"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":434,"author":{"gitId":"wui-hong"},"content":"After the command has been executed, every transaction in the application will be displayed in the transaction list.","lastModifiedDate":"2023-11-12"},{"lineNumber":435,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":436,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":437,"author":{"gitId":"jeffrey-jian"},"content":"Format: `updatePortion INDEX n\u003dNAME w\u003dWEIGHT`","lastModifiedDate":"2023-10-25"},{"lineNumber":438,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":439,"author":{"gitId":"wui-hong"},"content":"The command word (updatePortion) and the index has to be at the front of the command. The order of the remaining parameters is flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":440,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":442,"author":{"gitId":"jeffrey-jian"},"content":"* To add a new person (e.g. Alice) to the transaction:","lastModifiedDate":"2023-10-25"},{"lineNumber":443,"author":{"gitId":"jeffrey-jian"},"content":"    * `updatePortion 1 n\u003dAlice w\u003d0.5`","lastModifiedDate":"2023-10-25"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":446,"author":{"gitId":"jeffrey-jian"},"content":"* To edit the weight of an existing person (e.g. Bob) in the transaction:","lastModifiedDate":"2023-10-25"},{"lineNumber":447,"author":{"gitId":"jeffrey-jian"},"content":"    * `updatePortion 1 n\u003dBob w\u003d0.5`","lastModifiedDate":"2023-10-25"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":449,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":450,"author":{"gitId":"jeffrey-jian"},"content":"* To remove an existing person (e.g. Bob) from the transaction, set the weight to 0:","lastModifiedDate":"2023-10-25"},{"lineNumber":451,"author":{"gitId":"jeffrey-jian"},"content":"    * `updatePortion 1 n\u003dBob w\u003d0`","lastModifiedDate":"2023-10-25"},{"lineNumber":452,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":453,"author":{"gitId":"jeffrey-jian"},"content":"Sample Execution:","lastModifiedDate":"2023-10-25"},{"lineNumber":454,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":455,"author":{"gitId":"jeffrey-jian"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":456,"author":{"gitId":"jeffrey-jian"},"content":"updatePortion 1 n\u003dAlice w\u003d0.5","lastModifiedDate":"2023-10-25"},{"lineNumber":457,"author":{"gitId":"jeffrey-jian"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":458,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":459,"author":{"gitId":"jeffrey-jian"},"content":"![](images/user-guide/updatePortionSuccess.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":460,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":461,"author":{"gitId":"jedkohjk"},"content":"#### Deleting a transaction: `deleteTransaction`","lastModifiedDate":"2023-11-01"},{"lineNumber":462,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":463,"author":{"gitId":"ncduy0303"},"content":"Deletes the specified transaction based on index.","lastModifiedDate":"2023-10-25"},{"lineNumber":464,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":465,"author":{"gitId":"wui-hong"},"content":"Format: `deleteTransaction INDEX`","lastModifiedDate":"2023-10-17"},{"lineNumber":466,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":467,"author":{"gitId":"ncduy0303"},"content":"* The index refers to the index number shown in the displayed transaction list. The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-10-25"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":469,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":471,"author":{"gitId":"wui-hong"},"content":"* `deleteTransaction 1`","lastModifiedDate":"2023-10-17"},{"lineNumber":472,"author":{"gitId":"wui-hong"},"content":"    * Deletes the first transaction in the list.","lastModifiedDate":"2023-11-12"},{"lineNumber":473,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":474,"author":{"gitId":"ncduy0303"},"content":"Sample Execution:","lastModifiedDate":"2023-10-25"},{"lineNumber":475,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":476,"author":{"gitId":"ncduy0303"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":477,"author":{"gitId":"ncduy0303"},"content":"$ deleteTransaction 4","lastModifiedDate":"2023-10-25"},{"lineNumber":478,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":479,"author":{"gitId":"wui-hong"},"content":"Deleted Transaction: bread; Timestamp: 12/11/2023 11:24; ","lastModifiedDate":"2023-11-12"},{"lineNumber":480,"author":{"gitId":"wui-hong"},"content":"Amount: 20.00; Paid by: Alex; ","lastModifiedDate":"2023-11-12"},{"lineNumber":481,"author":{"gitId":"wui-hong"},"content":"Portions: [name: Self, weight: 1.00]","lastModifiedDate":"2023-11-12"},{"lineNumber":482,"author":{"gitId":"ncduy0303"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":483,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":484,"author":{"gitId":"ncduy0303"},"content":"![](images/user-guide/deleteTransaction.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":485,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":486,"author":{"gitId":"jedkohjk"},"content":"#### Duplicating a Transaction: `duplicateTransaction`","lastModifiedDate":"2023-11-01"},{"lineNumber":487,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":488,"author":{"gitId":"wui-hong"},"content":"Duplicates the transaction at the specified `INDEX`. The duplicated transaction\u0027s timestamp will be the time at which","lastModifiedDate":"2023-11-05"},{"lineNumber":489,"author":{"gitId":"wui-hong"},"content":"this command is executed. The index refers to the index number shown in the displayed transaction list.","lastModifiedDate":"2023-11-12"},{"lineNumber":490,"author":{"gitId":"jedkohjk"},"content":"The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-11-01"},{"lineNumber":491,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":492,"author":{"gitId":"jedkohjk"},"content":"Transaction details that can be changed when duplicating:","lastModifiedDate":"2023-11-01"},{"lineNumber":493,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":494,"author":{"gitId":"jedkohjk"},"content":"* Description","lastModifiedDate":"2023-11-01"},{"lineNumber":495,"author":{"gitId":"jedkohjk"},"content":"* Cost","lastModifiedDate":"2023-11-01"},{"lineNumber":496,"author":{"gitId":"jedkohjk"},"content":"* Payee","lastModifiedDate":"2023-11-01"},{"lineNumber":497,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":498,"author":{"gitId":"jedkohjk"},"content":"Format: `duplicateTransaction INDEX [d\u003dDESCRIPTION] [c\u003dCOST] [n\u003dPAYEE] [ts\u003dTIME]`","lastModifiedDate":"2023-11-01"},{"lineNumber":499,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":500,"author":{"gitId":"wui-hong"},"content":"The command word (duplicateTransaction) and the index has to be at the front of the command. The order of the remaining parameters is flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":501,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":502,"author":{"gitId":"jedkohjk"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":503,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":504,"author":{"gitId":"jedkohjk"},"content":"* `duplicateTransaction 1 c\u003d12.12`","lastModifiedDate":"2023-11-01"},{"lineNumber":505,"author":{"gitId":"wui-hong"},"content":"  * Creates a new transaction that is identical to the current transaction at index one in the Transaction panel,","lastModifiedDate":"2023-11-05"},{"lineNumber":506,"author":{"gitId":"wui-hong"},"content":"  except for the timestamp of the new transaction being the time at which this command was executed","lastModifiedDate":"2023-11-05"},{"lineNumber":507,"author":{"gitId":"wui-hong"},"content":"  and the cost being 12.12 instead.","lastModifiedDate":"2023-11-12"},{"lineNumber":508,"author":{"gitId":"jedkohjk"},"content":"* `duplicateTransaction 2 d\u003dPotato n\u003dBob`","lastModifiedDate":"2023-11-01"},{"lineNumber":509,"author":{"gitId":"wui-hong"},"content":"  * Creates a new transaction that is identical to the current transaction at index two in the Transaction panel,","lastModifiedDate":"2023-11-05"},{"lineNumber":510,"author":{"gitId":"wui-hong"},"content":"    except for the timestamp of the new transaction being the time at which this command was executed, the","lastModifiedDate":"2023-11-05"},{"lineNumber":511,"author":{"gitId":"wui-hong"},"content":"    description of the new transaction being \"Potato\" and the payee of the new transaction being Bob.","lastModifiedDate":"2023-11-05"},{"lineNumber":512,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":513,"author":{"gitId":"jedkohjk"},"content":"#### Listing transactions: `listTransaction`","lastModifiedDate":"2023-11-01"},{"lineNumber":514,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":515,"author":{"gitId":"wui-hong"},"content":"Shows a list of transactions whose descriptions include any of the keywords and which include any of the specified people. If no keywords are specified, it filters only by names; if no names are specified, it filters only by keywords. If neither are specified, all transactions will be listed.","lastModifiedDate":"2023-11-12"},{"lineNumber":516,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":517,"author":{"gitId":"jedkohjk"},"content":"Format: `listTransaction [KEYWORD]... [n\u003dNAME]...`","lastModifiedDate":"2023-11-01"},{"lineNumber":518,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":519,"author":{"gitId":"ncduy0303"},"content":"* The name refers to the name of the person in the transaction (either as a payee or a payer).","lastModifiedDate":"2023-10-25"},{"lineNumber":520,"author":{"gitId":"ncduy0303"},"content":"* The name must contain only alphabets, numbers, and spaces. It cannot be empty and is case-insensitive.","lastModifiedDate":"2023-10-25"},{"lineNumber":521,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":522,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":523,"author":{"gitId":"wui-hong"},"content":":heavy_exclamation_mark: Note: The order of the parameters is NOT flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":524,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":525,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":526,"author":{"gitId":"wui-hong"},"content":"Examples:","lastModifiedDate":"2023-09-29"},{"lineNumber":527,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":528,"author":{"gitId":"ncduy0303"},"content":"* `listTransaction`","lastModifiedDate":"2023-10-25"},{"lineNumber":529,"author":{"gitId":"wui-hong"},"content":"    * Shows all transactions.","lastModifiedDate":"2023-11-12"},{"lineNumber":530,"author":{"gitId":"ncduy0303"},"content":"* `listTransaction n\u003dAlice Pauline n\u003dCarl Kurz`","lastModifiedDate":"2023-10-25"},{"lineNumber":531,"author":{"gitId":"wui-hong"},"content":"    * Shows all transactions that include Alice Pauline or Carl Kurz.","lastModifiedDate":"2023-11-12"},{"lineNumber":532,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":533,"author":{"gitId":"ncduy0303"},"content":"Sample Execution:","lastModifiedDate":"2023-10-25"},{"lineNumber":534,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":535,"author":{"gitId":"ncduy0303"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":536,"author":{"gitId":"ncduy0303"},"content":"$ listTransaction","lastModifiedDate":"2023-10-25"},{"lineNumber":537,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":538,"author":{"gitId":"ncduy0303"},"content":"5 transactions listed!","lastModifiedDate":"2023-10-25"},{"lineNumber":539,"author":{"gitId":"ncduy0303"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":541,"author":{"gitId":"ncduy0303"},"content":"![listTransaction1 success](images/user-guide/listTransaction1.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":542,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":543,"author":{"gitId":"ncduy0303"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":544,"author":{"gitId":"ncduy0303"},"content":"$ listTransaction n\u003dAlice Pauline n\u003dCarl Kurz","lastModifiedDate":"2023-10-25"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"ncduy0303"},"content":"2 transactions listed!","lastModifiedDate":"2023-10-25"},{"lineNumber":547,"author":{"gitId":"ncduy0303"},"content":"```","lastModifiedDate":"2023-10-25"},{"lineNumber":548,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":549,"author":{"gitId":"ncduy0303"},"content":"![listTransaction2 success](images/user-guide/listTransaction2.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"nathanielcalimag"},"content":"### Settling transactions: `settlePerson`","lastModifiedDate":"2023-10-25"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"wui-hong"},"content":"Settles the outstanding balance with a person at the specified `INDEX`. The index refers to the index number shown in the displayed transaction list.","lastModifiedDate":"2023-11-12"},{"lineNumber":554,"author":{"gitId":"wui-hong"},"content":"The outstanding balance refers to the overall balance calculated using only transactions that occur before or at the given timestamp.","lastModifiedDate":"2023-11-12"},{"lineNumber":555,"author":{"gitId":"wui-hong"},"content":"A new transaction will be created in the application for the settlement of balances.","lastModifiedDate":"2023-11-12"},{"lineNumber":556,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":557,"author":{"gitId":"ncduy0303"},"content":"If no timestamp is given, the default timestamp is the current system time.","lastModifiedDate":"2023-11-03"},{"lineNumber":558,"author":{"gitId":"ncduy0303"},"content":"If only the date is given, the default time is set as 23:59.","lastModifiedDate":"2023-11-03"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"jedkohjk"},"content":"Format: `settlePerson INDEX [ts\u003dTIME]`","lastModifiedDate":"2023-11-01"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"wui-hong"},"content":"Example:","lastModifiedDate":"2023-09-29"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"wui-hong"},"content":"*  `settlePerson 1`","lastModifiedDate":"2023-11-12"},{"lineNumber":565,"author":{"gitId":"wui-hong"},"content":"    *  Settles the outstanding balance with the 1st person in the displayed list.","lastModifiedDate":"2023-11-12"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":567,"author":{"gitId":"wui-hong"},"content":"Sample Execution:","lastModifiedDate":"2023-09-29"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":570,"author":{"gitId":"nathanielcalimag"},"content":"$ settlePerson","lastModifiedDate":"2023-10-25"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"nathanielcalimag"},"content":"Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":573,"author":{"gitId":"wui-hong"},"content":"settlePerson: Settle any outstanding balance with another person. ","lastModifiedDate":"2023-11-12"},{"lineNumber":574,"author":{"gitId":"wui-hong"},"content":"Parameters: INDEX (must be a positive integer)","lastModifiedDate":"2023-11-12"},{"lineNumber":575,"author":{"gitId":"nathanielcalimag"},"content":"Example: settlePerson 1","lastModifiedDate":"2023-10-25"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"nathanielcalimag"},"content":"$ settlePerson 1","lastModifiedDate":"2023-10-25"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"nathanielcalimag"},"content":"Balance settled: Alex Yeoh","lastModifiedDate":"2023-10-25"},{"lineNumber":580,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":581,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":582,"author":{"gitId":"nathanielcalimag"},"content":"![settle error](images/user-guide/settle1.jpeg)","lastModifiedDate":"2023-10-25"},{"lineNumber":583,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":584,"author":{"gitId":"nathanielcalimag"},"content":"![settle success](images/user-guide/settle2.jpeg)","lastModifiedDate":"2023-10-25"},{"lineNumber":585,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":586,"author":{"gitId":"jedkohjk"},"content":"### Other features","lastModifiedDate":"2023-11-01"},{"lineNumber":587,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":588,"author":{"gitId":"jedkohjk"},"content":"#### Setting shorthands for commands : `setShorthand`","lastModifiedDate":"2023-11-01"},{"lineNumber":589,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":590,"author":{"gitId":"jedkohjk"},"content":"Sets a shorthand for the original command. In the future, this shorthand can be used in place of the original command.","lastModifiedDate":"2023-11-01"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"jedkohjk"},"content":"Format: `setShorthand o\u003d[ORIGINAL_COMMAND] s\u003d[SHORTHAND]`","lastModifiedDate":"2023-11-01"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"wui-hong"},"content":"The command word (setShorthand) has to be at the front of the command. The order of the remaining parameters is flexible.","lastModifiedDate":"2023-11-12"},{"lineNumber":595,"author":{"gitId":"jedkohjk"},"content":"Commands and shorthands are case-sensitive.","lastModifiedDate":"2023-11-01"},{"lineNumber":596,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":597,"author":{"gitId":"jedkohjk"},"content":"#### Getting help : `help`","lastModifiedDate":"2023-11-01"},{"lineNumber":598,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":599,"author":{"gitId":"jedkohjk"},"content":"Displays a URL that contains a link to this user guide.","lastModifiedDate":"2023-11-01"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"jedkohjk"},"content":"Format: `help`","lastModifiedDate":"2023-11-01"},{"lineNumber":602,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":603,"author":{"gitId":"jedkohjk"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2023-11-01"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"wui-hong"},"content":"Clears all entries from the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":609,"author":{"gitId":"ncduy0303"},"content":"![clear success](images/user-guide/clear.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":610,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":611,"author":{"gitId":"jedkohjk"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2023-11-01"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"jedkohjk"},"content":"#### Navigating the app using only the keyboard","lastModifiedDate":"2023-11-01"},{"lineNumber":618,"author":{"gitId":"nathanielcalimag"},"content":"You can use the following shortcuts to navigate our application:","lastModifiedDate":"2023-11-02"},{"lineNumber":619,"author":{"gitId":"nathanielcalimag"},"content":"- Selecting Result Display: [\u003ckbd\u003eALT\u003c/kbd\u003e (Windows/Linux) / \u003ckbd\u003eOPTION\u003c/kbd\u003e (Mac)] + \u003ckbd\u003eUP ARROW KEY\u003c/kbd\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":620,"author":{"gitId":"nathanielcalimag"},"content":"- Selecting Persons List: [\u003ckbd\u003eALT\u003c/kbd\u003e (Windows/Linux) / \u003ckbd\u003eOPTION\u003c/kbd\u003e (Mac)] + \u003ckbd\u003eLEFT ARROW KEY\u003c/kbd\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":621,"author":{"gitId":"nathanielcalimag"},"content":"- Selecting Transactions List: [\u003ckbd\u003eALT\u003c/kbd\u003e (Windows/Linux) / \u003ckbd\u003eOPTION\u003c/kbd\u003e (Mac)] + \u003ckbd\u003eRIGHT ARROW KEY\u003c/kbd\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":622,"author":{"gitId":"nathanielcalimag"},"content":"- Selecting Command Box: [\u003ckbd\u003eALT\u003c/kbd\u003e (Windows/Linux) / \u003ckbd\u003eOPTION\u003c/kbd\u003e (Mac)] + \u003ckbd\u003eDOWN ARROW KEY\u003c/kbd\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":623,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":624,"author":{"gitId":"nathanielcalimag"},"content":"For our result display, persons list and transaction list, once selected, you can use the \u003ckbd\u003eUP ARROW KEY\u003c/kbd\u003e or \u003ckbd\u003eDOWN ARROW KEY\u003c/kbd\u003e for scrolling.","lastModifiedDate":"2023-11-02"},{"lineNumber":625,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":626,"author":{"gitId":"wui-hong"},"content":"## Data","lastModifiedDate":"2023-11-12"},{"lineNumber":627,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2023-11-12"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"jedkohjk"},"content":"Data is saved in the hard disk automatically after any command that changes the data. There is no need","lastModifiedDate":"2023-11-01"},{"lineNumber":631,"author":{"gitId":"wui-hong"},"content":"to save manually.","lastModifiedDate":"2023-09-30"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2023-11-12"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":635,"author":{"gitId":"wui-hong"},"content":"Data is saved automatically as a JSON file `[JAR file location]/data/spendnsplitbook.json`. The data is human-readable. ","lastModifiedDate":"2023-11-12"},{"lineNumber":636,"author":{"gitId":"wui-hong"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":637,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":638,"author":{"gitId":"wui-hong"},"content":":heavy_exclamation_mark: However, be warned that the application may wipe the data or behave unexpectedly if the data is not edited correctly.","lastModifiedDate":"2023-11-12"},{"lineNumber":639,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":640,"author":{"gitId":"ncduy0303"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":642,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":644,"author":{"gitId":"wui-hong"},"content":"### 1) Why do the portions in the transaction list not add up exactly to the balances of certain people?","lastModifiedDate":"2023-11-12"},{"lineNumber":645,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":646,"author":{"gitId":"wui-hong"},"content":"The portions and balances displayed are rounded to a fixed number of decimal places. This means there may be fractional differences","lastModifiedDate":"2023-11-12"},{"lineNumber":647,"author":{"gitId":"wui-hong"},"content":"between the actual portions and what is displayed. Values are rounded to 2 decimal places (i.e. 0.149 will be rounded down to 0.14,","lastModifiedDate":"2023-11-06"},{"lineNumber":648,"author":{"gitId":"wui-hong"},"content":"and 0.145 will be rounded up to 0.15). The positive and negative signs will still be kept (i.e. -0.0000001 will be rounded","lastModifiedDate":"2023-11-06"},{"lineNumber":649,"author":{"gitId":"wui-hong"},"content":"down to -0.00, and -1.015 will be rounded up to -1.02).","lastModifiedDate":"2023-11-06"},{"lineNumber":650,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":651,"author":{"gitId":"wui-hong"},"content":"Example:","lastModifiedDate":"2023-09-29"},{"lineNumber":652,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":653,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":654,"author":{"gitId":"wui-hong"},"content":"If these are the stored balances of Roy and Tan in the application:","lastModifiedDate":"2023-11-12"},{"lineNumber":655,"author":{"gitId":"wui-hong"},"content":"Roy:      12.122345","lastModifiedDate":"2023-11-12"},{"lineNumber":656,"author":{"gitId":"wui-hong"},"content":"Tan:     -10.223231","lastModifiedDate":"2023-11-12"},{"lineNumber":657,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":658,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":659,"author":{"gitId":"wui-hong"},"content":"This is displayed instead in the application due to rounding off to 2 decimal places:","lastModifiedDate":"2023-11-06"},{"lineNumber":660,"author":{"gitId":"wui-hong"},"content":"A:      12.12","lastModifiedDate":"2023-11-12"},{"lineNumber":661,"author":{"gitId":"wui-hong"},"content":"B:     -10.22","lastModifiedDate":"2023-11-12"},{"lineNumber":662,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":663,"author":{"gitId":"wui-hong"},"content":"```","lastModifiedDate":"2023-09-29"},{"lineNumber":664,"author":{"gitId":"wui-hong"},"content":"### 2) What happens when I enter an invalid command?","lastModifiedDate":"2023-10-30"},{"lineNumber":665,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":666,"author":{"gitId":"wui-hong"},"content":"When an invalid command is input, an error message will be reflected at the","lastModifiedDate":"2023-10-30"},{"lineNumber":667,"author":{"gitId":"wui-hong"},"content":"output panel at the top of Spend N Split. The error message will vary depending on the type of error.","lastModifiedDate":"2023-11-12"},{"lineNumber":668,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":669,"author":{"gitId":"wui-hong"},"content":"* Execution error caused by invalid command format. This occurs when the command word","lastModifiedDate":"2023-11-12"},{"lineNumber":670,"author":{"gitId":"wui-hong"},"content":"is recognised but there are missing parameters or parameters are","lastModifiedDate":"2023-11-12"},{"lineNumber":671,"author":{"gitId":"wui-hong"},"content":"not supported.","lastModifiedDate":"2023-10-30"},{"lineNumber":672,"author":{"gitId":"wui-hong"},"content":"The error message reflected","lastModifiedDate":"2023-10-30"},{"lineNumber":673,"author":{"gitId":"wui-hong"},"content":"will state `Invalid command format!`,","lastModifiedDate":"2023-10-30"},{"lineNumber":674,"author":{"gitId":"wui-hong"},"content":"before giving details on the command and","lastModifiedDate":"2023-10-30"},{"lineNumber":675,"author":{"gitId":"wui-hong"},"content":"the parameters required, along with an example of a correct command","lastModifiedDate":"2023-11-12"},{"lineNumber":676,"author":{"gitId":"wui-hong"},"content":"input with the parameters required.","lastModifiedDate":"2023-11-12"},{"lineNumber":677,"author":{"gitId":"wui-hong"},"content":"    * Example: `settlePerson -1`","lastModifiedDate":"2023-10-30"},{"lineNumber":678,"author":{"gitId":"wui-hong"},"content":"      * Error message:","lastModifiedDate":"2023-10-30"},{"lineNumber":679,"author":{"gitId":"wui-hong"},"content":"    ```","lastModifiedDate":"2023-10-30"},{"lineNumber":680,"author":{"gitId":"wui-hong"},"content":"    Invalid command format!","lastModifiedDate":"2023-10-30"},{"lineNumber":681,"author":{"gitId":"wui-hong"},"content":"    settlePerson: Settle any outstanding balance with another person.","lastModifiedDate":"2023-11-12"},{"lineNumber":682,"author":{"gitId":"wui-hong"},"content":"    Parameters: INDEX (must be a positive integer)","lastModifiedDate":"2023-11-12"},{"lineNumber":683,"author":{"gitId":"wui-hong"},"content":"    Example: settlePerson 1","lastModifiedDate":"2023-10-30"},{"lineNumber":684,"author":{"gitId":"wui-hong"},"content":"    ```","lastModifiedDate":"2023-10-30"},{"lineNumber":685,"author":{"gitId":"wui-hong"},"content":"  ","lastModifiedDate":"2023-11-12"},{"lineNumber":686,"author":{"gitId":"wui-hong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":687,"author":{"gitId":"wui-hong"},"content":":bulb: Note the differences between Execution errors and Input errors. An execution error refers to an error that will occur","lastModifiedDate":"2023-11-12"},{"lineNumber":688,"author":{"gitId":"wui-hong"},"content":"regardless of the state of the application or its data, whereas input errors are errors that occur when certain conditions in the application","lastModifiedDate":"2023-11-12"},{"lineNumber":689,"author":{"gitId":"wui-hong"},"content":"are met. E.g. Attempting to settle the balance of a person at index 6 when there are only 5 people in the Person List, or attempting","lastModifiedDate":"2023-11-12"},{"lineNumber":690,"author":{"gitId":"wui-hong"},"content":"to add a person that has an identical name to someone that already exists in the Person List are both input errors.","lastModifiedDate":"2023-11-12"},{"lineNumber":691,"author":{"gitId":"wui-hong"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":693,"author":{"gitId":"wui-hong"},"content":"* Unknown command. This occurs when the command word is not recognised.","lastModifiedDate":"2023-10-30"},{"lineNumber":694,"author":{"gitId":"wui-hong"},"content":"The error message reflected will state `Unknown command`.","lastModifiedDate":"2023-10-30"},{"lineNumber":695,"author":{"gitId":"wui-hong"},"content":"  * Example: `settleTransaction n\u003dRyan tg\u003d@ryanzzzzz`","lastModifiedDate":"2023-10-30"},{"lineNumber":696,"author":{"gitId":"wui-hong"},"content":"    * Error message:","lastModifiedDate":"2023-10-30"},{"lineNumber":697,"author":{"gitId":"wui-hong"},"content":"  ```","lastModifiedDate":"2023-10-30"},{"lineNumber":698,"author":{"gitId":"wui-hong"},"content":"  Unknown command","lastModifiedDate":"2023-10-30"},{"lineNumber":699,"author":{"gitId":"wui-hong"},"content":"  ```","lastModifiedDate":"2023-10-30"},{"lineNumber":700,"author":{"gitId":"wui-hong"},"content":"* Input errors caused by invalid parameter values. This occurs when invalid parameter values are provided","lastModifiedDate":"2023-11-12"},{"lineNumber":701,"author":{"gitId":"wui-hong"},"content":"for the valid command word. The error message reflected is dependent on the","lastModifiedDate":"2023-10-30"},{"lineNumber":702,"author":{"gitId":"wui-hong"},"content":"valid command word.","lastModifiedDate":"2023-10-30"},{"lineNumber":703,"author":{"gitId":"wui-hong"},"content":"  * Example: `settlePerson 6` when there are only 5 people in the Person List.","lastModifiedDate":"2023-11-12"},{"lineNumber":704,"author":{"gitId":"wui-hong"},"content":"    * Error message:","lastModifiedDate":"2023-10-30"},{"lineNumber":705,"author":{"gitId":"wui-hong"},"content":"  ```","lastModifiedDate":"2023-10-30"},{"lineNumber":706,"author":{"gitId":"wui-hong"},"content":"  The person index provided is invalid","lastModifiedDate":"2023-10-30"},{"lineNumber":707,"author":{"gitId":"wui-hong"},"content":"  ```","lastModifiedDate":"2023-10-30"},{"lineNumber":708,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":709,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":710,"author":{"gitId":"wui-hong"},"content":"### 3) What is considered a relevant transaction?","lastModifiedDate":"2023-11-12"},{"lineNumber":711,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":712,"author":{"gitId":"wui-hong"},"content":"A transaction is only considered **relevant** if it involves you owing or being owed money","lastModifiedDate":"2023-11-10"},{"lineNumber":713,"author":{"gitId":"wui-hong"},"content":"by someone from your contacts list. In a relevant transaction:","lastModifiedDate":"2023-11-10"},{"lineNumber":714,"author":{"gitId":"wui-hong"},"content":"1. \"Self\" must either be the payee, a payer, or both. You must be involved in the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":715,"author":{"gitId":"wui-hong"},"content":"2. Include at least one person stored in the application (not \"Self\" or \"Others\") as either","lastModifiedDate":"2023-11-12"},{"lineNumber":716,"author":{"gitId":"wui-hong"},"content":"   the payee, a payer, or both. Someone else in your contacts list must be involved in the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":717,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":718,"author":{"gitId":"wui-hong"},"content":"If these conditions are not met, it means that the transaction does not affect your balance","lastModifiedDate":"2023-11-10"},{"lineNumber":719,"author":{"gitId":"wui-hong"},"content":"with anyone on your contract list, and hence is considered **irrelevant**.","lastModifiedDate":"2023-11-10"},{"lineNumber":720,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":721,"author":{"gitId":"wui-hong"},"content":"Examples of relevant transactions:","lastModifiedDate":"2023-11-10"},{"lineNumber":722,"author":{"gitId":"wui-hong"},"content":"- You are the payee for dinner. The payers are you, Alice and Bob.","lastModifiedDate":"2023-11-10"},{"lineNumber":723,"author":{"gitId":"wui-hong"},"content":"- Bob pays for transport. You and Alice are riders, and hence are the payers.","lastModifiedDate":"2023-11-10"},{"lineNumber":724,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":725,"author":{"gitId":"wui-hong"},"content":"In both these cases, you were involved as the payee or payer of the transaction,","lastModifiedDate":"2023-11-10"},{"lineNumber":726,"author":{"gitId":"wui-hong"},"content":"and so was another person in your contacts.","lastModifiedDate":"2023-11-10"},{"lineNumber":727,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":728,"author":{"gitId":"wui-hong"},"content":"Examples of irrelevant transactions:","lastModifiedDate":"2023-11-10"},{"lineNumber":729,"author":{"gitId":"wui-hong"},"content":"- Bob was the payee for dinner. The payers are Alice and Bob. You are not involved","lastModifiedDate":"2023-11-10"},{"lineNumber":730,"author":{"gitId":"wui-hong"},"content":"  and hence, this transaction is irrelevant.","lastModifiedDate":"2023-11-10"},{"lineNumber":731,"author":{"gitId":"wui-hong"},"content":"- You pay for transport for Zack. Zack is the only payer. Zack was then deleted from the","lastModifiedDate":"2023-11-12"},{"lineNumber":732,"author":{"gitId":"wui-hong"},"content":"  contacts list afterwards, resulting in him being considered as \"Others\" in the transaction.","lastModifiedDate":"2023-11-10"},{"lineNumber":733,"author":{"gitId":"wui-hong"},"content":"  This transaction becomes irrelevant and is automatically deleted from the transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":734,"author":{"gitId":"wui-hong"},"content":"  list when Zack is deleted.","lastModifiedDate":"2023-11-10"},{"lineNumber":735,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":736,"author":{"gitId":"wui-hong"},"content":"Note:","lastModifiedDate":"2023-11-10"},{"lineNumber":737,"author":{"gitId":"wui-hong"},"content":"- If you attempt to delete payers such that no one else from your contacts are involved in the","lastModifiedDate":"2023-11-12"},{"lineNumber":738,"author":{"gitId":"wui-hong"},"content":"  transaction, **the application will not execute your command**. You are advised to delete the transaction if","lastModifiedDate":"2023-11-12"},{"lineNumber":739,"author":{"gitId":"wui-hong"},"content":"  it no longer concerns you or anyone from your contacts list.","lastModifiedDate":"2023-11-10"},{"lineNumber":740,"author":{"gitId":"wui-hong"},"content":"- If you delete a person and it results in some transactions becoming irrelevant as highlighted","lastModifiedDate":"2023-11-12"},{"lineNumber":741,"author":{"gitId":"wui-hong"},"content":"  in the second example of  irrelevant transactions above, **the application will automatically delete","lastModifiedDate":"2023-11-12"},{"lineNumber":742,"author":{"gitId":"wui-hong"},"content":"  these irrelevant transactions**.","lastModifiedDate":"2023-11-10"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":744,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":746,"author":{"gitId":"nathanielcalimag"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-11-11"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":748,"author":{"gitId":"wui-hong"},"content":"We would like to acknowledge the following third-party libraries, frameworks and sources for their use in Spend N Split:","lastModifiedDate":"2023-11-12"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":750,"author":{"gitId":"nathanielcalimag"},"content":"**Development**","lastModifiedDate":"2023-11-11"},{"lineNumber":751,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":752,"author":{"gitId":"wui-hong"},"content":"* **[Jackson](https://github.com/FasterXML/jackson)**: The Java JSON library for parsing and creating JSON for Spend N Split.","lastModifiedDate":"2023-11-12"},{"lineNumber":753,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":754,"author":{"gitId":"wui-hong"},"content":"* **[JUnit 5](https://junit.org/junit5/)**: The Java testing framework of Spend N Split.","lastModifiedDate":"2023-11-12"},{"lineNumber":755,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":756,"author":{"gitId":"wui-hong"},"content":"* **[Apache Common Numbers](https://github.com/apache/commons-numbers/tree/master)**: The Java numbers library that enhance Spend N Split\u0027s precision.","lastModifiedDate":"2023-11-12"},{"lineNumber":757,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":758,"author":{"gitId":"nathanielcalimag"},"content":"**Gradle**","lastModifiedDate":"2023-11-11"},{"lineNumber":759,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":760,"author":{"gitId":"nathanielcalimag"},"content":"* **[Checkstyle](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)**: The Gradle plugin that ensures consistent and appropriate code style.","lastModifiedDate":"2023-11-11"},{"lineNumber":761,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":762,"author":{"gitId":"wui-hong"},"content":"* **[Shadow](https://github.com/johnrengelman/shadow)**: The Gradle plugin for creating fat JARs for Spend N Split.","lastModifiedDate":"2023-11-12"},{"lineNumber":763,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":764,"author":{"gitId":"nathanielcalimag"},"content":"* **[Jacoco](https://github.com/palantir/gradle-jacoco-coverage)**: The Gradle plugin for generating code coverage reports.","lastModifiedDate":"2023-11-11"},{"lineNumber":765,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":766,"author":{"gitId":"nathanielcalimag"},"content":"**User Interface**","lastModifiedDate":"2023-11-11"},{"lineNumber":767,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":768,"author":{"gitId":"wui-hong"},"content":"* **[JavaFX](https://openjfx.io/)**: The GUI framework of Spend N Split.","lastModifiedDate":"2023-11-12"},{"lineNumber":769,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":770,"author":{"gitId":"wui-hong"},"content":"* **[Poppins Font](https://fonts.google.com/specimen/Poppins)**: The primary font used in Spend N Split.","lastModifiedDate":"2023-11-12"},{"lineNumber":771,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":772,"author":{"gitId":"wui-hong"},"content":"* **[Tailwind CSS Colors](https://tailwindcss.com/docs/customizing-colors)**: The colour palette that inspired the Spend N Split colour scheme.","lastModifiedDate":"2023-11-12"},{"lineNumber":773,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":774,"author":{"gitId":"nathanielcalimag"},"content":"**Others**","lastModifiedDate":"2023-11-11"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":776,"author":{"gitId":"wui-hong"},"content":"* **[Address Book 3](https://se-education.org/addressbook-level3/)**: The project Spend N Split is based on.","lastModifiedDate":"2023-11-12"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":778,"author":{"gitId":"wui-hong"},"content":"* **[Jekyll](https://github.com/jekyll/jekyll)**: The static site generator that converts Spend N Split markdown documentation into web pages.","lastModifiedDate":"2023-11-12"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":780,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":781,"author":{"gitId":"wui-hong"},"content":"## Glossary","lastModifiedDate":"2023-11-10"},{"lineNumber":782,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":783,"author":{"gitId":"wui-hong"},"content":"### Address","lastModifiedDate":"2023-11-11"},{"lineNumber":784,"author":{"gitId":"wui-hong"},"content":"The particulars of the place where a person lives.","lastModifiedDate":"2023-11-11"},{"lineNumber":785,"author":{"gitId":"wui-hong"},"content":"### Alphanumeric","lastModifiedDate":"2023-11-11"},{"lineNumber":786,"author":{"gitId":"wui-hong"},"content":"Consisting of only letters (a-z, A-Z) or numbers or both.","lastModifiedDate":"2023-11-11"},{"lineNumber":787,"author":{"gitId":"wui-hong"},"content":"### Amount","lastModifiedDate":"2023-11-11"},{"lineNumber":788,"author":{"gitId":"wui-hong"},"content":"The total value of the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":789,"author":{"gitId":"wui-hong"},"content":"### Balance","lastModifiedDate":"2023-11-11"},{"lineNumber":790,"author":{"gitId":"wui-hong"},"content":"The amount of money that you owe a person or the amount of money that they owe you. A positive balance under a person","lastModifiedDate":"2023-11-12"},{"lineNumber":791,"author":{"gitId":"wui-hong"},"content":"means that they owe you money, whereas a negative balance means that you owe them money.","lastModifiedDate":"2023-11-12"},{"lineNumber":792,"author":{"gitId":"wui-hong"},"content":"### Card","lastModifiedDate":"2023-11-11"},{"lineNumber":793,"author":{"gitId":"wui-hong"},"content":"A rectangular area in our application that either describes the full details of a transaction or person.","lastModifiedDate":"2023-11-12"},{"lineNumber":794,"author":{"gitId":"wui-hong"},"content":"### Command","lastModifiedDate":"2023-11-11"},{"lineNumber":795,"author":{"gitId":"wui-hong"},"content":"To use and control the application, commands are necessary. To utilise a feature, a command has to be typed into the Command Input Field and executed. ","lastModifiedDate":"2023-11-12"},{"lineNumber":796,"author":{"gitId":"wui-hong"},"content":"### Cost","lastModifiedDate":"2023-11-11"},{"lineNumber":797,"author":{"gitId":"wui-hong"},"content":"The total value of the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":798,"author":{"gitId":"wui-hong"},"content":"### Description","lastModifiedDate":"2023-11-11"},{"lineNumber":799,"author":{"gitId":"wui-hong"},"content":"A written account of a transaction, used to provide context and details about the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":800,"author":{"gitId":"wui-hong"},"content":"### Email address","lastModifiedDate":"2023-11-11"},{"lineNumber":801,"author":{"gitId":"wui-hong"},"content":"A unique identifier for an email account. It identifies an email box to which messages and emails are delivered.","lastModifiedDate":"2023-11-12"},{"lineNumber":802,"author":{"gitId":"wui-hong"},"content":"### Field","lastModifiedDate":"2023-11-11"},{"lineNumber":803,"author":{"gitId":"wui-hong"},"content":"An area where text can be input.","lastModifiedDate":"2023-11-12"},{"lineNumber":804,"author":{"gitId":"wui-hong"},"content":"### Flag","lastModifiedDate":"2023-11-11"},{"lineNumber":805,"author":{"gitId":"wui-hong"},"content":"Flags are used to modify the operation of a command.","lastModifiedDate":"2023-11-12"},{"lineNumber":806,"author":{"gitId":"wui-hong"},"content":"### Gui","lastModifiedDate":"2023-11-11"},{"lineNumber":807,"author":{"gitId":"wui-hong"},"content":"Gui stands for graphical user interface. A graphical user interface uses icons and mouse inputs from users to allow them to interact with the application.","lastModifiedDate":"2023-11-12"},{"lineNumber":808,"author":{"gitId":"wui-hong"},"content":"### Index","lastModifiedDate":"2023-11-11"},{"lineNumber":809,"author":{"gitId":"wui-hong"},"content":"A number representing the position of an item in a list.","lastModifiedDate":"2023-11-12"},{"lineNumber":810,"author":{"gitId":"wui-hong"},"content":"### Integer","lastModifiedDate":"2023-11-11"},{"lineNumber":811,"author":{"gitId":"wui-hong"},"content":"A number that is a not a fraction. E.g. whole numbers such as -10, 0, 1, 5/","lastModifiedDate":"2023-11-12"},{"lineNumber":812,"author":{"gitId":"wui-hong"},"content":"### Keyword","lastModifiedDate":"2023-11-11"},{"lineNumber":813,"author":{"gitId":"wui-hong"},"content":"An important word that is used by the application to process various commands.","lastModifiedDate":"2023-11-12"},{"lineNumber":814,"author":{"gitId":"wui-hong"},"content":"### Name","lastModifiedDate":"2023-11-11"},{"lineNumber":815,"author":{"gitId":"wui-hong"},"content":"A word or set of words that are used to address or refer to a person.","lastModifiedDate":"2023-11-12"},{"lineNumber":816,"author":{"gitId":"wui-hong"},"content":"### Negative","lastModifiedDate":"2023-11-12"},{"lineNumber":817,"author":{"gitId":"wui-hong"},"content":"A numerical value that is less than 0.","lastModifiedDate":"2023-11-12"},{"lineNumber":818,"author":{"gitId":"wui-hong"},"content":"### Parameter","lastModifiedDate":"2023-11-11"},{"lineNumber":819,"author":{"gitId":"wui-hong"},"content":"An additional input that provides further details on a command that a user is executing.","lastModifiedDate":"2023-11-12"},{"lineNumber":820,"author":{"gitId":"wui-hong"},"content":"### Payee","lastModifiedDate":"2023-11-11"},{"lineNumber":821,"author":{"gitId":"wui-hong"},"content":"Refers to the person that paid for the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":822,"author":{"gitId":"wui-hong"},"content":"### Payer","lastModifiedDate":"2023-11-11"},{"lineNumber":823,"author":{"gitId":"wui-hong"},"content":"Refers to a person that owes the payee money for the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":824,"author":{"gitId":"wui-hong"},"content":"### Person","lastModifiedDate":"2023-11-11"},{"lineNumber":825,"author":{"gitId":"wui-hong"},"content":"A human being.","lastModifiedDate":"2023-11-12"},{"lineNumber":826,"author":{"gitId":"wui-hong"},"content":"### Phone number","lastModifiedDate":"2023-11-11"},{"lineNumber":827,"author":{"gitId":"wui-hong"},"content":"A sequence of digits that is dialled on a telephone to contact a person.","lastModifiedDate":"2023-11-12"},{"lineNumber":828,"author":{"gitId":"wui-hong"},"content":"### Portion","lastModifiedDate":"2023-11-11"},{"lineNumber":829,"author":{"gitId":"wui-hong"},"content":"A subset of a transaction. A transaction is split into multiple portions.","lastModifiedDate":"2023-11-12"},{"lineNumber":830,"author":{"gitId":"wui-hong"},"content":"### Positive","lastModifiedDate":"2023-11-11"},{"lineNumber":831,"author":{"gitId":"wui-hong"},"content":"A numerical value that is greater than 0.","lastModifiedDate":"2023-11-12"},{"lineNumber":832,"author":{"gitId":"wui-hong"},"content":"### Settle","lastModifiedDate":"2023-11-11"},{"lineNumber":833,"author":{"gitId":"wui-hong"},"content":"Refers to the act of two people exchanging money, such that their respective balances with each other equal zero after the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":834,"author":{"gitId":"wui-hong"},"content":"### Shorthand","lastModifiedDate":"2023-11-11"},{"lineNumber":835,"author":{"gitId":"wui-hong"},"content":"A shortened version of a command.","lastModifiedDate":"2023-11-12"},{"lineNumber":836,"author":{"gitId":"wui-hong"},"content":"### Tag","lastModifiedDate":"2023-11-11"},{"lineNumber":837,"author":{"gitId":"wui-hong"},"content":"A label that can be applied to a person to provide additional details about them.","lastModifiedDate":"2023-11-12"},{"lineNumber":838,"author":{"gitId":"wui-hong"},"content":"### Telegram handle","lastModifiedDate":"2023-11-11"},{"lineNumber":839,"author":{"gitId":"wui-hong"},"content":"A unique identifier for a telegram account. ","lastModifiedDate":"2023-11-12"},{"lineNumber":840,"author":{"gitId":"wui-hong"},"content":"### Timestamp","lastModifiedDate":"2023-11-11"},{"lineNumber":841,"author":{"gitId":"wui-hong"},"content":"Refers to the time the transaction occurred. Timestamps in our application are displayed in the \"DD/MM/YYYY HH:MM\" format. DD refers to Day, MM refers to Month,","lastModifiedDate":"2023-11-12"},{"lineNumber":842,"author":{"gitId":"wui-hong"},"content":"YYYY refers to Year, HH refers to Hour, and MM refers to Minute.","lastModifiedDate":"2023-11-12"},{"lineNumber":843,"author":{"gitId":"wui-hong"},"content":"### Transaction","lastModifiedDate":"2023-11-11"},{"lineNumber":844,"author":{"gitId":"wui-hong"},"content":"An interaction of buying or selling something where the exchange of money occurs.","lastModifiedDate":"2023-11-12"},{"lineNumber":845,"author":{"gitId":"wui-hong"},"content":"### Weight","lastModifiedDate":"2023-11-11"},{"lineNumber":846,"author":{"gitId":"wui-hong"},"content":"A numerical value assigned to each person that is involved in a transaction. It is used to calculate the amount of money that","lastModifiedDate":"2023-11-12"},{"lineNumber":847,"author":{"gitId":"wui-hong"},"content":"a person should pay for their share of the transaction.","lastModifiedDate":"2023-11-12"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"jedkohjk":141,"nathanielcalimag":40,"ncduy0303":40,"-":121,"wui-hong":443,"jeffrey-jian":63}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ncduy0303"},"content":"    content: \"SnS\";","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ncduy0303":1,"-":294}},{"path":"docs/diagrams/AddPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"start","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":":User enters addPerson command;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"if () then ([Person name is not provided])","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Some provided fields are invalid])","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Person name is a reserved word])","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Person already exists in the person list])","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"  :Add person to the person list;","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"stop","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":21}},{"path":"docs/diagrams/AddPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":AddPersonCommandParser\" as AddPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \":Name\" as Name LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \":Person\" as Person LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"participant \"ap:AddPersonCommand\" as AddPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"[-\u003e LogicManager : execute(\"addPerson n\u003dname\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e Model : getCommandMap()","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e LogicManager : cm","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"addPerson n\u003dname\", cm)","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"create AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"activate AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommandParser --\u003e SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"deactivate AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e AddPersonCommandParser : parse(\"n\u003dname\")","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"activate AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"create Name","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommandParser -\u003e Name","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"activate Name","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"Name --\u003e AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"deactivate Name","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"create Person","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommandParser -\u003e Person","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"activate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"Person --\u003e AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"deactivate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"create AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommandParser -\u003e AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"activate AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommand --\u003e AddPersonCommandParser : ap","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"deactivate AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommandParser --\u003e SpendNSplitParser : ap","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"deactivate AddPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"\u0027AddPersonCommandParser -[hidden]-\u003e SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy AddPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser --\u003e LogicManager : ap","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e AddPersonCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"activate AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommand -\u003e Model : addPerson(personToAdd)","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"\u0027activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"\u0027Model --\u003e AddPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"\u0027deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"CommandResult --\u003e AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"AddPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"deactivate AddPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"ncduy0303":89}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveSpendNSplitBook(spendNSplit)","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":38,"wui-hong":1}},{"path":"docs/diagrams/ClearCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"participant \"cc:ClearCommand\" as ClearCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"participant \"sns:SpendNSplit\" as SpendNSplit LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"[-\u003e LogicManager : execute(\"clear\")","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"clear\")","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"create ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser -\u003e ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"activate ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"ClearCommand --\u003e SpendNSplitParser : cc","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"deactivate ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser --\u003e LogicManager : cc","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e ClearCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"activate ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"create SpendNSplit","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"ClearCommand -\u003e SpendNSplit","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"activate SpendNSplit","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplit -\u003e ClearCommand : sns","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SpendNSplit","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"ClearCommand -\u003e Model : setSpendNSplitBook(sns)","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"Model --\u003e ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"ClearCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"CommandResult --\u003e ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"ClearCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"deactivate ClearCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jeffrey-jian":62}},{"path":"docs/diagrams/DeletePersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"start","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":":User enters deletePerson command;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"if () then ([A non-positive index is provided])","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Index is out of range of the person list])","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"  :Delete person in the person list;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"stop","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":15}},{"path":"docs/diagrams/DeletePersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"skinparam sequenceReferenceBackgroundColor yellow","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \":DeletePersonCommandParser\" as DeletePersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \"dp:DeletePersonCommand\" as DeletePersonCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"[-\u003e LogicManager : execute(\"deletePerson 1\")","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e Model : getCommandMap()","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e LogicManager : cm","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"deletePerson 1\", cm)","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"create DeletePersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e DeletePersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommandParser --\u003e SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e DeletePersonCommandParser : parse(\"1\")","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"activate DeletePersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"create DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommandParser -\u003e DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"activate DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommand --\u003e DeletePersonCommandParser : dp","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommandParser --\u003e SpendNSplitParser : dp","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"deactivate DeletePersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"\u0027DeletePersonCommandParser -[hidden]-\u003e SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy DeletePersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser --\u003e LogicManager : dp","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e DeletePersonCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"activate DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommand -\u003e Model : deletePerson(personToDelete)","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"ref over Model : delete person","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"CommandResult --\u003e DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"DeletePersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"deactivate DeletePersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"ncduy0303":83}},{"path":"docs/diagrams/DeletePersonSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplit\" as SpendNSplit MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \":UniqueTransactionList\" as UniqueTransactionList MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \":Transaction\" as Transaction MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"mainframe sd delete person","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"Model -\u003e SpendNSplit : deletePerson(personToDelete)","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplit","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e UniquePersonList : remove(personToDelete)","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e UniqueTransactionList : deletePerson(personToDeleteName, allPersonNames)","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"activate UniqueTransactionList","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"loop for each transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    UniqueTransactionList -\u003e Transaction : removePerson(personToDeleteName)","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    activate Transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    Transaction --\u003e UniqueTransactionList : updatedTransaction","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    deactivate Transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    alt #LightBlue updatedTransaction is valid","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"        UniqueTransactionList -\u003e UniqueTransactionList : set transaction to updatedTransaction","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    else #Pink","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        UniqueTransactionList -\u003e UniqueTransactionList : remove transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    end","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"UniqueTransactionList --\u003e SpendNSplit","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"deactivate UniqueTransactionList","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e SpendNSplit : sortPersons()","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit --\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplit","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":44}},{"path":"docs/diagrams/EditPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"start","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":":User enters editPerson command;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"if () then ([A non-positive index is provided])","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([No edited fields are provided])","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Some fields provided are invalid])","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Updated person name is a reserved keyword])","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Index is out of range of the person list])","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"([else]) elseif () then ([Updated person already exists in the person list])","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"  :Edit person in the person list;","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"stop","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":27}},{"path":"docs/diagrams/EditPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"skinparam sequenceReferenceBackgroundColor yellow","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \":EditPersonCommandParser\" as EditPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \":PersonDescriptor\" as PersonDescriptor LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"participant \"ep:EditPersonCommand\" as EditPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"participant \":Person\" as Person LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"[-\u003e LogicManager : execute(\"editPerson 1 ...\")","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e Model : getCommandMap()","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e LogicManager : cm","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"editPerson 1 ...\", cm)","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"create EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"activate EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommandParser --\u003e SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"deactivate EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e EditPersonCommandParser : parse(\"1 ...\")","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"activate EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"create PersonDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommandParser -\u003e PersonDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"activate PersonDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"PersonDescriptor --\u003e EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"deactivate PersonDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"\u0027PersonDescriptor -[hidden]-\u003e EditPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy PersonDescriptor","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"create EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommandParser -\u003e EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"activate EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand --\u003e EditPersonCommandParser : ep","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"deactivate EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommandParser --\u003e SpendNSplitParser : ep","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"deactivate EditPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"\u0027EditPersonCommandParser -[hidden]-\u003e SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy EditPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser --\u003e LogicManager : ep","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e EditPersonCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"activate EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand -\u003e EditPersonCommand : createEditedPerson(personToEdit, personDescriptor)","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"activate EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"create Person","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand -\u003e Person","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"activate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"Person --\u003e EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"deactivate Person","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand --\u003e EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"deactivate EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"ref over Model : update person","lastModifiedDate":"2023-11-12"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e EditPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"\u0027activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"\u0027Model --\u003e EditPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"\u0027deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"CommandResult --\u003e EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"EditPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"deactivate EditPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"ncduy0303":114}},{"path":"docs/diagrams/EditPersonSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplit\" as SpendNSplit MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \":UniqueTransactionList\" as UniqueTransactionList MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \":Transaction\" as Transaction MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"mainframe sd update person","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"Model -\u003e SpendNSplit : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplit","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e UniquePersonList : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e UniqueTransactionList : setPerson(personToEditName, editedPersonName)","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"activate UniqueTransactionList","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"loop for each transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    UniqueTransactionList -\u003e Transaction : setPerson(personToEditName, editedPersonName)","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    activate Transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    Transaction --\u003e UniqueTransactionList : updatedTransaction","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    deactivate Transaction","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    UniqueTransactionList -\u003e UniqueTransactionList : set transaction to updatedTransaction","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"UniqueTransactionList --\u003e SpendNSplit","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"deactivate UniqueTransactionList","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e SpendNSplit : syncNames()","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit -\u003e SpendNSplit : sortPersons()","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"SpendNSplit --\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplit","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":42}},{"path":"docs/diagrams/ExitCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"participant \"ec:ExitCommand\" as ExitCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"[-\u003e MainWindow : executeCommand(\"exit\")","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"activate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"MainWindow -\u003e LogicManager : execute(\"exit\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"exit\")","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"create ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser -\u003e ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"activate ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"ExitCommand --\u003e SpendNSplitParser : ec","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser --\u003e LogicManager : ec","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e ExitCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"activate ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"ExitCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"CommandResult --\u003e ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"ExitCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"MainWindow \u003c-- LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"MainWindow -\u003e MainWindow : handleExit()","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"activate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"deactivate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"[\u003c-- MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"deactivate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jeffrey-jian":59}},{"path":"docs/diagrams/HelpCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"participant \"hc:HelpCommand\" as HelpCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"[-\u003e MainWindow : executeCommand(\"help\")","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"activate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"MainWindow -\u003e LogicManager : execute(\"help\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"help\")","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"create HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser -\u003e HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"activate HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"HelpCommand --\u003e SpendNSplitParser : hc","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"deactivate HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser --\u003e LogicManager : hc","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e HelpCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"activate HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"HelpCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"CommandResult --\u003e HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"HelpCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"deactivate HelpCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"MainWindow \u003c-- LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"MainWindow -\u003e MainWindow : handleHelp()","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"activate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"deactivate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"[\u003c-- MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"deactivate MainWindow","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jeffrey-jian":59}},{"path":"docs/diagrams/ListPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"start","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":":User enters listPerson command;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"if () then ([No keywords are provided])","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"  :List all persons in the person list;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"  :List only persons whose names contain the keywords;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"stop","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":11}},{"path":"docs/diagrams/ListPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":ListPersonCommandParser\" as ListPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \"predicate:NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \"lp:ListPersonCommand\" as ListPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"[-\u003e LogicManager : execute(\"listPerson keyword\")","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e Model : getCommandMap()","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e LogicManager : cm","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"listPerson keyword\", cm)","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"create ListPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e ListPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"activate ListPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommandParser --\u003e SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"deactivate ListPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e ListPersonCommandParser : parse(\"keyword\")","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"activate ListPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommandParser -\u003e NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"NameContainsKeywordsPredicate --\u003e ListPersonCommandParser : predicate","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"\u0027NameContainsKeywordsPredicate -[hidden]-\u003e ListPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy NameContainsKeywordsPredicate","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"create ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommandParser -\u003e ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"activate ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommand --\u003e ListPersonCommandParser : lp","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"deactivate ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommandParser --\u003e SpendNSplitParser : lp","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"deactivate ListPersonCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"\u0027ListPersonCommandParser -[hidden]-\u003e SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy ListPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser --\u003e LogicManager : lp","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e ListPersonCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"activate ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"\u0027activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"\u0027Model --\u003e ListPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"\u0027deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"CommandResult --\u003e ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"ListPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"deactivate ListPersonCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"ncduy0303":86}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"Person *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"Person *--\u003e \"0..1\" TelegramHandle","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"ncduy0303":15}},{"path":"docs/diagrams/SetShorthandCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"start","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":":User enters setShorthand command;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"if () then ([Command format is invalid])","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"([else]) elseif () then ([Original command does not exist])","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"([else]) elseif () then ([Shorthand is an original command])","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"([else]) elseif () then ([Shorthand already in use by another command])","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"  stop","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"if () then ([Has existing shorthand])","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"  :Delete existing shorthand from original command;","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"else","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"  :Add new shorthand to original command;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"stop","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"jeffrey-jian":24}},{"path":"docs/diagrams/SetShorthandCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"skinparam sequenceReferenceBackgroundColor yellow","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"participant \":SetShorthandCommandParser\" as SetShorthandCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"participant \"ss:SetShorthandCommand\" as SetShorthandCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"[-\u003e LogicManager : execute(\"setShorthand o\u003d... s\u003d...\")","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"setShorthand o\u003d... s\u003d...\")","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"create SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser -\u003e SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"activate SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommandParser --\u003e SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser -\u003e SetShorthandCommandParser : parse(\"o\u003d... s\u003d...\")","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"activate SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"create SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommandParser -\u003e SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"activate SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommand --\u003e SetShorthandCommandParser : ss","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommandParser --\u003e SpendNSplitParser : ss","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"\u0027\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"\u0027SetShorthandCommandParser -[hidden]-\u003e SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"\u0027destroy SetShorthandCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"SpendNSplitParser --\u003e LogicManager : ss","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"LogicManager -\u003e SetShorthandCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"activate SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommand -\u003e Model : setCommandAlias(command, alias)","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"ref over Model: set alias","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"Model --\u003e SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"CommandResult --\u003e SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"SetShorthandCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"deactivate SetShorthandCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"jeffrey-jian":73}},{"path":"docs/diagrams/SetShorthandCommandSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"participant \":UserPrefs\" as UserPrefs MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"participant \":CommandAliasMap\" as CommandAliasMap MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"mainframe sd set alias","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"Model -\u003e UserPrefs : setCommandAlias(command, alias)","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"activate UserPrefs","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"UserPrefs -\u003e CommandAliasMap : putAlias(command, alias)","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"activate CommandAliasMap","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"CommandAliasMap --\u003e UserPrefs","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"deactivate CommandAliasMap","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"UserPrefs --\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"deactivate UserPrefs","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"jeffrey-jian":24}},{"path":"docs/diagrams/SortPersonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"start","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":":User enters sortPerson command;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"if () then ([A valid order is provided])","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"  :Sort the displayed list of persons by the given order;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"else ([else])","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"  :Throw exception;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"endif","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"stop","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":11}},{"path":"docs/diagrams/SortPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"participant \":SpendNSplitParser\" as SpendNSplitParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"participant \":SortPersonCommandParser\" as SortPersonCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"participant \"sp:SortPersonCommand\" as SortPersonCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"[-\u003e LogicManager : execute(\"sortPerson +\")","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e Model : getCommandMap()","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"Model --\u003e LogicManager : cm","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e SpendNSplitParser : parseCommand(\"sortPerson +\", cm)","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"activate SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"create SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"activate SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"SortPersonCommandParser --\u003e SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"deactivate SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser -\u003e SortPersonCommandParser : parse(\"+\")","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"activate SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"create SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"SortPersonCommandParser -\u003e SortPersonCommand : new SortPersonCommand(isDesc)","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"activate SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"SortPersonCommand --\u003e SortPersonCommandParser : sp","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"deactivate SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"SortPersonCommandParser --\u003e SpendNSplitParser : sp","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"deactivate SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"\u0027SortPersonCommandParser -[hidden]-\u003e SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"\u0027destroy SortPersonCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"SpendNSplitParser --\u003e LogicManager : sp","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"deactivate SpendNSplitParser","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"LogicManager -\u003e SortPersonCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"activate SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"alt #LightBlue isDesc","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    SortPersonCommand -\u003e Model : sortPersonDescending()","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"\u0027    activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"\u0027    Model --\u003e SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"\u0027    deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"else #Pink","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    SortPersonCommand -\u003e Model : sortPersonAscending()","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"\u0027    activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"\u0027    Model --\u003e SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"\u0027    deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"end","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"SortPersonCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"CommandResult --\u003e SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"SortPersonCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"deactivate SortPersonCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"ncduy0303":83}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"Class \"{abstract}\\nUiPartFocusable\" as UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"Class TransactionListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"Class TransactionCard","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"MainWindow *-down-\u003e \"1\" TransactionListPanel","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"MainWindow --\u003e \"0..1\" UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"TransactionListPanel -down-\u003e \"*\" TransactionCard","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"ResultDisplay --|\u003e UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"CommandBox --|\u003e UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"PersonListPanel --|\u003e UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"TransactionListPanel --|\u003e UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"TransactionCard --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"HelpWindow --|\u003e UiPartFocusable","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"UiPartFocusable --|\u003e UiPart","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"TransactionCard ..\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"TransactionListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ncduy0303":16,"-":52}},{"path":"docs/diagrams/UpdatePortionCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"top to bottom direction","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"skinparam linetype ortho","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"class Command","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"class Transaction {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"class UniqueTransactionList {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"class UpdatePortionCommand {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"class UpdatePortionCommandParser {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"UniqueTransactionList      \"1\" *-[#595959,plain]-\u003e \"internalList\\n*\" Transaction","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"UpdatePortionCommand        -[#000082,plain]up-^  Command","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"UpdatePortionCommand        -[#595959,dashed]left-\u003e  Transaction                : \"«create»\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"UpdatePortionCommand        -[#595959,dashed]-\u003e  UpdatePortionDescriptor    : \"«create»\"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"UpdatePortionCommand       \"1\" *-[#595959,plain]-\u003e \"1\" UpdatePortionDescriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"UpdatePortionCommandParser  -[#595959,dashed]-\u003e  UpdatePortionCommand       : \"«create»\"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"UpdatePortionCommandParser  -[#595959,dashed]-\u003e  UpdatePortionDescriptor    : \"«create»\"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jeffrey-jian":28}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"title: Spend n Split (SnS)","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W17-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W17-3/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W17-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-W17-3/tp)","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"***Taking care of your finances has never been easier!***","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"Spend n Split (SnS) is an application for managing transactions from your contacts list. Built for university students","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"that reside on campus, it utilises your fast typing skills to help you maintain financial accountability between","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"yourself and your peers. All you need to do, is to record your transactions in Spend n Split. Filtering, sorting, as","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"well as the calculations of balances owed will be automatically handled by Spend n Split.","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"* Main features:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"  * Manage contacts and their personal information","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"  * Manage expenses between you and your contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"* If you are interested in using SnS, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"* If you are interested about developing SnS, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"* This is a brownfield software project based on [AddressBook Level-3](https://se-education.org/addressbook-level3/) created by the [SE-EDU initiative](https://se-education.org), taken under the [CS2103T Software Engineering course](https://nus-cs2103-ay2223s1.github.io/website/index.html) held by the School of Computing at the National University of Singapore.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nathanielcalimag":7,"ncduy0303":7,"-":14}},{"path":"docs/team/jedkohjk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jedkohjk"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"title: Jed Koh\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"### Project: Spend n Split","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"If you can type fast, SnS can get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djedkohjk\u0026)","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"  * Renamed addressbook spendnsplit in several parts of the app","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"  * Made split panel for transactions list in the UI","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"  * Added balance field for persons in the UI","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"  * Added support for multiple payers in addTransaction","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"  * Added sortPerson command","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"  * Added setShorthand command","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"  * Added support for timestamps in settlePerson command","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"  * Added descriptions for features I had implemented","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"* **Contributions to the DG**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"  * Participated in planning and designing the app","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"  * Actively fixed bugs","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"  * Actively reviewed pull requests","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"jedkohjk":34}},{"path":"docs/team/jeffrey-jian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"title: Jeffrey Jian\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"### Project: Spend n Split","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"### Overview","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"If you can type fast, SnS can get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djeffrey-jian\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"* **Enhancements implemented**: Added the ability to use hotkeys to navigate through the app.","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"* **Contributions to the UG**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"* **Contributions to the DG**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"* **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"* **New Feature**: Added TransactionList to store transactions.","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"* **What it does**: Allows the user to store transactions in a list.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"* **Justification**: This feature allows the user to view the transactions they have made.","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"* **Highlights**: This enhancement affects transaction-related commands. It required an in-depth analysis of design alternatives, where we considered the need for a unique or non-unique list.","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"* **New Feature**: Added new command `editTransaction`.","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"* **What it does**: Allows the user to edit an existing transaction in the transaction list.","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"* **Justification**: This feature allows the user to edit the transactions they have made, in case they made a mistake or would like to update the transaction.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"* **Highlights**: This enhancement affects transaction-related commands. It required an in-depth analysis of design alternatives, whereby we considered what should we allow the user to edit, and how should we allow the user to edit.","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"* **New Feature**: Added new command `updatePortion`.","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"* **What it does**: Allows the user to update the portions of a transaction.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"* **Justification**: This feature allows the user to update the portions of a transaction, in case they made a mistake or would like to update the portions of a transaction.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"* **Highlights**: This enhancement affects transaction-related commands. It required an in-depth judgement about the splitting of the commands for editing transactions, and how to allow the user to update the portions of a transaction. It also required the designing of a 3-in-1 command, which is a command that can be used to add, edit, and delete portions.","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"* **New Feature**: Added hotkeys to navigate through the app.","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"* **What it does**: Allows the user to use pre-defined hotkeys to navigate through the app.","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"* **Justification**: This feature allows the user to navigate through the app faster using the keyboard only, and is especially useful for users who are familiar with the app.","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"* **Highlights**: This enhancement requires the use of JavaFX and keyCombination to implement the hotkeys. It also required an in-depth analysis of design alternatives, whereby we considered the need for hotkeys, and what hotkeys should we implement.","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"* User Guide:","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"* Added documentation for the features `editTransaction` and `updatePortion`","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"* Did cosmetic tweaks to include tips and notes for features regarding \"relevant\" transactions.","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"* Developer Guide:","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"* Added implementation details of the `editTransaction` and `updatePortion` features.","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **Code contributed**: [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **Project management**:)","lastModifiedDate":"2023-10-01"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **Enhancements to existing features**:)","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **Documentation**:)","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * User Guide:)","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2023-10-01"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2023-10-01"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **Community**:)","lastModifiedDate":"2023-10-01"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* **Tools**:)","lastModifiedDate":"2023-10-01"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2023-10-01"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # ()","lastModifiedDate":"2023-10-01"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"[//]: # (* _{you can add/remove categories in the list above}_)","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"jeffrey-jian":118}},{"path":"docs/team/nathanielcalimag.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"title: Nathaniel\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"### Project: Spend n Split","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"If you can type fast, SnS can get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"#### Code Constribution","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"##### General","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dnathanielcalimag\u0026)","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"##### Extend focus-state shortcuts","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"- **What it does**: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"- **Justification**: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"- **Highlights**: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"##### Enhanced UI from dark-theme to light-theme","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"- **What it does**: What it does","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"- **Justification**: Justification","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"- **Highlights**: Highlights","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"##### Added sample transaction data","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"- **What it does**: What it does","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"- **Justification**: Justification","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"- **Highlights**: Highlights","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"##### Added Expense Model","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"- **What it does**: What it does","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"- **Justification**: Justification","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"- **Highlights**: Highlights","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"##### Updated Storage to Support Transactions","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"- **What it does**: What it does","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"- **Justification**: Justification","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"- **Highlights**: Highlights","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"##### Settle Person Commmand","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"- **What it does**: What it does","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"- **Justification**: Justification","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"- **Highlights**: Highlights","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"#### Project Management","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"#### Documentation","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"#### Others","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"nathanielcalimag":82}},{"path":"docs/team/ncduy0303.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"title: Nguyen Cao Duy\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"### Project: Spend n Split","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SnS can get your contact expense management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dncduy0303\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    * Some parts of the history feature I added was adopted by several other class mates (to be added soon)","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"* **New Feature**: Added new command `duplicateTransaction`.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"* **What it does**: Allows the user to create a new transaction based on an existing transaction with optional changes.","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"* **Justification**: This feature allows the user to create a new transaction based on an existing transaction, which is useful for recurring transactions or transactions with similar details.","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"* **New Feature**: Added new command `deleteTransaction`.","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"* **What it does**: Allows the user to delete an existing transaction in the transaction list.","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"* **Justification**: This feature allows the user to delete the transactions they have made, in case they made a mistake or would like to remove the transaction.","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"ncduy0303":38}},{"path":"docs/team/wui-hong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"title: Wui Hong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"### Project: Spend n Split","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"Spend n Split (SnS) is a **desktop app for managing expense from contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"* **New Feature**: Added the ability to add a transaction","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"  * This allows the user to add a transaction in the application.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"  * Pull requests: Add addTransaction command PR#82","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"* **New Feature**: Added the telegramHandle attribute for the Person class.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"  * This allows the user to provide a telegram handle for each person in the application.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"  * Pull requests: Add telegramHandle to Person class PR#156","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"* **Refactoring**: Change all occurrences of address book to spendNSplit book.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"  * This provided the foundation for future extensions, and helped to improve code quality.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"  * Pull requests: Refactoring from addressBook to spendNSplitBook PR#223","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwui-hong\u0026)","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    * Helped add labels to some issues and pull requests.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    * Reviewed and approved PRs with non-trivial comments.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        * Contributed to the adding of labels","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        * Added glossary","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"        * Refactoring and cleaning up the User Guide","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        * Pull requests: PR#326, PR#325","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        * Added glossary: PR#331","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"wui-hong":37}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"Create a `RemarkCommandParser` class in the `seedu.spendnsplit.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"wui-hong"},"content":"Create a new `Remark` in `seedu.spendnsplit.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-11-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"wui-hong"},"content":"Simply add the following to [`seedu.spendnsplit.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-11-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":393,"wui-hong":6}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"The `address` field in `Person` is actually an instance of the `seedu.spendnsplit.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":111,"wui-hong":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.spendnsplit.logic.Logic`.","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"A quick look at the `seedu.spendnsplit.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"            storage.saveSpendNSplitBook(model.getAddressBook());","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"wui-hong"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveSpendNSplitBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"wui-hong"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveSpendNSplitBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2023-11-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":296,"wui-hong":5}},{"path":"src/main/java/seedu/spendnsplit/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.FileUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":69,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":39,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.Config;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.Version;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ConfigUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.StringUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.LogicManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.util.SampleDataUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.JsonSpendNSplitBookStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.SpendNSplitBookStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.Storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.StorageManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.UserPrefsStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.ui.Ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.ui.UiManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initialising Spend n Split ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"        SpendNSplitBookStorage spendNSplitBookStorage \u003d new JsonSpendNSplitBookStorage(userPrefs","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"                .getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        storage \u003d new StorageManager(spendNSplitBookStorage, userPrefsStorage);","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s spendNSplit book","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"     * and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"     * The data from the sample spendNSplit book will be used instead if {@code storage}\u0027s spendNSplit book","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"     * is not found, or an empty spendNSplit book will be used instead if errors occur when reading","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"     * {@code storage}\u0027s spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        logger.info(\"Using data file : \" + storage.getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"        Optional\u003cReadOnlySpendNSplitBook\u003e spendNSplitBookOptional;","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"        ReadOnlySpendNSplitBook initialData;","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"            spendNSplitBookOptional \u003d storage.readSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"            if (!spendNSplitBookOptional.isPresent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"                logger.info(\"Creating a new data file \" + storage.getSpendNSplitBookFilePath()","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"                        + \" populated with a sample SpendNSplitBook.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"            initialData \u003d spendNSplitBookOptional.orElseGet(SampleDataUtil::getSampleSpendNSplitBook);","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"            logger.warning(\"Data file at \" + storage.getSpendNSplitBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"                    + \" Will be starting with an empty SpendNSplitBook.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"            initialData \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"        logger.info(\"Starting SpendNSplitBook \" + MainApp.VERSION);","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Spend n Split ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":3,"-":140,"wui-hong":44}},{"path":"src/main/java/seedu/spendnsplit/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"     * If userPrefsFilePath is null, set it to default.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    public void setUserPrefsFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        if (userPrefsFilePath \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"            userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":9,"-":64,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    private static final String LOG_FILE \u003d \"spendnsplitbook.log\";","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":104,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":120,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core.index;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":67,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"-":10,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.MainApp;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"     * Throws NullPointerException if {@code items} is null,","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"     * and throws IllegalArgumentException if collection is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"    public static void requireNonEmptyCollection(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        if (items.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"            throw new IllegalArgumentException(\"Collection should not be empty\");","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"wui-hong":1,"jeffrey-jian":11}},{"path":"src/main/java/seedu/spendnsplit/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.Config;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"     * Reads the config file in the given path.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"        Optional\u003cConfig\u003e readVal \u003d JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"        if (readVal.isPresent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"            readVal.get().setUserPrefsFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        return readVal;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"     * Saves the configs to the given path.","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jedkohjk":11,"-":19,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/commons/util/FractionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.math.BigInteger;","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Class representing precise numbers.","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FractionUtil {","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    public static final String ZERO_DIVISION \u003d \"Divisor cannot be zero!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates new fraction from decimal string.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"     * @param s Decimal string input in the form decimal / decimal.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return Fraction created.","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    public static BigFraction parseFraction(String s) throws ParseException {","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        String[] parts \u003d s.replace(\" \", \"\").split(\"/\", -1);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        switch (parts.length) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        case 1:","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"            return parseDecimal(parts[0]);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        case 2:","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"            BigFraction divisor \u003d parseDecimal(parts[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            if (divisor.signum() \u003d\u003d 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"                throw new ParseException(ZERO_DIVISION);","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"            return parseDecimal(parts[0]).divide(divisor);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        default:","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    private static BigFraction parseDecimal(String s) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        ArrayList\u003cString\u003e parts \u003d new ArrayList\u003c\u003e(Arrays.asList(s.replace(\" \", \"\").split(\"\\\\.\", -1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        switch (parts.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        case 1:","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            parts.add(\"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            // no break","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case 2:","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"            parts.set(1, parts.get(1) + \"0\");","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            return BigFraction.of(new BigInteger(parts.get(0) + parts.get(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"                    new BigInteger(\"1\" + \"0\".repeat(parts.get(1).length())));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts fraction to string representation.","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param fraction The fraction to be converted.","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param decimalPlaces The number of decimal places of precision.","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return The string representation of the fraction.","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static String toString(BigFraction fraction, int decimalPlaces) {","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assert decimalPlaces \u003e\u003d 0;","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return fraction.bigDecimalValue(decimalPlaces, RoundingMode.HALF_UP).toPlainString();","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"     * Compare 2 fractions by both magnitude and polarity.","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"     * @param fraction1 The first fraction to be compared.","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"     * @param fraction2 The second fraction to be compared.","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"     * @return Positive if the first is larger, negative if the second is larger, zero if equal.","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    public static int compare(BigFraction fraction1, BigFraction fraction2) {","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        if (fraction1.signum() \u003e 0 \u0026\u0026 fraction2.signum() \u003e 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"            return fraction1.abs().compareTo(fraction2.abs());","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        if (fraction1.signum() \u003c 0 \u0026\u0026 fraction2.signum() \u003c 0) {","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"            return fraction2.abs().compareTo(fraction1.abs());","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        return fraction1.signum() - fraction2.signum();","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns the sum of a list of fractions.","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param list The list of fractions to be summed.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return The sum of the fractions in the list.","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static BigFraction sum(List\u003cBigFraction\u003e list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        BigFraction s \u003d BigFraction.ZERO;","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        for (BigFraction i : list) {","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            s \u003d s.add(i);","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return s;","lastModifiedDate":"2023-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"jedkohjk":48,"-":51,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":141,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"     * Removes leading ^ and trailing $ from regex.","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"    public static String trimRegExp(String regex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        if (regex.length() \u003d\u003d 0) {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"            return regex;","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        if (regex.charAt(0) \u003d\u003d \u0027^\u0027) {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"            regex \u003d regex.substring(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        if (regex.length() \u003d\u003d 0) {","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"            return regex;","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        if (regex.charAt(regex.length() - 1) \u003d\u003d \u0027$\u0027) {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"            boolean isEscaped \u003d false;","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"            for (int i \u003d regex.length() - 2; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"                if (regex.charAt(i) \u003d\u003d \u0027\\\\\u0027) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"                    isEscaped \u003d !isEscaped;","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"                } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"                    break;","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"            if (!isEscaped) {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"                regex \u003d regex.substring(0, regex.length() - 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        return regex;","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":29,"-":66,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"-":52,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.CommandResult;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"     * Returns the SpendNSplitBook.","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"     * @see seedu.spendnsplit.model.Model#getSpendNSplitBook()","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    ReadOnlySpendNSplitBook getSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"    /** Returns an unmodifiable view of the full list of transactions */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    ObservableList\u003cTransaction\u003e getFullTransactionList();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    /** Returns an unmodifiable view of the filtered list of transactions */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"     * Returns the user prefs\u0027 spendnsplit book file path.","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    Path getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jedkohjk":7,"-":28,"wui-hong":11}},{"path":"src/main/java/seedu/spendnsplit/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.Command;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.CommandResult;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.SpendNSplitParser;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.Storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    private final SpendNSplitParser spendNSplitParser;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        spendNSplitParser \u003d new SpendNSplitParser();","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        Command command \u003d spendNSplitParser.parseCommand(commandText, model.getCommandMap());","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"            storage.saveSpendNSplitBook(model.getSpendNSplitBook());","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    public ReadOnlySpendNSplitBook getSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"        return model.getSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    public ObservableList\u003cTransaction\u003e getFullTransactionList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        return model.getFullTransactionList();","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        return model.getFilteredTransactionList();","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"    public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"        return model.getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jedkohjk":5,"-":64,"wui-hong":20}},{"path":"src/main/java/seedu/spendnsplit/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.Prefix;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"        \"The transaction index provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_TRANSACTIONS_LISTED_OVERVIEW \u003d \"%1$d transaction(s) listed!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_SHORTHAND_IS_COMMAND \u003d \"Cannot set shorthand %s as it is an existing command\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_ALIAS \u003d \"Command alias %s is used for %s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        builder.append(person.getName());","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        if (person.getPhone() !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            builder.append(\"; Phone: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"                    .append(person.getPhone());","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        if (person.getTelegramHandle() !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"            builder.append(\"; Telegram Handle: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"                    .append(person.getTelegramHandle());","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        if (person.getEmail() !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"            builder.append(\"; Email: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"                    .append(person.getEmail());","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        if (person.getAddress() !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"            builder.append(\"; Address: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"                    .append(person.getAddress());","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        if (person.getTags().size() \u003e 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"     * Formats the {@code transaction} for display to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    public static String format(Transaction transaction) {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"        builder.append(transaction.getDescription())","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"            .append(\"; Timestamp: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"            .append(transaction.getTimestamp())","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"            .append(\"; Amount: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"            .append(transaction.getAmount())","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"            .append(\"; Paid by: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"            .append(transaction.getPayeeName())","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"            .append(\"; Portions: \");","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"        transaction.getPortions().forEach(builder::append);","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":24,"ncduy0303":18,"-":39,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":" * Adds a person to the spendnsplit book.","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    public static final String COMMAND_WORD \u003d \"addPerson\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM HANDLE] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"            + PREFIX_TELEGRAM_HANDLE + \"@asdad123 \"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the app\";","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_RESERVED_PERSON \u003d \"\u0027Self\u0027 and \u0027Others\u0027 are reserved names\";","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand otherAddPersonCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        return toAdd.equals(otherAddPersonCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":14,"ncduy0303":1,"-":60,"wui-hong":13}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/AddTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":" * Adds a transaction to the spendnsplit book.","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"public class AddTransactionCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    public static final String COMMAND_WORD \u003d \"addTransaction\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a transaction.\\n\"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"            + PREFIX_COST + \"COST \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"            + \"[\"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_TIMESTAMP + \"TIME\"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"            + \"] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"            + \"[\"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_WEIGHT + \"WEIGHT\"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"            + \"]...\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_DESCRIPTION + \"bread \"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"            + PREFIX_COST + \"25.00 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_TIMESTAMP + \"10/10/2020 12:00 \"","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_NAME + \"Self \"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_WEIGHT + \"1.5 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_WEIGHT + \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New transaction added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"This transaction already exists in the app\";","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_TRANSACTION_NOT_RELEVANT \u003d \"This transaction does not affect your balances\";","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_UNKNOWN_PARTY \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"            \"This transaction involves unknown parties; please set them to \u0027Others\u0027\";","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"    private final Transaction toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"     * Creates an AddCommand to add the specified {@code Transaction}.","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"    public AddTransactionCommand(Transaction transaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"        toAdd \u003d transaction;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        if (!toAdd.isRelevant()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_TRANSACTION_NOT_RELEVANT);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        if (!toAdd.isKnown(model.getAllNames())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_PARTY);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        if (model.hasTransaction(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        model.addTransaction(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"        if (!(other instanceof AddTransactionCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        AddTransactionCommand otherAddTransactionCommand \u003d (AddTransactionCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"        return toAdd.equals(otherAddTransactionCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":28,"ncduy0303":1,"wui-hong":76}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":" * Clears the spendnsplit book.","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"App data has been cleared!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"        model.setSpendNSplitBook(new SpendNSplit());","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":2,"-":17,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":80,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":" * Deletes a person identified using it\u0027s displayed index from the app.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    public static final String COMMAND_WORD \u003d \"deletePerson\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof DeletePersonCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        DeletePersonCommand otherDeletePersonCommand \u003d (DeletePersonCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        return targetIndex.equals(otherDeletePersonCommand.targetIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":7,"-":55,"wui-hong":7}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/DeleteTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":" * Deletes a transaction identified using it\u0027s displayed index from the app.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"public class DeleteTransactionCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public static final String COMMAND_WORD \u003d \"deleteTransaction\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"        + \": Deletes the transaction identified by the index number used in the displayed transaction list.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_DELETE_TRANSACTION_SUCCESS \u003d \"Deleted Transaction: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    public DeleteTransactionCommand(Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        List\u003cTransaction\u003e lastShownList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        Transaction transactionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"        model.deleteTransaction(transactionToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"            String.format(MESSAGE_DELETE_TRANSACTION_SUCCESS, Messages.format(transactionToDelete)));","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof DeleteTransactionCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand otherDeleteTransactionCommand \u003d (DeleteTransactionCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        return targetIndex.equals(otherDeleteTransactionCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jedkohjk":1,"ncduy0303":62,"wui-hong":7}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/DuplicateTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":" * Duplicates a transaction identified using its displayed index from the app.","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":" * Optional edits can be made to the duplicated transaction.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":" * Timestamp will be set to the current time if not specified.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"public class DuplicateTransactionCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    public static final String COMMAND_WORD \u003d \"duplicateTransaction\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"        + \": Duplicates the transaction identified by the index number with optional edits. \"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"        + \"Timestamp will be set to the current time if not specified.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        + \"[\" + PREFIX_COST + \"COST] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DETAILS] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        + \"[\" + PREFIX_NAME + \"PAYEE NAME] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        + \"[\" + PREFIX_TIMESTAMP + \"TIMESTAMP]\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"        + PREFIX_COST + \"10.00 \"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        + PREFIX_DESCRIPTION + \"Bought a book \"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        + PREFIX_TIMESTAMP + \"2020-01-01 12:00\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION_SUCCESS \u003d \"New duplicated transaction added: %1$s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            \"The updated transaction with the same timestamp already exists in the app\";","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_UNKNOWN_PAYEE \u003d \"The payee must either be you or someone in the person list\";","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_TRANSACTION_NOT_RELEVANT \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"            \"The duplicated transaction does not affect your balances\";","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    private final TransactionDescriptor transactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"     * @param targetIndex           of the transaction in the filtered transaction list to duplicate","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"     * @param transactionDescriptor details to edit the duplicated transaction with","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    public DuplicateTransactionCommand(Index targetIndex, TransactionDescriptor transactionDescriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        this.transactionDescriptor \u003d transactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        List\u003cTransaction\u003e lastShownTransactionList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTransactionList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"        Transaction transactionToDuplicate \u003d lastShownTransactionList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        Transaction duplicateTransaction \u003d EditTransactionCommand.createEditedTransaction(","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"            transactionToDuplicate, transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"        if (!duplicateTransaction.isRelevant()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"            throw new CommandException(MESSAGE_TRANSACTION_NOT_RELEVANT);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        if (!(duplicateTransaction.getPayeeName().equals(Name.SELF)","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"                || model.getAllNames().contains(duplicateTransaction.getPayeeName()))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_PAYEE);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        if (model.hasTransaction(duplicateTransaction)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        model.addTransaction(duplicateTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        model.updateFilteredTransactionList(Model.PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"            String.format(MESSAGE_DUPLICATE_TRANSACTION_SUCCESS, Messages.format(duplicateTransaction)));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof DuplicateTransactionCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand otherDuplicateTransactionCommand \u003d (DuplicateTransactionCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"        return targetIndex.equals(otherDuplicateTransactionCommand.targetIndex)","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 transactionDescriptor.equals(otherDuplicateTransactionCommand.transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"            .add(\"transactionDescriptor\", transactionDescriptor)","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":13,"ncduy0303":93,"wui-hong":12}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":" * Edits the details of an existing person in the app.","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"    public static final String COMMAND_WORD \u003d \"editPerson\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"            + \"[\" + PREFIX_TELEGRAM_HANDLE + \"TELEGRAM_HANDLE] \"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    private final PersonDescriptor personDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"     * @param personDescriptor details to edit the person with","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"    public EditPersonCommand(Index index, PersonDescriptor personDescriptor) {","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(personDescriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        this.personDescriptor \u003d new PersonDescriptor(personDescriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        Person editedPerson;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"            editedPerson \u003d createEditedPerson(personToEdit, personDescriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"    private static Person createEditedPerson(Person personToEdit, PersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"                .orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"        return new Person(updatedName, updatedPhone, updatedTelegramHandle, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand otherEditPersonCommand \u003d (EditPersonCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"        return index.equals(otherEditPersonCommand.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 personDescriptor.equals(otherEditPersonCommand.personDescriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"                .add(\"editPersonDescriptor\", personDescriptor)","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jedkohjk":11,"ncduy0303":10,"-":91,"wui-hong":24}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/EditTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":" * Edits the details of an existing transaction in the transaction list.","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":" * i.e. cost, description, payeeName","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":" * Note: Editing of expenses is done via the {@code UpdatePortionCommand}.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"public class EditTransactionCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String COMMAND_WORD \u003d \"editTransaction\";","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the transaction identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"            + \"by the index number used in the displayed transaction list. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"            + \"[\" + PREFIX_COST + \"COST] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DETAILS] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"            + \"[\" + PREFIX_TIMESTAMP + \"TIME] \"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"            + \"[\" + PREFIX_NAME + \"PAYEE NAME] \"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"            + \"[\" + PREFIX_TIMESTAMP + \"TIMESTAMP]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"            + PREFIX_COST + \"10.00 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"            + PREFIX_DESCRIPTION + \"Bought a book \"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_TIMESTAMP + \"10/10/2020 12:00\";","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_EDIT_TRANSACTION_SUCCESS \u003d \"Edited Transaction: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_TRANSACTION_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"            \"The edited transaction already exists in the app\";","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_UNKNOWN_PAYEE \u003d \"The payee must either be you or someone in the person list\";","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_TRANSACTION_NOT_RELEVANT \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"            \"The edited transaction does not affect your balances. Please use the delete command instead.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"    private final TransactionDescriptor transactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"     * @param index of the transaction in the filtered transaction list to edit","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"     * @param transactionDescriptor details to edit the transaction with","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    public EditTransactionCommand(Index index, TransactionDescriptor transactionDescriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"        this.transactionDescriptor \u003d new TransactionDescriptor(transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"        List\u003cTransaction\u003e lastShownTransactionList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownTransactionList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction transactionToEdit \u003d lastShownTransactionList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        Transaction editedTransaction \u003d createEditedTransaction(transactionToEdit, transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"        if (!editedTransaction.isRelevant()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"            throw new CommandException(MESSAGE_TRANSACTION_NOT_RELEVANT);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        if (!(editedTransaction.getPayeeName().equals(Name.SELF)","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"                || model.getAllNames().contains(editedTransaction.getPayeeName()))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_PAYEE);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"        if (model.hasTransaction(editedTransaction)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"        model.setTransaction(transactionToEdit, editedTransaction);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"        model.updateFilteredTransactionList(Model.PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"                String.format(MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction)));","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"     * Creates and returns a {@code Transaction} with the details of {@code transactionToEdit}","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"     * edited with {@code transactionDescriptor}.","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"     * Portions are not edited with this {@code EditTransactionCommand}","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"    public static Transaction createEditedTransaction(Transaction transactionToEdit, TransactionDescriptor","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"            transactionDescriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"        assert transactionToEdit !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"        Amount updatedAmount \u003d transactionDescriptor.getAmount().orElse(transactionToEdit.getAmount());","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"        Description updatedDescription \u003d transactionDescriptor.getDescription().orElse(transactionToEdit","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"                .getDescription());","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"        Name updatedPayeeName \u003d transactionDescriptor.getPayeeName().orElse(transactionToEdit.getPayeeName());","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"        Timestamp updatedTimestamp \u003d transactionDescriptor.getTimestamp().orElse(transactionToEdit","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"                .getTimestamp());","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e existingPortions \u003d transactionToEdit.getPortions();","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"        return new Transaction(updatedAmount, updatedDescription, updatedPayeeName, existingPortions, updatedTimestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"        if (!(other instanceof EditTransactionCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand otherEditTransactionCommand \u003d (EditTransactionCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"        return index.equals(otherEditTransactionCommand.index)","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 transactionDescriptor.equals(otherEditTransactionCommand.transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"ncduy0303"},"content":"                .add(\"transactionDescriptor\", transactionDescriptor)","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":14,"ncduy0303":18,"wui-hong":16,"jeffrey-jian":103}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting app as requested ...\";","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jedkohjk":1,"-":16,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":" * Finds and lists all persons in app whose name contains any of the argument keywords.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":" * If no keywords are specified, all persons will be listed.","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"public class ListPersonCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    public static final String COMMAND_WORD \u003d \"listPerson\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"            + \"If no keywords are specified, all persons will be listed.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"            + \"Parameters: [KEYWORDS]...\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    public ListPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        // handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof ListPersonCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand otherFindPersonCommand \u003d (ListPersonCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        return predicate.equals(otherFindPersonCommand.predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":3,"ncduy0303":9,"-":43,"wui-hong":5}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/ListTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.TransactionContainsKeywordsAndPersonNamesPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":" * List all transactions that involve some specified persons, either as a payer or a payee.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":" * If no persons are specified, list all transactions.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"public class ListTransactionCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"    public static final String COMMAND_WORD \u003d \"listTransaction\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all transactions with descriptions that \"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"            + \"contain any of the keywords or that involve any of the specified persons, either as a payer or a \"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"            + \" payee.\\n If no persons are specified, filters only by keywords; if no keywords are specified, \"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"            + \"filters only by names. If neither are specified, lists all transactions.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"            + \"[KEYWORDS]... \"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"            + PREFIX_NAME + \"John Doe \";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"    private final TransactionContainsKeywordsAndPersonNamesPredicate predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    public ListTransactionCommand(TransactionContainsKeywordsAndPersonNamesPredicate predicate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"        model.updateFilteredTransactionList(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"            String.format(Messages.MESSAGE_TRANSACTIONS_LISTED_OVERVIEW, model.getFilteredTransactionList().size()));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof ListTransactionCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand otherFindCommand \u003d (ListTransactionCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"            .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":7,"ncduy0303":51,"wui-hong":6}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/SetShorthandCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ORIGINAL_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_SHORTHAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":" * Sets shorthand for a command.","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"public class SetShorthandCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    public static final String COMMAND_WORD \u003d \"setShorthand\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_SET_SHORTHAND_SUCCESS \u003d \"Shorthand %s set for command %s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_UPDATE_SHORTHAND_SUCCESS \u003d \"Shorthand for command %s updated from %s to %s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets an alias for command words. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"        + PREFIX_ORIGINAL_COMMAND + \"COMMAND \"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"        + PREFIX_SHORTHAND + \"SHORTHAND \"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        + PREFIX_ORIGINAL_COMMAND + \"addTransaction \"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"        + PREFIX_SHORTHAND + \"addT\";","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"    private final String original;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    private final String alias;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a SetShorthandCommand.","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    public SetShorthandCommand(String original, String alias) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        this.original \u003d original;","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        String prevAlias \u003d model.setCommandAlias(original, alias);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        if (prevAlias \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"            return new CommandResult(String.format(MESSAGE_SET_SHORTHAND_SUCCESS, alias, original));","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_SHORTHAND_SUCCESS, original, prevAlias, alias));","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof SetShorthandCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        SetShorthandCommand otherCommand \u003d (SetShorthandCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        return original.equals(otherCommand.original) \u0026\u0026 alias.equals(otherCommand.alias);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"            .add(\"original\", original)","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"            .add(\"shorthand\", alias)","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"            .toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":63,"wui-hong":6}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/SettlePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":" * Settles any outstanding balance with a person.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"public class SettlePersonCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String COMMAND_WORD \u003d \"settlePerson\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Settle any outstanding balance with another person.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"            + \"If a timestamp is provided, the balance at the instant before the timestamp is used. \"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            + \"Else, the balance at the instant before the current system time is used.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"            + \"[\" + PREFIX_TIMESTAMP + \"TIME]\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"            + PREFIX_TIMESTAMP + \"10/10/2020 12:00\";","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String MESSAGE_SETTLE_PERSON_SUCCESS \u003d \"Balance settled: %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"This transaction already exists\";","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_NO_OUTSTANDING_BALANCE \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"            \"There is no outstanding balance with %1$s before %2$s.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String SETTLE_TRANSACTION_DESCRIPTION \u003d \"Settle balance with %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    private final Timestamp time;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a settle person command.","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    public SettlePersonCommand(Index targetIndex, Timestamp time) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        Person personToSettle \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"        // total money the person owes the user","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        BigFraction balance \u003d model.getBalance(personToSettle.getName(), time);","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"        if (balance.equals(BigFraction.ZERO)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(String.format(MESSAGE_NO_OUTSTANDING_BALANCE,","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"                    personToSettle.getName(), time));","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"        Description description \u003d new Description(String.format(","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"                SETTLE_TRANSACTION_DESCRIPTION, personToSettle.getName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        Weight weight \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"            weight \u003d new Weight(BigFraction.ONE.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"            assert false;","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"        Name name;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions;","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"        if (balance.signum() \u003e 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"            // if the balance is positive, the person owes the user money","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"nathanielcalimag"},"content":"            // we create a transaction where the person pays the user back","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"            name \u003d personToSettle.getName();","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"            portions \u003d Set.of(new Portion(Name.SELF, weight));","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"            // if the balance is negative, the user owes the person money","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"            // we create a transaction where the user pays the person back","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"            name \u003d Name.SELF;","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"            portions \u003d Set.of(new Portion(personToSettle.getName(), weight));","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"        Amount total \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"            total \u003d new Amount(balance.abs().toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"            assert false;","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        Transaction settleTransaction \u003d new Transaction(","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"                total, description, name, portions, time);","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"jedkohjk"},"content":"        if (model.hasTransaction(settleTransaction)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"nathanielcalimag"},"content":"        // create transaction to cancel out outstanding balance","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"        model.addTransaction(settleTransaction);","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"nathanielcalimag"},"content":"        return new CommandResult(String.format(MESSAGE_SETTLE_PERSON_SUCCESS, personToSettle.getName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"nathanielcalimag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"nathanielcalimag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"nathanielcalimag"},"content":"        if (!(other instanceof SettlePersonCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"nathanielcalimag"},"content":"        SettlePersonCommand otherSettlePersonCommand \u003d (SettlePersonCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"        return targetIndex.equals(otherSettlePersonCommand.targetIndex)","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 time.equals(otherSettlePersonCommand.time);","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"nathanielcalimag"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"nathanielcalimag"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"jedkohjk"},"content":"                .add(\"time\", time)","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"nathanielcalimag"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jedkohjk":45,"nathanielcalimag":79,"ncduy0303":3,"wui-hong":15}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/SortPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":" * Sorts persons by balance.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"public class SortPersonCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"    public static final String COMMAND_WORD \u003d \"sortPerson\";","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sort Person List by balance. \"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"            + \"Parameters: SIGN (+ for post positive balance first; - for most negative balance first)\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"            + \"Example: \" + COMMAND_WORD + \" +\";","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_SORT_PERSON_SUCCESS \u003d \"Person list sorted in %s order of balance\";","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    private final Boolean isDesc;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"    public SortPersonCommand(boolean isDesc) {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"        this.isDesc \u003d isDesc;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        if (isDesc) {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"            model.sortPersonDescending();","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"            return new CommandResult(String.format(MESSAGE_SORT_PERSON_SUCCESS, \"descending\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"            model.sortPersonAscending();","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"            return new CommandResult(String.format(MESSAGE_SORT_PERSON_SUCCESS, \"ascending\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof SortPersonCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        SortPersonCommand otherSortPersonCommand \u003d (SortPersonCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        return isDesc.equals(otherSortPersonCommand.isDesc);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"                .add(\"isDesc\", isDesc)","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":52,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/UpdatePortionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":" * Edits the portion details of an existing transaction in the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"public class UpdatePortionCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String COMMAND_WORD \u003d \"updatePortion\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"            COMMAND_WORD + \": Edits the portion details of the transaction identified \"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"            + \"by the index number used in the displayed transaction list. \"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Existing values will be overwritten by the input values. \"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Setting the weight of an existing portion will delete it.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"            + PREFIX_WEIGHT + \"WEIGHT\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"            + PREFIX_WEIGHT + \"1 / 2\";","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            \"The updated transaction already exists in the app\";","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_UPDATE_PORTION_SUCCESS \u003d \"Updated Portion: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_DELETE_ONLY_PORTION_FAILURE \u003d \"Cannot delete the only portion in a transaction.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_UNKNOWN_PARTY \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"            \"The portion involves unknown parties; please set them to \u0027Others\u0027\";","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_IRRELEVANT_UPDATED_TRANSACTION \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"            \"The updated transaction does not affect your balances. Please use the delete command instead.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_INVALID_PROPORTION \u003d \"The weight should be a proportion of the total sum; \"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"            + \"it should be greater than or equal to 0 and less than 1.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_ONLY_PORTION \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"            \"There is only one portion; its weight can only be 1 and cannot be updated.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    private final Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    private final PortionDescriptor portionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"     * Edits the portion details of an existing transaction in the transaction list.","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    public UpdatePortionCommand(Index index, PortionDescriptor portionDescriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"        requireAllNonNull(portionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"        this.portionDescriptor \u003d new PortionDescriptor(portionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"        List\u003cTransaction\u003e lastShownTransactionList \u003d model.getFilteredTransactionList();","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownTransactionList.size()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction transactionToEdit \u003d lastShownTransactionList.get(index.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction transactionWithUpdatedPortions \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"                createTransactionWithUpdatedPortions(transactionToEdit, portionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        if (!transactionWithUpdatedPortions.isKnown(model.getAllNames())) {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_PARTY);","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"        if (!transactionWithUpdatedPortions.isRelevant()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"            throw new CommandException(MESSAGE_IRRELEVANT_UPDATED_TRANSACTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"        if (model.hasTransaction(transactionWithUpdatedPortions)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"        model.setTransaction(transactionToEdit, transactionWithUpdatedPortions);","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"        model.updateFilteredTransactionList(Model.PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"                String.format(MESSAGE_UPDATE_PORTION_SUCCESS, Messages.format(transactionWithUpdatedPortions)));","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"     * Creates and returns a {@code Transaction} with the details of {@code transactionToEdit}","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"     * edited with {@code portionDescriptor}.","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"    private static Transaction createTransactionWithUpdatedPortions(Transaction transactionToEdit,","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"                                                                    PortionDescriptor portionDescriptor)","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"            throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"        assert transactionToEdit !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"        Amount existingAmount \u003d transactionToEdit.getAmount();","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"        Description existingDescription \u003d transactionToEdit.getDescription();","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"        Name existingPayeeName \u003d transactionToEdit.getPayeeName();","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"        Timestamp existingTimestamp \u003d transactionToEdit.getTimestamp();","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e newPortions \u003d transactionToEdit.getPortionsCopy();","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"        Name personName \u003d portionDescriptor.getPersonName();","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"        Weight updatedWeight \u003d portionDescriptor.getWeight();","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"        if (updatedWeight.value.compareTo(BigFraction.ONE) \u003e\u003d 0) {","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_INVALID_PROPORTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"        // remove existing portion, if exists","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"        newPortions.removeIf(portion -\u003e portion.getPersonName().equals(personName));","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"        if (updatedWeight.value.equals(BigFraction.ZERO)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"            // delete portion","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"            if (newPortions.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"                throw new CommandException(MESSAGE_DELETE_ONLY_PORTION_FAILURE);","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"            if (newPortions.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"jedkohjk"},"content":"                throw new CommandException(MESSAGE_ONLY_PORTION);","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"jedkohjk"},"content":"            BigFraction originalWeights \u003d Transaction.sumWeights(newPortions);","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"jedkohjk"},"content":"            updatedWeight \u003d new Weight(originalWeights.multiply(updatedWeight.value)","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"jedkohjk"},"content":"                    .divide(BigFraction.ONE.subtract(updatedWeight.value)));","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"            newPortions.add(new Portion(personName, updatedWeight));","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"        return new Transaction(existingAmount, existingDescription, existingPayeeName, newPortions, existingTimestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"        if (!(other instanceof UpdatePortionCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand otherUpdatePortionCommand \u003d (UpdatePortionCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"        return index.equals(otherUpdatePortionCommand.index)","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 portionDescriptor.equals(otherUpdatePortionCommand.portionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"ncduy0303"},"content":"                .add(\"portionDescriptor\", portionDescriptor)","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"jedkohjk":30,"ncduy0303":14,"wui-hong":16,"jeffrey-jian":117}},{"path":"src/main/java/seedu/spendnsplit/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/logic/descriptors/PersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"package seedu.spendnsplit.logic.descriptors;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.commons.util.CollectionUtil;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":" * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":" * corresponding field value of the person.","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"public class PersonDescriptor {","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    private Name name;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    private Phone phone;","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"    private Email email;","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    private Address address;","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptor() {}","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"     * Copy constructor.","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptor(PersonDescriptor toCopy) {","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        setName(toCopy.name);","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        return CollectionUtil.isAnyNonNull(name, phone, telegramHandle, email, address, tags);","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    public void setName(Name name) {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"    public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"    public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"        this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"        return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof PersonDescriptor)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor otherPersonDescriptor \u003d (PersonDescriptor) other;","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"ncduy0303"},"content":"        return Objects.equals(name, otherPersonDescriptor.name)","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(phone, otherPersonDescriptor.phone)","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(telegramHandle, otherPersonDescriptor.telegramHandle)","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(email, otherPersonDescriptor.email)","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(address, otherPersonDescriptor.address)","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(tags, otherPersonDescriptor.tags);","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":129,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":130,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"            .add(\"name\", name)","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"            .add(\"phone\", phone)","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"ncduy0303"},"content":"            .add(\"telegramHandle\", telegramHandle)","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"ncduy0303"},"content":"            .add(\"email\", email)","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"ncduy0303"},"content":"            .add(\"address\", address)","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"ncduy0303"},"content":"            .add(\"tags\", tags)","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ncduy0303":140}},{"path":"src/main/java/seedu/spendnsplit/logic/descriptors/PortionDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"package seedu.spendnsplit.logic.descriptors;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":" * Stores the details to update the portion with.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":" * All fields are mandatory.","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"public class PortionDescriptor {","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    private Name personName;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"    private Weight weight;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptor() {}","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"     * Copy constructor.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"     * A defensive copy of {@code PortionDescriptor} is used internally.","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptor(PortionDescriptor toCopy) {","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"        setPersonName(toCopy.personName);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"        setWeight(toCopy.weight);","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    public void setPersonName(Name personName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    public Name getPersonName() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        return personName;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    public void setWeight(Weight weight) {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"    public Weight getWeight() {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        return weight;","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof PortionDescriptor)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor otherPortionDescriptor \u003d (PortionDescriptor) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        return Objects.equals(personName, otherPortionDescriptor.personName)","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(weight, otherPortionDescriptor.weight);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"            .add(\"personName\", personName)","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"            .add(\"weight\", weight)","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"ncduy0303":67}},{"path":"src/main/java/seedu/spendnsplit/logic/descriptors/TransactionDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"package seedu.spendnsplit.logic.descriptors;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.commons.util.CollectionUtil;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":" * Stores the details to edit the transaction with. Each non-empty field value will replace the","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":" * corresponding field value of the transaction.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":" * Note that \"cost\" is represented by {@code Amount} named {@code amount} in the model.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":" * TransactionDescriptor do not store portions.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"public class TransactionDescriptor {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"    private Amount amount;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    private Description description;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    private Name payeeName;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    private Timestamp timestamp;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptor() {}","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"     * Copy constructor.","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"     * A defensive copy of {@code portions} is used internally.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptor(TransactionDescriptor toCopy) {","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        setAmount(toCopy.amount);","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        setDescription(toCopy.description);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        setPayeeName(toCopy.payeeName);","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        setTimestamp(toCopy.timestamp);","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        return CollectionUtil.isAnyNonNull(amount, description, payeeName, timestamp);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    public void setAmount(Amount amount) {","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cAmount\u003e getAmount() {","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(amount);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(description);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"    public void setPayeeName(Name payeeName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        this.payeeName \u003d payeeName;","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cName\u003e getPayeeName() {","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(payeeName);","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    public void setTimestamp(Timestamp timestamp) {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"    public Optional\u003cTimestamp\u003e getTimestamp() {","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"        return Optional.ofNullable(timestamp);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof TransactionDescriptor)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor otherEditTransactionDescriptor \u003d (TransactionDescriptor) other;","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        return Objects.equals(amount, otherEditTransactionDescriptor.amount)","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(description, otherEditTransactionDescriptor.description)","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(payeeName, otherEditTransactionDescriptor.payeeName)","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 Objects.equals(timestamp, otherEditTransactionDescriptor.timestamp);","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"     * Note that \"cost\" is represented by {@code Amount} named {@code amount} in the model.","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"            .add(\"timestamp\", timestamp)","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"            .add(\"cost\", amount)","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"            .add(\"description\", description)","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"            .add(\"payeeName\", payeeName)","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"ncduy0303":107}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        TelegramHandle telegramHandle \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        Email email \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        Address address \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        if (!argMultimap.getPreamble().isEmpty() || !argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"            telegramHandle \u003d ParserUtil","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"                    .parseTelegramHandle(argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        Person person;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"            person \u003d new Person(name, phone, telegramHandle, email, address, tagList);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jedkohjk":33,"-":29,"wui-hong":23}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/AddTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":" * Parses input arguments and creates a new AddTransactionCommand object.","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"public class AddTransactionCommandParser implements Parser\u003cAddTransactionCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALIDATION_REGEX \u003d String.format(\"^%s%s %s%s %s%s( %s%s)?( %s%s %s%s)+$\",","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            PREFIX_DESCRIPTION, \"[^\u003d]*\", PREFIX_NAME, \"[^\u003d]*\", PREFIX_COST, \"[^\u003d]*\",","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"            PREFIX_TIMESTAMP, \"[^\u003d]*\", PREFIX_NAME, \"[^\u003d]*\", PREFIX_WEIGHT, \"[^\u003d]*\");","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_DUPLICATE_PORTION \u003d \"Name %s is duplicated in portion string\";","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTransactionCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"     * and returns an AddTransactionCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    public AddTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"                args, PREFIX_NAME, PREFIX_COST, PREFIX_DESCRIPTION, PREFIX_WEIGHT, PREFIX_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_COST, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"                    AddTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        if (!args.trim().matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"                    AddTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        List\u003cString\u003e names \u003d argMultimap.getAllValues(PREFIX_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        List\u003cString\u003e weights \u003d argMultimap.getAllValues(PREFIX_WEIGHT);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        assert names.size() \u003d\u003d weights.size() + 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        Name payee \u003d ParserUtil.parseName(names.get(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        if (payee.equals(Name.SELF)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"            payee \u003d Name.SELF;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        Amount amount \u003d ParserUtil.parseAmount(argMultimap.getValue(PREFIX_COST).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        Map\u003cName, Weight\u003e portionMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        for (int i \u003d 0; i \u003c weights.size(); i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"            Name name \u003d ParserUtil.parseName(names.get(i + 1));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"            if (name.equals(Name.SELF)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"                name \u003d Name.SELF;","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            if (name.equals(Name.OTHERS)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"                name \u003d Name.OTHERS;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"            Weight weight \u003d ParserUtil.parseWeight(weights.get(i));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"            if (portionMap.containsKey(name)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"                if (!name.equals(Name.OTHERS)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"                    throw new ParseException(String.format(MESSAGE_DUPLICATE_PORTION, name.fullName));","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"                }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"                Weight previousWeight \u003d portionMap.get(name);","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"                weight \u003d new Weight(previousWeight.value.add(weight.value));","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"            portionMap.put(name, weight);","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d portionMap.keySet().stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"                .map(x -\u003e new Portion(x, portionMap.get(x))).collect(Collectors.toSet());","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        Timestamp timestamp;","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        if (argMultimap.getValue(PREFIX_TIMESTAMP).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"            timestamp \u003d ParserUtil.parseTimestamp(argMultimap.getValue(PREFIX_TIMESTAMP).get());","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"            timestamp \u003d Timestamp.now();","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        Transaction transaction \u003d new Transaction(amount, description, payee, portions, timestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        return new AddTransactionCommand(transaction);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":42,"ncduy0303":8,"wui-hong":55}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":75,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":" *     e.g. {@code some preamble text t\u003d 11.00 t\u003d12.00 k\u003d m\u003d July}  where prefixes are {@code t\u003d k\u003d m\u003d}.\u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k\u003d} in the above example.\u003cbr\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t\u003d}","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"     * E.g if {@code argsString} \u003d \"e\u003dhip\u003d900\", {@code prefix} \u003d \"p\u003d\" and","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"     * occurrences of \"p\u003d\" with whitespace before it. However, if","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"     * {@code argsString} \u003d \"e\u003dhi p\u003d900\", {@code prefix} \u003d \"p\u003d\" and","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":141,"wui-hong":7}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_TELEGRAM_HANDLE \u003d new Prefix(\"tg\u003d\");","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_COST \u003d new Prefix(\"c\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d\u003d\");","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"w\u003d\");","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    public static final Prefix PREFIX_ORIGINAL_COMMAND \u003d new Prefix(\"o\u003d\");","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    public static final Prefix PREFIX_SHORTHAND \u003d new Prefix(\"s\u003d\");","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    public static final Prefix PREFIX_TIMESTAMP \u003d new Prefix(\"ts\u003d\");","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jedkohjk":3,"-":8,"wui-hong":10,"jeffrey-jian":2}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/CommandAliasMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_DUPLICATE_ALIAS;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_SHORTHAND_IS_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DuplicateTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SetShorthandCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SettlePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SortPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.UpdatePortionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":" * Class that maps aliases to commands.","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"public class CommandAliasMap {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z][a-zA-Z]*$\";","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    public static final Set\u003cString\u003e FULL_COMMANDS \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"            add(AddPersonCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"            add(AddTransactionCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"            add(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"            add(DeletePersonCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"            add(DeleteTransactionCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            add(DuplicateTransactionCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            add(EditPersonCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"            add(EditTransactionCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"            add(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            add(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"            add(ListPersonCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"            add(ListTransactionCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"            add(SetShorthandCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"            add(SettlePersonCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"            add(SortPersonCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"            add(UpdatePortionCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        }};","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    private Map\u003cString, String\u003e aliasToCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a CommandAliasMap.","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"    public CommandAliasMap() {","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        this.aliasToCommand \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"     * Copies a CommandAliasMap.","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"    public CommandAliasMap(CommandAliasMap copy) {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        this.aliasToCommand \u003d new HashMap\u003c\u003e(copy.aliasToCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"     * Gets to full input command from the alias.","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"    public String getCommand(String inputCommand) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        if (FULL_COMMANDS.contains(inputCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"            return inputCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        if (aliasToCommand.containsKey(inputCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"            return aliasToCommand.get(inputCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"     * Returns aliasToCommand map.","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"    public Map\u003cString, String\u003e getMap() {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        return aliasToCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"     * Sets the alias of a given command to alias.","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"    public String putAlias(String command, String alias) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"        if (!FULL_COMMANDS.contains(command)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_COMMAND + \" \" + command);","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"        if (FULL_COMMANDS.contains(alias)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"            throw new CommandException(String.format(MESSAGE_SHORTHAND_IS_COMMAND, alias));","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"        if (aliasToCommand.containsKey(alias)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_ALIAS, alias, aliasToCommand.get(alias)));","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"        String previousAlias \u003d null;","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"        for (String key : aliasToCommand.keySet()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"jedkohjk"},"content":"            if (aliasToCommand.get(key).equals(command)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"jedkohjk"},"content":"                previousAlias \u003d key;","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"jedkohjk"},"content":"        if (previousAlias !\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"            aliasToCommand.remove(previousAlias);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"        aliasToCommand.put(alias, command);","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"        return previousAlias;","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof CommandAliasMap)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"        CommandAliasMap otherMap \u003d (CommandAliasMap) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"        return aliasToCommand.equals(otherMap.aliasToCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"jedkohjk"},"content":"        return Objects.hash(aliasToCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":141,"author":{"gitId":"jedkohjk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"jedkohjk"},"content":"                .add(\"aliasToCommand\", aliasToCommand)","lastModifiedDate":"2023-10-22"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"                .toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":146,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":123,"wui-hong":23,"jeffrey-jian":1}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jedkohjk":4,"-":20,"wui-hong":5}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/DeleteTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"public class DeleteTransactionCommandParser implements Parser\u003cDeleteTransactionCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public DeleteTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"            return new DeleteTransactionCommand(index);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTransactionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ncduy0303":24,"wui-hong":5}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/DuplicateTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DuplicateTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":" * Parses input arguments and creates a new DuplicateCommand object.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"public class DuplicateTransactionCommandParser implements Parser\u003cDuplicateTransactionCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"     * Parses the given {@code String} of arguments in the context of the DuplicateCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"     * and returns a DuplicateCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    public DuplicateTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_COST, PREFIX_DESCRIPTION, PREFIX_NAME, PREFIX_TIMESTAMP);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        Index index;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT, DuplicateTransactionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor duplicateTransactionDescriptor \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"            EditTransactionCommandParser.getTransactionDescriptor(argMultimap);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"        // Set timestamp to current time if not specified","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        if (duplicateTransactionDescriptor.getTimestamp().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"            duplicateTransactionDescriptor.setTimestamp(Timestamp.now());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        return new DuplicateTransactionCommand(index, duplicateTransactionDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ncduy0303":42,"wui-hong":10}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor personDescriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"            personDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"            personDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"            personDescriptor.setTelegramHandle(ParserUtil.parseTelegramHandle(argMultimap","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"                    .getValue(PREFIX_TELEGRAM_HANDLE).get()));","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"            personDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"            personDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(personDescriptor::setTags);","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"        if (!personDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"        return new EditPersonCommand(index, personDescriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jedkohjk":8,"ncduy0303":10,"-":56,"wui-hong":19}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/EditTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":" * Parses input arguments and creates a new EditTransactionCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"public class EditTransactionCommandParser implements Parser\u003cEditTransactionCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    * Parses the given {@code String} of arguments in the context of the EditTransactionCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"    * and returns an EditTransactionCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"    * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"    */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    public EditTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COST, PREFIX_DESCRIPTION, PREFIX_NAME, PREFIX_TIMESTAMP);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"        Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, EditTransactionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor transactionDescriptor \u003d getTransactionDescriptor(argMultimap);","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        if (!transactionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"            throw new ParseException(EditTransactionCommand.MESSAGE_TRANSACTION_NOT_EDITED);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        return new EditTransactionCommand(index, transactionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"    public static TransactionDescriptor getTransactionDescriptor(","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_COST, PREFIX_DESCRIPTION, PREFIX_NAME, PREFIX_TIMESTAMP);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor transactionDescriptor \u003d new TransactionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"            transactionDescriptor.setDescription(","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"        if (argMultimap.getValue(PREFIX_COST).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"            transactionDescriptor.setAmount(","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"                    ParserUtil.parseAmount(argMultimap.getValue(PREFIX_COST).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"            transactionDescriptor.setPayeeName(","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"                    ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"        if (argMultimap.getValue(PREFIX_TIMESTAMP).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"            transactionDescriptor.setTimestamp(","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"                    ParserUtil.parseTimestamp(argMultimap.getValue(PREFIX_TIMESTAMP).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        return transactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"ncduy0303":18,"wui-hong":9,"jeffrey-jian":45}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/ListPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"public class ListPersonCommandParser implements Parser\u003cListPersonCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"    public ListPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"            return new ListPersonCommand(new NameContainsKeywordsPredicate(List.of()));","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"        return new ListPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ncduy0303":8,"-":19,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/ListTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.TransactionContainsKeywordsAndPersonNamesPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":" * Parses input arguments and creates a new ListTransactionCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"public class ListTransactionCommandParser implements Parser\u003cListTransactionCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTransactionCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"     * and returns a ListTransactionCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public ListTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cName\u003e nameList \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        List\u003cString\u003e keywords \u003d argMultimap.getPreamble().trim().isEmpty() ? List.of()","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"                : Arrays.asList(argMultimap.getPreamble().trim().split(\"\\\\s+\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        return new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"                keywords, new ArrayList\u003c\u003e(nameList)));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":6,"ncduy0303":21,"wui-hong":6}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.Command;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.StringUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"     * Parses a {@code String telegramHandle} into a {@code TelegramHandle}.","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"     * @throws ParseException if the given {@code telegramHandle} is invalid.","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"    public static TelegramHandle parseTelegramHandle(String telegramHandle) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"        String trimmedTelegramHandle \u003d telegramHandle.trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"     * Parses a {@code String description} into a {@code String}.","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"     * Parses a {@code String description} into a {@code Tag}.","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"     * Parses a {@code String amount} into a {@code Amount}.","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"wui-hong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"     * @throws ParseException if the given {@code amount} is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"wui-hong"},"content":"    public static Amount parseAmount(String amount) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(amount);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"        String trimmedAmount \u003d amount.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"wui-hong"},"content":"        if (!Amount.isValidAmount(trimmedAmount)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"wui-hong"},"content":"            throw new ParseException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"jedkohjk"},"content":"        Amount val \u003d new Amount(trimmedAmount);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"        if (val.amount.signum() \u003c\u003d 0) {","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(Amount.VALUE_CONSTRAINT);","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"jedkohjk"},"content":"        return val;","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"jedkohjk"},"content":"     * Parses a {@code String weight} into a {@code Weight}.","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"jedkohjk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"jedkohjk"},"content":"     * @throws ParseException if the given {@code weight} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"jedkohjk"},"content":"    public static Weight parseWeight(String weight) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"jedkohjk"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"jedkohjk"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"jedkohjk"},"content":"        if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"jedkohjk"},"content":"        Weight val \u003d new Weight(trimmedWeight);","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"        if (val.value.signum() \u003c\u003d 0) {","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(Weight.VALUE_CONSTRAINT);","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"jedkohjk"},"content":"        return val;","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"jeffrey-jian"},"content":"     * Parses a {@code String weight} into a {@code Weight}.","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"jeffrey-jian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"jeffrey-jian"},"content":"     * Zero weight is allowed, and is used when updating portion.","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws ParseException if the given {@code weight} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"jeffrey-jian"},"content":"    public static Weight parseZeroableWeight(String weight) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"jeffrey-jian"},"content":"        String trimmedWeight \u003d weight.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"jeffrey-jian"},"content":"        if (!Weight.isValidWeight(trimmedWeight)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"jeffrey-jian"},"content":"        Weight val \u003d new Weight(trimmedWeight);","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"jeffrey-jian"},"content":"        if (val.value.signum() \u003c 0) {","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"jeffrey-jian"},"content":"        return val;","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"jeffrey-jian"},"content":"     * Parses a {@code String timestamp} into a {@code Timestamp}.","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"jeffrey-jian"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"jeffrey-jian"},"content":"     * @ throws ParseException if the given {@code timestamp} is invalid.","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"jeffrey-jian"},"content":"    public static Timestamp parseTimestamp(String timestamp) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(timestamp);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"jeffrey-jian"},"content":"        String trimmedTimestamp \u003d timestamp.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"jeffrey-jian"},"content":"        if (!Timestamp.isValidTimestamp(trimmedTimestamp)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"jeffrey-jian"},"content":"        return new Timestamp(trimmedTimestamp);","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":222,"author":{"gitId":"jedkohjk"},"content":"     * Parses a {@code String timestamp} into a {@code Timestamp}.","lastModifiedDate":"2023-11-03"},{"lineNumber":223,"author":{"gitId":"jedkohjk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-11-03"},{"lineNumber":224,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":225,"author":{"gitId":"jedkohjk"},"content":"     * @throws ParseException if the given {@code timestamp} is invalid.","lastModifiedDate":"2023-11-03"},{"lineNumber":226,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":227,"author":{"gitId":"jedkohjk"},"content":"    public static Timestamp parseTimestamp(String timestamp, String defaultTime) throws ParseException {","lastModifiedDate":"2023-11-03"},{"lineNumber":228,"author":{"gitId":"jedkohjk"},"content":"        requireNonNull(timestamp, defaultTime);","lastModifiedDate":"2023-11-03"},{"lineNumber":229,"author":{"gitId":"jedkohjk"},"content":"        String trimmedTimestamp \u003d timestamp.trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":230,"author":{"gitId":"jedkohjk"},"content":"        if (!Timestamp.isValidTimestamp(trimmedTimestamp)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":231,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-03"},{"lineNumber":232,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":233,"author":{"gitId":"jedkohjk"},"content":"        return new Timestamp(trimmedTimestamp, defaultTime);","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":247,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":248,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":249,"author":{"gitId":"ncduy0303"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2023-10-14"},{"lineNumber":250,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":251,"author":{"gitId":"ncduy0303"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":252,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-10-14"},{"lineNumber":253,"author":{"gitId":"ncduy0303"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":254,"author":{"gitId":"ncduy0303"},"content":"        for (String name : names) {","lastModifiedDate":"2023-10-14"},{"lineNumber":255,"author":{"gitId":"ncduy0303"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-10-14"},{"lineNumber":256,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":257,"author":{"gitId":"ncduy0303"},"content":"        return nameSet;","lastModifiedDate":"2023-10-14"},{"lineNumber":258,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jedkohjk":39,"ncduy0303":12,"-":114,"wui-hong":54,"jeffrey-jian":40}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":" * E.g. \u0027t\u003d\u0027 in \u0027add James t\u003d friend\u0027.","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":40,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/SetShorthandCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ORIGINAL_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_SHORTHAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SetShorthandCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":" * Parses input arguments and creates a new SetShorthandCommand object","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"public class SetShorthandCommandParser implements Parser\u003cSetShorthandCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_INVALID_SHORTHAND \u003d \"Invalid shorthand! \"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"                + \"Command shorthands must have at least one character \"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"                + \"and must only contain letters from the English alphabet.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"     * Parses the given {@code String} of arguments in the context of the SetShorthandCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"     * and returns a SetShorthandCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"    public SetShorthandCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ORIGINAL_COMMAND, PREFIX_SHORTHAND);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ORIGINAL_COMMAND, PREFIX_SHORTHAND)","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetShorthandCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ORIGINAL_COMMAND, PREFIX_SHORTHAND);","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        String shorthand \u003d argMultimap.getValue(PREFIX_SHORTHAND).get().trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        if (!shorthand.matches(CommandAliasMap.VALIDATION_REGEX)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(MESSAGE_INVALID_SHORTHAND);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        return new SetShorthandCommand(argMultimap.getValue(PREFIX_ORIGINAL_COMMAND).get().trim(), shorthand);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":44,"wui-hong":6}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/SettlePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SettlePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":" * Parses input arguments and creates a new SettlePersonCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"public class SettlePersonCommandParser implements Parser\u003cSettlePersonCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     * Parses the given {@code String} of arguments in the context of the SettlePersonCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     * and returns a SettlePersonCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    public SettlePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TIMESTAMP);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        Index index;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, SettlePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        Timestamp time \u003d Timestamp.now();","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        if (argMultimap.getValue(PREFIX_TIMESTAMP).isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"            time \u003d ParserUtil.parseTimestamp(argMultimap.getValue(PREFIX_TIMESTAMP).get(), \"23:59\");","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        return new SettlePersonCommand(index, time);","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jedkohjk":19,"nathanielcalimag":20,"wui-hong":7}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/SortPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SortPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":" * Parses input arguments and creates a new SortPersonCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"public class SortPersonCommandParser implements Parser\u003cSortPersonCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    public SortPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"        switch (args.trim()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"        case \"+\":","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"            return new SortPersonCommand(true);","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"        case \"-\":","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"            return new SortPersonCommand(false);","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"        default:","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":21,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/SpendNSplitParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.Command;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DuplicateTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SetShorthandCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SettlePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SortPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.UpdatePortionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"public class SpendNSplitParser {","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SpendNSplitParser.class);","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    public Command parseCommand(String userInput, CommandAliasMap commandMap) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        final String commandWord \u003d commandMap.getCommand(matcher.group(\"commandWord\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        case ListPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"            return new ListPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"        case SettlePersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"            return new SettlePersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        case ListTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"            return new ListTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"        case AddTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"            return new AddTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"        case EditTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"            return new EditTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"        case UpdatePortionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"            return new UpdatePortionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"        case DeleteTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"            return new DeleteTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"        case DuplicateTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"            return new DuplicateTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"        case SetShorthandCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"            return new SetShorthandCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"        case SortPersonCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"            return new SortPersonCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":15,"nathanielcalimag":3,"ncduy0303":10,"-":57,"wui-hong":27,"jeffrey-jian":5}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/UpdatePortionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.UpdatePortionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":" * Parses input arguments and creates a new UpdatePortionCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"public class UpdatePortionCommandParser implements Parser\u003cUpdatePortionCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdatePortionCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     * and returns an UpdatePortionCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"    public UpdatePortionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_WEIGHT);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_WEIGHT);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_WEIGHT)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"                    UpdatePortionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        Index index;","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, UpdatePortionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor portionDescriptor \u003d new PortionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        portionDescriptor.setPersonName(","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"                ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        portionDescriptor.setWeight(","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"                ParserUtil.parseZeroableWeight(argMultimap.getValue(CliSyntax.PREFIX_WEIGHT).get()));","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        return new UpdatePortionCommand(index, portionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ncduy0303":5,"wui-hong":7,"jeffrey-jian":51}},{"path":"src/main/java/seedu/spendnsplit/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    Predicate\u003cTransaction\u003e PREDICATE_SHOW_ALL_TRANSACTIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"     * Returns the user prefs\u0027 spendNSplit book file path.","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    Path getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     * Sets the user prefs\u0027 spendNSplit book file path.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    void setSpendNSplitBookFilePath(Path spendNSplitBookFilePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"     * Returns the SpendNSplitBook","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    ReadOnlySpendNSplitBook getSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"     * Replaces spendNSplit book data with the data in {@code spendNSplitBook}.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"    void setSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook);","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"     * Returns true if a transaction with the same identity as {@code transaction} exists in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"    boolean hasTransaction(Transaction transaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"     * The person must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"     * Deletes the given transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"     * The transaction must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"    void deleteTransaction(Transaction target);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"     * {@code person} must not already exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"     * Adds the given transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"     * {@code transaction} must not already exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"    void addTransaction(Transaction transaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"     * {@code target} must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"     * existing person in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"     * Replaces the given transaction {@code target} with {@code editedTransaction}.","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"     * {@code target} must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"     * The transaction identity of {@code editedTransaction} must not be the same","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"     * as another existing transaction in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"    void setTransaction(Transaction target, Transaction editedTransaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns the total balance of all transaction that the person has to pay the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"nathanielcalimag"},"content":"     * @param name the name of the person","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"nathanielcalimag"},"content":"    BigFraction getBalance(Name name);","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"     * Returns the total balance of all transaction before a stated time that the person has to pay the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"     * @param name the name of the person","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"     * @param time the time before which transactions are accounted for","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"    BigFraction getBalance(Name name, Timestamp time);","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"     * Gets all names in the model.","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"    Set\u003cName\u003e getAllNames();","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"     * Returns an unmodifiable view of the filtered person list.","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jedkohjk"},"content":"     * Returns an unmodifiable view of the full transaction list.","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"    ObservableList\u003cTransaction\u003e getFullTransactionList();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"     * Returns an unmodifiable view of the filtered transaction list.","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ncduy0303"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"ncduy0303"},"content":"     * Updates the filter of the filtered transaction list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"ncduy0303"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"ncduy0303"},"content":"    void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"jedkohjk"},"content":"     * Gets the command aliases stored in the user preferences.","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"jedkohjk"},"content":"    CommandAliasMap getCommandMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"     * Ties the alias to the command, and returns the previous alias for the command, if any.","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"jedkohjk"},"content":"    String setCommandAlias(String command, String alias) throws CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"jedkohjk"},"content":"     * Sorts person list in ascending order of balance.","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"jedkohjk"},"content":"    void sortPersonAscending();","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"jedkohjk"},"content":"     * Sorts person list in descending order of balance.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"jedkohjk"},"content":"    void sortPersonDescending();","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jedkohjk":41,"nathanielcalimag":9,"ncduy0303":45,"-":54,"wui-hong":26}},{"path":"src/main/java/seedu/spendnsplit/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":" * Represents the in-memory model of the spendNSplit book data.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    private final SpendNSplit spendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    private final FilteredList\u003cTransaction\u003e filteredTransactions;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"     * Initializes a ModelManager with the given spendNSplitBook and userPrefs.","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    public ModelManager(ReadOnlySpendNSplitBook spendNSplitBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        requireAllNonNull(spendNSplitBook, userPrefs);","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"        logger.fine(\"Initializing with spendNSplit book: \" + spendNSplitBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        this.spendNSplit \u003d new SpendNSplit(spendNSplitBook);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.spendNSplit.getPersonList());","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"        filteredTransactions \u003d new FilteredList\u003c\u003e(this.spendNSplit.getTransactionList());","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        this(new SpendNSplit(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"        return userPrefs.getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"    public void setSpendNSplitBookFilePath(Path spendNSplitBookFilePath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(spendNSplitBookFilePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"        userPrefs.setSpendNSplitBookFilePath(spendNSplitBookFilePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"    public CommandAliasMap getCommandMap() {","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        return userPrefs.getCommandMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"    public String setCommandAlias(String command, String alias) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        requireAllNonNull(command, alias);","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        return userPrefs.setCommandAlias(command, alias);","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SpendNSplitBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"    public void setSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook) {","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"        this.spendNSplit.resetData(spendNSplitBook);","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"    public ReadOnlySpendNSplitBook getSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.hasPerson(person);","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.removePerson(target);","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.addPerson(person);","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"    public Set\u003cName\u003e getAllNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.getAllNames();","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.setPerson(target, editedPerson);","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"ncduy0303"},"content":"    public void setTransaction(Transaction target, Transaction editedTransaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"ncduy0303"},"content":"        requireAllNonNull(target, editedTransaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.setTransaction(target, editedTransaction);","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ncduy0303"},"content":"    public void deleteTransaction(Transaction target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.removeTransaction(target);","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"    public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.addTransaction(transaction);","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"ncduy0303"},"content":"        updateFilteredTransactionList(PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ncduy0303"},"content":"    public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.hasTransaction(transaction);","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"nathanielcalimag"},"content":"    public BigFraction getBalance(Name name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"nathanielcalimag"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.getBalance(name);","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"jedkohjk"},"content":"    public BigFraction getBalance(Name name, Timestamp time) {","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"jedkohjk"},"content":"        requireAllNonNull(name, time);","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.getBalance(name, time);","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"jedkohjk"},"content":"    public void sortPersonDescending() {","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.setPersonDescendingBalance();","lastModifiedDate":"2023-11-03"},{"lineNumber":166,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"jedkohjk"},"content":"    public void sortPersonAscending() {","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.setPersonAscendingBalance();","lastModifiedDate":"2023-11-03"},{"lineNumber":170,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"ncduy0303"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person \u0026 Transaction List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":175,"author":{"gitId":"jedkohjk"},"content":"     * Returns an unmodifiable view to be displayed of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"wui-hong"},"content":"     * {@code versionedSpendNSplitBook}","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"ncduy0303"},"content":"     * Returns an unmodifiable view of the list of {@code Transaction} backed by the internal list of","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"wui-hong"},"content":"     * {@code versionedSpendNSplitBook}","lastModifiedDate":"2023-11-03"},{"lineNumber":186,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"jedkohjk"},"content":"    public ObservableList\u003cTransaction\u003e getFullTransactionList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.getTransactionList();","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"     * Returns an unmodifiable view to be displayed of the list of {@code Transaction} backed by the internal list of","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"wui-hong"},"content":"     * {@code versionedSpendNSplitBook}","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"ncduy0303"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"ncduy0303"},"content":"        return filteredTransactions;","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":206,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"    public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"ncduy0303"},"content":"        filteredTransactions.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit.equals(otherModelManager.spendNSplit)","lastModifiedDate":"2023-11-03"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 filteredTransactions.equals(otherModelManager.filteredTransactions);","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":35,"nathanielcalimag":7,"ncduy0303":37,"-":104,"wui-hong":47}},{"path":"src/main/java/seedu/spendnsplit/model/ReadOnlySpendNSplitBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":" * Unmodifiable view of a Spend N Split book","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"public interface ReadOnlySpendNSplitBook {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns an unmodifiable view of the transactions list.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"     * This list will not contain any duplicate transactions.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    ObservableList\u003cTransaction\u003e getTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nathanielcalimag":6,"-":13,"wui-hong":5}},{"path":"src/main/java/seedu/spendnsplit/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    Path getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    void resetCommandMap();","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    CommandAliasMap getCommandMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    String setCommandAlias(String command, String alias) throws CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jedkohjk":6,"-":11,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/model/SpendNSplit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.UniquePersonList;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.UniqueTransactionList;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":" * Wraps all data at the spendNSplit-book level","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"public class SpendNSplit implements ReadOnlySpendNSplitBook {","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    private final UniqueTransactionList transactions;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"        transactions \u003d new UniqueTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    private Comparator\u003cPerson\u003e personComparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplit() {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        this.setPersonDescendingBalance();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"     * Creates an SpendNSplitBook using the Persons and Transactions in the {@code toBeCopied}","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplit(ReadOnlySpendNSplitBook toBeCopied) {","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"     * Replaces the contents of the transaction list with {@code transactions}.","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"     * {@code transactions} must not contain duplicate transactions.","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"    public void setTransactions(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        this.transactions.setTransactions(transactions, getAllNames());","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"     * Resets the existing data of this {@code SpendNSplitBook} with {@code newData}.","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"    public void resetData(ReadOnlySpendNSplitBook newData) {","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"        setTransactions(newData.getTransactionList());","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"     * Adds a person to the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"     * The person must not already exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"     * {@code target} must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"     * person in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"        transactions.setPerson(target.getName(), editedPerson.getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"        syncNames();","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"     * Removes {@code key} from this {@code SpendNSplitBook}.","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"     * {@code key} must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"        transactions.deletePerson(key.getName(), getAllNames());","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"     * Returns a set of all names in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"jedkohjk"},"content":"    public Set\u003cName\u003e getAllNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"        return persons.getAllNames();","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"nathanielcalimag"},"content":"    //// transaction-level operations","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"     * Returns true if a transaction with the same identity as {@code transaction} exists in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"nathanielcalimag"},"content":"    public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"nathanielcalimag"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"nathanielcalimag"},"content":"        return transactions.contains(transaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"     * Adds a transaction to the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"     * The transaction must not already exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"wui-hong"},"content":"    public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"jedkohjk"},"content":"        transactions.add(transaction, getAllNames());","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"jedkohjk"},"content":"        syncNames();","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"ncduy0303"},"content":"     * Replaces the given transaction {@code target} in the list with {@code editedTransaction}.","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"     * {@code target} must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"ncduy0303"},"content":"     * The transaction identity of {@code editedTransaction} must not be the same as another existing transaction","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"wui-hong"},"content":"     * in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ncduy0303"},"content":"    public void setTransaction(Transaction target, Transaction editedTransaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(editedTransaction);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"jedkohjk"},"content":"        transactions.setTransaction(target, editedTransaction, getAllNames());","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"jedkohjk"},"content":"        syncNames();","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"wui-hong"},"content":"     * Removes {@code key} from this {@code SpendNSplitBook}.","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"     * {@code key} must exist in the spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":175,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"ncduy0303"},"content":"    public void removeTransaction(Transaction key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"ncduy0303"},"content":"        transactions.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"     * Sets sort person to descending.","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"    public void setPersonDescendingBalance() {","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"        personComparator \u003d (p1, p2) -\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"jedkohjk"},"content":"            int balCompare \u003d -FractionUtil.compare(transactions.getBalance(p1.getName()),","lastModifiedDate":"2023-11-06"},{"lineNumber":187,"author":{"gitId":"jedkohjk"},"content":"                    transactions.getBalance(p2.getName()));","lastModifiedDate":"2023-11-06"},{"lineNumber":188,"author":{"gitId":"jedkohjk"},"content":"            if (balCompare \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"jedkohjk"},"content":"                return p1.getName().compareTo(p2.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"jedkohjk"},"content":"            return balCompare;","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"jedkohjk"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"jedkohjk"},"content":"     * Sets sort person to ascending.","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"jedkohjk"},"content":"    public void setPersonAscendingBalance() {","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"jedkohjk"},"content":"        personComparator \u003d (p1, p2) -\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"jedkohjk"},"content":"            int balCompare \u003d FractionUtil.compare(transactions.getBalance(p1.getName()),","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"jedkohjk"},"content":"                    transactions.getBalance(p2.getName()));","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"jedkohjk"},"content":"            if (balCompare \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"jedkohjk"},"content":"                return p1.getName().compareTo(p2.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"jedkohjk"},"content":"            return balCompare;","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"jedkohjk"},"content":"        };","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"jedkohjk"},"content":"        sortPersons();","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"jedkohjk"},"content":"    private void sortPersons() {","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"jedkohjk"},"content":"        persons.sort(personComparator);","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"jedkohjk"},"content":"    private void syncNames() {","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cName\u003e names \u003d getAllNames();","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"jedkohjk"},"content":"        names.addAll(Name.RESERVED_NAMES);","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"jedkohjk"},"content":"        this.transactions.syncNames(names);","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"nathanielcalimag"},"content":"                .add(\"transactions\", transactions)","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns the total balance of all transaction that the person has to pay the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"nathanielcalimag"},"content":"     * @param name the name of the person","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"nathanielcalimag"},"content":"    public BigFraction getBalance(Name name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"jedkohjk"},"content":"        return transactions.getBalance(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"jedkohjk"},"content":"     * Returns the total balance of all transaction before a stated time that the person has to pay the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"jedkohjk"},"content":"     * @param name the name of the person","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"jedkohjk"},"content":"     * @param time the time before which transactions are accounted for","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"jedkohjk"},"content":"    public BigFraction getBalance(Name name, Timestamp time) {","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"jedkohjk"},"content":"        return transactions.getBalance(name, time);","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":255,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"nathanielcalimag"},"content":"    public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"nathanielcalimag"},"content":"        return transactions.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"wui-hong"},"content":"        if (!(other instanceof SpendNSplit)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":271,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit otherSpendNSplit \u003d (SpendNSplit) other;","lastModifiedDate":"2023-11-03"},{"lineNumber":272,"author":{"gitId":"wui-hong"},"content":"        return persons.equals(otherSpendNSplit.persons) \u0026\u0026 transactions.equals(otherSpendNSplit.transactions);","lastModifiedDate":"2023-11-03"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":78,"nathanielcalimag":40,"ncduy0303":15,"-":110,"wui-hong":36}},{"path":"src/main/java/seedu/spendnsplit/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    private Path spendNSplitBookFilePath \u003d Paths.get(\"data\" , \"spendnsplitbook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    private CommandAliasMap commandMap \u003d new CommandAliasMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        setSpendNSplitBookFilePath(newUserPrefs.getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        this.commandMap \u003d new CommandAliasMap(newUserPrefs.getCommandMap());","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"    public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"        return spendNSplitBookFilePath;","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    public void setSpendNSplitBookFilePath(Path spendNSplitBookFilePath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(spendNSplitBookFilePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        this.spendNSplitBookFilePath \u003d spendNSplitBookFilePath;","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"    public String setCommandAlias(String command, String alias) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        return commandMap.putAlias(command, alias);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"    public void resetCommandMap() {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        commandMap \u003d new CommandAliasMap();","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"    public CommandAliasMap getCommandMap() {","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        return commandMap;","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"        return spendNSplitBookFilePath.equals(otherUserPrefs.spendNSplitBookFilePath)","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 commandMap.equals(otherUserPrefs.commandMap);","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"        return Objects.hash(spendNSplitBookFilePath, commandMap);","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"        sb.append(\"\\nLocal data file location : \" + spendNSplitBookFilePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        sb.append(\"\\nCommand map: \" + commandMap);","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":19,"-":63,"wui-hong":13}},{"path":"src/main/java/seedu/spendnsplit/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Represents a Person\u0027s address.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"            \"Addresses should not be blank and should not contain the equal sign\";","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"     * There must not be any equal sign \"\u003d\" in the address.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[^ \u003d][^\u003d]*$\";","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":3,"nathanielcalimag":1,"-":58,"wui-hong":2,"jeffrey-jian":3}},{"path":"src/main/java/seedu/spendnsplit/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Represents a Person\u0027s email.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":1,"-":76,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":" * Represents a Person\u0027s name.","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    public static final Name SELF \u003d new Name(\"Self\");","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    public static final Name OTHERS \u003d new Name(\"Others\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    public static final Set\u003cName\u003e RESERVED_NAMES \u003d Set.of(SELF, OTHERS);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    public static final String RESERVED_CONSTRAINTS \u003d \"The name %s is reserved\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\p{Alnum}][\\\\p{Alnum} ]*$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        fullName \u003d name.strip();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"     * Returns true if a given string is a reserved name.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"    public static boolean isReservedName(Name test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        return RESERVED_NAMES.contains(test);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"        return fullName.equalsIgnoreCase(otherName.fullName);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"        return fullName.toUpperCase().hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        if (this.equals(other)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"            return 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        if (this.equals(Name.SELF)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"            return -1;","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        if (other.equals(Name.SELF)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"            return 1;","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        if (this.equals(Name.OTHERS)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"            return 1;","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        if (other.equals(Name.OTHERS)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"            return -1;","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        return this.fullName.toUpperCase().compareTo(other.fullName.toUpperCase());","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":39,"nathanielcalimag":2,"-":58,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.StringUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"        return keywords.isEmpty() || keywords.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ncduy0303":1,"-":40,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":" * Represents a Person.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"    // Identity field","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    private final Phone phone;","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    private final Email email;","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    public Person(Name name, Phone phone, TelegramHandle telegramHandle, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        checkArgument(!Name.isReservedName(name), String.format(Name.RESERVED_CONSTRAINTS, name.toString()));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"        return telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 (phone \u003d\u003d otherPerson.phone","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"                || (phone !\u003d null \u0026\u0026 phone.equals(otherPerson.phone)))","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 (email \u003d\u003d otherPerson.email","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"                || (email !\u003d null \u0026\u0026 email.equals(otherPerson.email)))","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 (address \u003d\u003d otherPerson.address","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"                || (address !\u003d null \u0026\u0026 address.equals(otherPerson.address)))","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 (telegramHandle \u003d\u003d otherPerson.telegramHandle","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"                || (telegramHandle !\u003d null \u0026\u0026 telegramHandle.equals(otherPerson.telegramHandle)))","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"        return Objects.hash(name, phone, telegramHandle, email, address, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"                .add(\"telegramHandle\", telegramHandle)","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":11,"ncduy0303":3,"-":103,"wui-hong":14}},{"path":"src/main/java/seedu/spendnsplit/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Represents a Person\u0027s phone number.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":1,"-":58,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Represents a Person\u0027s telegram handle.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"public class TelegramHandle {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram Handles should be of the format @123han_dle123\"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"            + \"1. Begin with a @ and be of minimum length 5 characters, exclusive of @ symbol.\"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"            + \" The characters after @ can only be alphanumeric or underscores.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    // begins with @, and only contains at least 5 alphanumeric and underscores after","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    private static final String VALIDATION_REGEX \u003d \"^@[a-zA-Z0-9_]{5,}$\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    public final String value;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a {@code TelegramHandle}.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     * @param telegramHandle A valid telegramHandle.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        value \u003d telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"     * Returns true if a given string is a valid telegramHandle.","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        return value;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        if (!(other instanceof TelegramHandle)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        TelegramHandle otherTelegramHandle \u003d (TelegramHandle) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        return value.equals(otherTelegramHandle.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":1,"wui-hong":62,"jeffrey-jian":2}},{"path":"src/main/java/seedu/spendnsplit/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"     * Returns the set of names of people in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    public Set\u003cName\u003e getAllNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        return internalList.stream().map(x -\u003e x.getName()).collect(Collectors.toSet());","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"    public void sort(Comparator\u003cPerson\u003e comp) {","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"        internalList.sort(comp);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"jedkohjk"},"content":"        return internalList.stream().collect(Collectors.toSet())","lastModifiedDate":"2023-10-29"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"                .equals(otherUniquePersonList.internalList.stream().collect(Collectors.toSet()));","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":16,"-":144,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":10,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"-":5,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Represents a Tag.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jedkohjk":1,"-":59,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/Amount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":" * Represents a Transaction\u0027s amount.","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAmount(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"public class Amount {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALUE_CONSTRAINT \u003d \"Amount should be greater than 0\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"        \"Amount should be a valid decimal number, and it should not be blank\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"            \"^-?(([0-9 ]*[0-9][0-9 ]*)|([0-9 ]*\\\\.[0-9 ]*))(/(([0-9 ]*[0-9][0-9 ]*)|([0-9 ]*\\\\.[0-9 ]*)))?$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    public static final int DEFAULT_DECIMAL_PLACES \u003d 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    // Identity fields","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public final BigFraction amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"     * Constructs a {@code Amount}.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"     * @param amount A valid amount.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    public Amount(String amount) throws ParseException {","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        requireNonNull(amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        checkArgument(isValidAmount(amount), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        this.amount \u003d FractionUtil.parseFraction(amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if a given string is a valid amount.","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    public static boolean isValidAmount(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        return FractionUtil.toString(amount, DEFAULT_DECIMAL_PLACES);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof Amount)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        Amount otherAmount \u003d (Amount) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        return amount.equals(otherAmount.amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        return amount.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":4,"nathanielcalimag":2,"ncduy0303":61,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Represents a Transaction\u0027s description.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"public class Description {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"            \"Description should not be blank, and should not contain the equal sign\";","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[^ \u003d][^\u003d]*$\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"    public Description(String description) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        value \u003d description;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"        return value.equals(otherDescription.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":2,"nathanielcalimag":59,"wui-hong":2,"jeffrey-jian":2}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/Timestamp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import java.time.chrono.IsoEra;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":" * Represents a Transaction\u0027s timestamp.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimestamp(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"public class Timestamp implements Comparable\u003cTimestamp\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date must be in DD/MM/YYYY format \"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"            + \"and time must be in HH:MM format; date should come before time \"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"            + \"with a single space separating them if both are provided\";","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"    public static final String DATE_VALIDATION \u003d \"[0-9]{2}/[0-9]{2}/[0-9]{4}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    public static final String TIME_VALIDATION \u003d \"[0-9]{2}:[0-9]{2}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"    public static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"            .appendPattern(DATE_FORMAT + \" \" + TIME_FORMAT).parseDefaulting(ChronoField.ERA, IsoEra.CE.getValue())","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            .toFormatter().withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"    private static final String MIDNIGHT \u003d \"00:00\";","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a {@code Timestamp}.","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"     * @param timestamp A valid timestamp.","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    public Timestamp(String timestamp) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        requireNonNull(timestamp);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"        checkArgument(isValidTimestamp(timestamp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        value \u003d parse(timestamp, MIDNIGHT);","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a {@code Timestamp}.","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"     * @param timestamp A valid timestamp.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"     * @param defaultTime The default time if only a date is provided.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    public Timestamp(String timestamp, String defaultTime) {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        requireNonNull(timestamp);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        checkArgument(isValidTimestamp(timestamp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        value \u003d parse(timestamp, defaultTime);","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a {@code Timestamp}.","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"     * @param value A valid timestamp.","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"    public Timestamp(LocalDateTime value) {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"    private static LocalDateTime parse(String timestamp, String defaultTime) {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        if (timestamp.matches(DATE_VALIDATION + \" \" + TIME_VALIDATION)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"            return LocalDateTime.parse(timestamp, DATETIME_FORMATTER);","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"        if (timestamp.matches(DATE_VALIDATION)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"            return LocalDateTime.parse(timestamp + \" \" + defaultTime, DATETIME_FORMATTER);","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        if (timestamp.matches(TIME_VALIDATION)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"            String date \u003d DATE_FORMATTER.format(LocalDateTime.now());","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"            return LocalDateTime.parse(date + \" \" + timestamp, DATETIME_FORMATTER);","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        return null;","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns the timestamp for the current time.","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"    public static Timestamp now() {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        return new Timestamp(DATETIME_FORMATTER.format(LocalDateTime.now()));","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns true if a given string is a valid timestamp.","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"    public static boolean isValidTimestamp(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"            return parse(test, MIDNIGHT) !\u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"        return DATETIME_FORMATTER.format(value);","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"nathanielcalimag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"nathanielcalimag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"nathanielcalimag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"nathanielcalimag"},"content":"        if (!(other instanceof Timestamp)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"        Timestamp otherTimestamp \u003d (Timestamp) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"        // Uses string format to get rid of floating point errors","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"        return value.toString().equals(otherTimestamp.value.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"    public int compareTo(Timestamp other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"        // Seconds are not compared","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"        if (this.equals(other)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"            return 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"        return value.compareTo(other.value);","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"nathanielcalimag"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"nathanielcalimag"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":74,"nathanielcalimag":64,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/Transaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireNonEmptyCollection;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":" * Represents a Transaction.","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"public class Transaction implements Comparable\u003cTransaction\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    // Data fields","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    private final Amount amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    private final Description description;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    private final Name payeeName;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    private final Set\u003cPortion\u003e portions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"     * Internal timestamp used for uniquely identifying transactions.","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"     **/","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    private final Timestamp timestamp;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    public Transaction(Amount amount, Description description, Name payeeName, Set\u003cPortion\u003e portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        this(amount, description, payeeName, portions, Timestamp.now());","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"    public Transaction(Amount amount, Description description, Name payeeName, Set\u003cPortion\u003e portions,","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"                       Timestamp timestamp) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        requireAllNonNull(amount, description, payeeName, portions, timestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        requireNonEmptyCollection(portions);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"        this.payeeName \u003d payeeName;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        this.portions.addAll(normalisePortions(portions));","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"    public Amount getAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        return amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"    public Name getPayeeName() {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"        return payeeName;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"    public Timestamp getTimestamp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"        return timestamp;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"    private Set\u003cPortion\u003e normalisePortions(Set\u003cPortion\u003e portions) {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        BigFraction totalWeight \u003d sumWeights(portions);","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        if (totalWeight.signum() \u003c\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"            return portions;","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        return portions.stream().map(portion -\u003e new Portion(portion.getPersonName(),","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"                new Weight(portion.getWeight().value.divide(totalWeight)))).collect(Collectors.toSet());","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"     * Returns true if the transaction relates to both the user (`SELF`) and another named person (not `OTHERS`).","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"    public boolean isRelevant() {","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cName\u003e participants \u003d getAllInvolvedPersonNames();","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        if (!participants.contains(Name.SELF)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        if (Name.RESERVED_NAMES.containsAll(participants)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"     * Returns true if all values (amount and weights)  in the transaction are positive.","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"     * @return","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"    public boolean isPositive() {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"        if (amount.amount.signum() \u003c\u003d 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"        for (Portion portion : portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"            if (portion.getWeight().value.signum() \u003c\u003d 0) {","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"jedkohjk"},"content":"                return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"jedkohjk"},"content":"        return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"     * Returns true if we know everyone involved in a transaction.","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"    public boolean isKnown(Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"        if (!(payeeName.equals(Name.SELF) || validNames.contains(payeeName))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"ncduy0303"},"content":"        for (Portion portion : portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"            if (!(validNames.contains(portion.getPersonName())","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"                    || Name.RESERVED_NAMES.contains(portion.getPersonName()))) {","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"                return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"        return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if there are no duplicate names in portions.","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"    public boolean hasNoDuplicates() {","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"ncduy0303"},"content":"        return portions.stream().map(Portion::getPersonName)","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"ncduy0303"},"content":"            .collect(Collectors.toSet()).size() \u003d\u003d portions.size();","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"     * Returns true if a transaction is valid.","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"    public boolean isValid(Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jedkohjk"},"content":"        return isRelevant() \u0026\u0026 isPositive() \u0026\u0026 isKnown(validNames) \u0026\u0026 hasNoDuplicates();","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"jedkohjk"},"content":"     * Replaces all equal names to names in the set.","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"jedkohjk"},"content":"    public Transaction syncNames(Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"jedkohjk"},"content":"        Map\u003cName, Name\u003e nameMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"jedkohjk"},"content":"        for (Name name : validNames) {","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"jedkohjk"},"content":"            nameMap.put(name, name);","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"jedkohjk"},"content":"        nameMap.put(Name.SELF, Name.SELF);","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"jedkohjk"},"content":"        Name newPayee \u003d nameMap.containsKey(payeeName) ? nameMap.get(payeeName) : Name.OTHERS;","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cPortion\u003e newPortions \u003d portions.stream().map(x -\u003e new Portion(","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"jedkohjk"},"content":"                nameMap.containsKey(x.getPersonName()) ? nameMap.get(x.getPersonName()) : Name.OTHERS,","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"jedkohjk"},"content":"                x.getWeight())).collect(Collectors.toSet());","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"        return new Transaction(amount, description, newPayee, newPortions, timestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"jedkohjk"},"content":"     * Returns a new {@code Transaction} replacing the person p with others.","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"jedkohjk"},"content":"    public Transaction removePerson(Name p) {","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"jedkohjk"},"content":"        Name newPayee \u003d payeeName.equals(p) ? Name.OTHERS : payeeName;","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e newPortions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"jedkohjk"},"content":"        BigFraction accumOthers \u003d BigFraction.ZERO;","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"ncduy0303"},"content":"        for (Portion portion : portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"ncduy0303"},"content":"            if (portion.getPersonName().equals(p) || portion.getPersonName().equals(Name.OTHERS)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"ncduy0303"},"content":"                accumOthers \u003d accumOthers.add(portion.getWeight().value);","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"jedkohjk"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"ncduy0303"},"content":"                newPortions.add(portion);","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":"        if (accumOthers.compareTo(BigFraction.ZERO) \u003e 0) {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"ncduy0303"},"content":"            newPortions.add(new Portion(Name.OTHERS, new Weight(accumOthers)));","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"ncduy0303"},"content":"        return new Transaction(amount, description, newPayee, newPortions, timestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"    public Transaction setPerson(Name target, Name editedName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"        Name newPayee \u003d payeeName.equals(target) ? editedName : payeeName;","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e newPortions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"ncduy0303"},"content":"        for (Portion portion : portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"ncduy0303"},"content":"            if (portion.getPersonName().equals(target)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"ncduy0303"},"content":"                newPortions.add(new Portion(editedName, portion.getWeight()));","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"jedkohjk"},"content":"            } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"ncduy0303"},"content":"                newPortions.add(portion);","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"ncduy0303"},"content":"        return new Transaction(amount, description, newPayee, newPortions, timestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns an immutable portions set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"ncduy0303"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"ncduy0303"},"content":"    public Set\u003cPortion\u003e getPortions() {","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"ncduy0303"},"content":"        return Collections.unmodifiableSet(portions);","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns a mutable copy of the portions set.","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"jeffrey-jian"},"content":"    public Set\u003cPortion\u003e getPortionsCopy() {","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"jeffrey-jian"},"content":"        return new HashSet\u003c\u003e(portions);","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"ncduy0303"},"content":"     * Returns the portion amount of the transaction that the person has to pay the payee.","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"ncduy0303"},"content":"     * @param personName the name of the person","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"ncduy0303"},"content":"    public BigFraction getPortionAmount(Name personName) {","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"ncduy0303"},"content":"        BigFraction totalWeight \u003d getTotalWeight();","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"ncduy0303"},"content":"        return portions.stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"ncduy0303"},"content":"            .filter(portion -\u003e portion.getPersonName().equals(personName))","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"ncduy0303"},"content":"            .map(portions -\u003e portions.getWeight().value.multiply(this.amount.amount).divide(totalWeight))","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"ncduy0303"},"content":"            .reduce(BigFraction.ZERO, BigFraction::add);","lastModifiedDate":"2023-10-12"},{"lineNumber":223,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":224,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":225,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":226,"author":{"gitId":"ncduy0303"},"content":"     * Returns a map of all the portions with calculated amount each person has to pay the payee for this transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"ncduy0303"},"content":"    public Map\u003cName, BigFraction\u003e getAllPortionAmounts() {","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"ncduy0303"},"content":"        BigFraction totalWeight \u003d getTotalWeight();","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"ncduy0303"},"content":"        return portions.stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"ncduy0303"},"content":"            .collect(","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"ncduy0303"},"content":"                Collectors.toMap(","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"ncduy0303"},"content":"                    Portion::getPersonName,","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"ncduy0303"},"content":"                    portion -\u003e portion.getWeight().value.multiply(this.amount.amount).divide(totalWeight)","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"ncduy0303"},"content":"                )","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"ncduy0303"},"content":"            );","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"ncduy0303"},"content":"     * Returns the portion amount of the transaction that the person has to pay the user (self).","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"nathanielcalimag"},"content":"     * A positive amount indicates the amount the person owes the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"nathanielcalimag"},"content":"     * A negative amount indicates the amount the user owes the person.","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"nathanielcalimag"},"content":"     * Zero amount indicates that the user has no net balance owed to the user from the transaction.","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"nathanielcalimag"},"content":"     * @param personName the name of the person","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"ncduy0303"},"content":"    public BigFraction getPortionAmountOwedSelf(Name personName) {","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"nathanielcalimag"},"content":"        // person is not relevant to user in the transaction","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"nathanielcalimag"},"content":"        if (!payeeName.equals(personName) \u0026\u0026 !payeeName.equals(Name.SELF)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"nathanielcalimag"},"content":"            return BigFraction.ZERO;","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"nathanielcalimag"},"content":"        // user cannot owe self money","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"nathanielcalimag"},"content":"        if (payeeName.equals(Name.SELF) \u0026\u0026 personName.equals(Name.SELF)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"nathanielcalimag"},"content":"            return BigFraction.ZERO;","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"nathanielcalimag"},"content":"        // user owes person money from the transaction","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"nathanielcalimag"},"content":"        if (payeeName.equals(personName)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"ncduy0303"},"content":"            return getPortionAmount(Name.SELF).negate();","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"nathanielcalimag"},"content":"        // person owes user money from the transaction","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"ncduy0303"},"content":"        return getPortionAmount(personName);","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":267,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":268,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if the person with the given name is involved in this transaction, either as a payer or a payee.","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"ncduy0303"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":270,"author":{"gitId":"ncduy0303"},"content":"     * @param personName the name of the person","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":272,"author":{"gitId":"ncduy0303"},"content":"    public boolean isPersonInvolved(Name personName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"ncduy0303"},"content":"        return getAllInvolvedPersonNames().contains(personName);","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"ncduy0303"},"content":"     * Returns the names of all the persons involved in this transaction, either as a payer or a payee.","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"ncduy0303"},"content":"    public Set\u003cName\u003e getAllInvolvedPersonNames() {","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cName\u003e names \u003d portions.stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"ncduy0303"},"content":"            .map(Portion::getPersonName)","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"ncduy0303"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"ncduy0303"},"content":"        names.add(payeeName);","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"ncduy0303"},"content":"        return names;","lastModifiedDate":"2023-10-13"},{"lineNumber":285,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":286,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":287,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":288,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if both transactions have the same amount, description, payeeName, portions and transactions.","lastModifiedDate":"2023-10-23"},{"lineNumber":289,"author":{"gitId":"ncduy0303"},"content":"     * This defines a weaker notion of equality between two transactions.","lastModifiedDate":"2023-10-12"},{"lineNumber":290,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":291,"author":{"gitId":"ncduy0303"},"content":"    public boolean isSameTransaction(Transaction otherTransaction) {","lastModifiedDate":"2023-10-12"},{"lineNumber":292,"author":{"gitId":"ncduy0303"},"content":"        if (otherTransaction \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":293,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":294,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":295,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":296,"author":{"gitId":"ncduy0303"},"content":"        return otherTransaction !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":297,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 otherTransaction.getAmount().equals(getAmount())","lastModifiedDate":"2023-10-12"},{"lineNumber":298,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 otherTransaction.getDescription().equals(getDescription())","lastModifiedDate":"2023-10-12"},{"lineNumber":299,"author":{"gitId":"nathanielcalimag"},"content":"            \u0026\u0026 otherTransaction.getPayeeName().equals(getPayeeName())","lastModifiedDate":"2023-10-13"},{"lineNumber":300,"author":{"gitId":"ncduy0303"},"content":"            \u0026\u0026 otherTransaction.getPortions().equals(getPortions())","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"nathanielcalimag"},"content":"            \u0026\u0026 otherTransaction.getTimestamp().equals(getTimestamp());","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if both transactions is the same object.","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":307,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"nathanielcalimag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":310,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":311,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":312,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":313,"author":{"gitId":"nathanielcalimag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":314,"author":{"gitId":"nathanielcalimag"},"content":"        if (!(other instanceof Transaction)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":315,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":316,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":317,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":318,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":319,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction otherTransaction \u003d (Transaction) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":320,"author":{"gitId":"nathanielcalimag"},"content":"        return amount.equals(otherTransaction.amount)","lastModifiedDate":"2023-10-13"},{"lineNumber":321,"author":{"gitId":"nathanielcalimag"},"content":"                \u0026\u0026 payeeName.equals(otherTransaction.payeeName)","lastModifiedDate":"2023-10-13"},{"lineNumber":322,"author":{"gitId":"nathanielcalimag"},"content":"                \u0026\u0026 description.equals(otherTransaction.description)","lastModifiedDate":"2023-10-13"},{"lineNumber":323,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 portions.equals(otherTransaction.portions)","lastModifiedDate":"2023-10-23"},{"lineNumber":324,"author":{"gitId":"nathanielcalimag"},"content":"                \u0026\u0026 timestamp.equals(otherTransaction.timestamp);","lastModifiedDate":"2023-10-13"},{"lineNumber":325,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":326,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":327,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":328,"author":{"gitId":"jedkohjk"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":329,"author":{"gitId":"jedkohjk"},"content":"    public int compareTo(Transaction other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":330,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":331,"author":{"gitId":"jedkohjk"},"content":"        // Order more recent items first","lastModifiedDate":"2023-10-30"},{"lineNumber":332,"author":{"gitId":"jedkohjk"},"content":"        if (!timestamp.equals(other.timestamp)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":333,"author":{"gitId":"jedkohjk"},"content":"            return other.timestamp.compareTo(timestamp);","lastModifiedDate":"2023-10-30"},{"lineNumber":334,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":335,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":336,"author":{"gitId":"jedkohjk"},"content":"        // Order higher transaction totals first","lastModifiedDate":"2023-10-30"},{"lineNumber":337,"author":{"gitId":"jedkohjk"},"content":"        if (!amount.amount.equals(other.amount.amount)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":338,"author":{"gitId":"jedkohjk"},"content":"            return other.amount.amount.compareTo(amount.amount);","lastModifiedDate":"2023-10-30"},{"lineNumber":339,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":340,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":341,"author":{"gitId":"jedkohjk"},"content":"        // Order items lexicographically by description","lastModifiedDate":"2023-10-30"},{"lineNumber":342,"author":{"gitId":"jedkohjk"},"content":"        if (!description.equals(other.description)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":343,"author":{"gitId":"jedkohjk"},"content":"            return description.value.compareTo(other.description.value);","lastModifiedDate":"2023-10-30"},{"lineNumber":344,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":345,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":346,"author":{"gitId":"jedkohjk"},"content":"        // Order items lexicographically by payee name","lastModifiedDate":"2023-10-30"},{"lineNumber":347,"author":{"gitId":"jedkohjk"},"content":"        if (!payeeName.equals(other.payeeName)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":348,"author":{"gitId":"jedkohjk"},"content":"            return payeeName.compareTo(other.payeeName);","lastModifiedDate":"2023-10-30"},{"lineNumber":349,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":350,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":351,"author":{"gitId":"jedkohjk"},"content":"        // Order items which involved more people first","lastModifiedDate":"2023-10-30"},{"lineNumber":352,"author":{"gitId":"jedkohjk"},"content":"        if (portions.size() !\u003d other.portions.size()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":353,"author":{"gitId":"jedkohjk"},"content":"            return other.portions.size() - portions.size();","lastModifiedDate":"2023-10-30"},{"lineNumber":354,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":355,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":356,"author":{"gitId":"jedkohjk"},"content":"        // Order items based on portions, first by lexicographical order of names, then by higher weights first","lastModifiedDate":"2023-10-30"},{"lineNumber":357,"author":{"gitId":"jedkohjk"},"content":"        Comparator\u003cPortion\u003e comparator \u003d (portion1, portion2) -\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":358,"author":{"gitId":"jedkohjk"},"content":"            if (!portion1.getPersonName().equals(portion2.getPersonName())) {","lastModifiedDate":"2023-10-30"},{"lineNumber":359,"author":{"gitId":"jedkohjk"},"content":"                return portion1.getPersonName().compareTo(portion2.getPersonName());","lastModifiedDate":"2023-10-30"},{"lineNumber":360,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":361,"author":{"gitId":"jedkohjk"},"content":"            return portion2.getWeight().value.compareTo(portion1.getWeight().value);","lastModifiedDate":"2023-10-30"},{"lineNumber":362,"author":{"gitId":"jedkohjk"},"content":"        };","lastModifiedDate":"2023-10-30"},{"lineNumber":363,"author":{"gitId":"jedkohjk"},"content":"        List\u003cPortion\u003e sortedThis \u003d new ArrayList\u003c\u003e(this.portions);","lastModifiedDate":"2023-10-30"},{"lineNumber":364,"author":{"gitId":"jedkohjk"},"content":"        Collections.sort(sortedThis, comparator);","lastModifiedDate":"2023-10-30"},{"lineNumber":365,"author":{"gitId":"jedkohjk"},"content":"        List\u003cPortion\u003e sortedOther \u003d new ArrayList\u003c\u003e(other.portions);","lastModifiedDate":"2023-10-30"},{"lineNumber":366,"author":{"gitId":"jedkohjk"},"content":"        Collections.sort(sortedOther, comparator);","lastModifiedDate":"2023-10-30"},{"lineNumber":367,"author":{"gitId":"jedkohjk"},"content":"        for (int i \u003d 0; i \u003c portions.size(); i++) {","lastModifiedDate":"2023-10-30"},{"lineNumber":368,"author":{"gitId":"jedkohjk"},"content":"            int comparision \u003d comparator.compare(sortedThis.get(i), sortedOther.get(i));","lastModifiedDate":"2023-10-30"},{"lineNumber":369,"author":{"gitId":"jedkohjk"},"content":"            if (comparision !\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":370,"author":{"gitId":"jedkohjk"},"content":"                return comparision;","lastModifiedDate":"2023-10-30"},{"lineNumber":371,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":372,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":373,"author":{"gitId":"jedkohjk"},"content":"        return portions.hashCode() - other.portions.hashCode();","lastModifiedDate":"2023-10-30"},{"lineNumber":374,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":375,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":376,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":377,"author":{"gitId":"ncduy0303"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":378,"author":{"gitId":"ncduy0303"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":379,"author":{"gitId":"jedkohjk"},"content":"        return Objects.hash(amount, description, payeeName, portions, timestamp);","lastModifiedDate":"2023-10-29"},{"lineNumber":380,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":381,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":382,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":383,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":384,"author":{"gitId":"ncduy0303"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":385,"author":{"gitId":"ncduy0303"},"content":"            .add(\"amount\", amount)","lastModifiedDate":"2023-10-12"},{"lineNumber":386,"author":{"gitId":"ncduy0303"},"content":"            .add(\"description\", description)","lastModifiedDate":"2023-10-12"},{"lineNumber":387,"author":{"gitId":"nathanielcalimag"},"content":"            .add(\"payeeName\", payeeName)","lastModifiedDate":"2023-10-13"},{"lineNumber":388,"author":{"gitId":"ncduy0303"},"content":"            .add(\"portions\", portions)","lastModifiedDate":"2023-10-23"},{"lineNumber":389,"author":{"gitId":"jedkohjk"},"content":"            .add(\"timestamp\", timestamp)","lastModifiedDate":"2023-10-29"},{"lineNumber":390,"author":{"gitId":"ncduy0303"},"content":"            .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":391,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":392,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":393,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":394,"author":{"gitId":"jedkohjk"},"content":"     * Returns the sum of all portion weights in the set.","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"jedkohjk"},"content":"    public static BigFraction sumWeights(Set\u003cPortion\u003e portions) {","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"ncduy0303"},"content":"        return portions.stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":398,"author":{"gitId":"ncduy0303"},"content":"            .map(portion -\u003e portion.getWeight().value)","lastModifiedDate":"2023-10-23"},{"lineNumber":399,"author":{"gitId":"ncduy0303"},"content":"            .reduce(BigFraction.ZERO, BigFraction::add);","lastModifiedDate":"2023-10-12"},{"lineNumber":400,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":401,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":402,"author":{"gitId":"jedkohjk"},"content":"    private BigFraction getTotalWeight() {","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"jedkohjk"},"content":"        return sumWeights(portions);","lastModifiedDate":"2023-11-01"},{"lineNumber":404,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":405,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":162,"nathanielcalimag":66,"ncduy0303":164,"wui-hong":7,"jeffrey-jian":6}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/TransactionContainsKeywordsAndPersonNamesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.StringUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":" * Tests that a {@code Transaction} contains any of the keywords and any of the names of all the {@code Person},","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":" * either as a payer or a payee. Name matching is exact and case-insensitive.","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"public class TransactionContainsKeywordsAndPersonNamesPredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    private final List\u003cName\u003e personNames;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a predicate for transactions.","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    public TransactionContainsKeywordsAndPersonNamesPredicate(List\u003cString\u003e keywords, List\u003cName\u003e personNames) {","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"        this.personNames \u003d personNames;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        if (!(keywords.isEmpty() || keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"                StringUtil.containsWordIgnoreCase(transaction.getDescription().value, keyword)))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        if (!(personNames.isEmpty() || personNames.stream().anyMatch(transaction::isPersonInvolved))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        if (!(other instanceof TransactionContainsKeywordsAndPersonNamesPredicate)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate otherPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"            (TransactionContainsKeywordsAndPersonNamesPredicate) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        return keywords.stream().collect(Collectors.toSet())","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"                .equals(otherPredicate.keywords.stream().collect(Collectors.toSet()))","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"                \u0026\u0026 personNames.stream().collect(Collectors.toSet())","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"                .equals(otherPredicate.personNames.stream().collect(Collectors.toSet()));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords)","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"                .add(\"personNames\", personNames).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":27,"ncduy0303":32,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/UniqueTransactionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.exceptions.DuplicateTransactionException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.exceptions.TransactionNotFoundException;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":" * A list of transactions.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"public class UniqueTransactionList implements Iterable\u003cTransaction\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    private final ObservableList\u003cTransaction\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    private final ObservableList\u003cTransaction\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"     * Get balance for a person with a given name, within this list.","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    public BigFraction getBalance(Name name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        return UniqueTransactionList.getBalance(name, internalList);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"     * Get balance for a person with a given name based on transactions before the given time within this list.","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    public BigFraction getBalance(Name name, Timestamp time) {","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        return UniqueTransactionList.getBalance(name, internalList,","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"                transaction -\u003e transaction.getTimestamp().compareTo(time) \u003c\u003d 0);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"     * Get balance for a person with a given name, within a given list.","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    public static BigFraction getBalance(Name name, ObservableList\u003cTransaction\u003e transactionList) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        return getBalance(name, transactionList, unused -\u003e true);","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"    private static BigFraction getBalance(","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"                Name name, ObservableList\u003cTransaction\u003e transactionList, Predicate\u003cTransaction\u003e isApplicable) {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        return transactionList.stream().filter(isApplicable)","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"                .map(transaction -\u003e transaction.getPortionAmountOwedSelf(name))","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"                .reduce(BigFraction.ZERO, BigFraction::add);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns true if the list contains an equivalent transaction as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"    public boolean contains(Transaction toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTransaction);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"     * Adds a transaction to the list if it is valid based on the set of valid names.","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"    public void add(Transaction toAdd, Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        if (toAdd.isValid(validNames)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"            internalList.add(toAdd.syncNames(validNames));","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"            sort();","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"     * Replaces the transaction {@code target} in the list with {@code editedTransaction}","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"     * given that the transaction is valid based on the set of valid names.","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"    public void setTransaction(Transaction target, Transaction editedTransaction, Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"        requireAllNonNull(target, editedTransaction);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"            throw new TransactionNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        if (editedTransaction.isValid(validNames)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"            internalList.set(index, editedTransaction.syncNames(validNames));","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"            sort();","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"     * Removes the equivalent transaction from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"     * The transaction must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"    public void remove(Transaction toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"            throw new TransactionNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"        sort();","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"     * Replaces all names with names from the set.","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"jedkohjk"},"content":"    public void syncNames(Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"jedkohjk"},"content":"        internalList.setAll(internalList.stream()","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"                .map(transaction -\u003e transaction.syncNames(validNames)).collect(Collectors.toList()));","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"     * Removes person p from all {@code transactions} in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"    public void deletePerson(Name p, Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"        List\u003cTransaction\u003e validTransactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"        for (Transaction transaction : internalList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"            Transaction updatedTransaction \u003d transaction.removePerson(p);","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"            if (updatedTransaction.isValid(validNames)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"                validTransactions.add(updatedTransaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"        internalList.setAll(validTransactions);","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"     * Replaces all instances of the target name to the edited name in transactions.","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"jedkohjk"},"content":"    public void setPerson(Name target, Name edited) {","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"        internalList.setAll(internalList.stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"                .map(transaction -\u003e transaction.setPerson(target, edited)).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"jedkohjk"},"content":"     *  Replaces the contents of this list with those in replacement","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"jedkohjk"},"content":"     *  given that the transactions are valid based on the set of valid names.","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"    public void setTransactions(UniqueTransactionList replacement, Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"        setTransactions(replacement.internalList, validNames);","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"jedkohjk"},"content":"     * Replaces the contents of this list with {@code transactions}","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"jedkohjk"},"content":"     * given that the transactions are valid based on the set of valid names.","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"ncduy0303"},"content":"     * {@code transactions} must not contain duplicate transactions.","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"jedkohjk"},"content":"    public void setTransactions(List\u003cTransaction\u003e transactions, Set\u003cName\u003e validNames) {","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"        requireAllNonNull(transactions);","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"ncduy0303"},"content":"        if (!transactionsAreUnique(transactions)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ncduy0303"},"content":"            throw new DuplicateTransactionException();","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"jedkohjk"},"content":"        internalList.setAll(transactions.stream().map(transaction -\u003e transaction.syncNames(validNames))","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"                .filter(transaction -\u003e transaction.isValid(validNames)).collect(Collectors.toList()));","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"jedkohjk"},"content":"        sort();","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"jedkohjk"},"content":"     * Sorts transactions in the list by their comparator.","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"jedkohjk"},"content":"    public void sort() {","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"jedkohjk"},"content":"        internalList.sort((t1, t2) -\u003e t1.compareTo(t2));","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"    public ObservableList\u003cTransaction\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"jeffrey-jian"},"content":"    public Iterator\u003cTransaction\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"jeffrey-jian"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"jeffrey-jian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"jeffrey-jian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"jeffrey-jian"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"jeffrey-jian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"nathanielcalimag"},"content":"        if (!(other instanceof UniqueTransactionList)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"jeffrey-jian"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":192,"author":{"gitId":"nathanielcalimag"},"content":"        UniqueTransactionList otherTransactionList \u003d (UniqueTransactionList) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"        return internalList.stream().collect(Collectors.toSet())","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"jedkohjk"},"content":"                .equals(otherTransactionList.internalList.stream().collect(Collectors.toSet()));","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"jeffrey-jian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"jeffrey-jian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"jeffrey-jian"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"jeffrey-jian"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"jeffrey-jian"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if {@code transactions} contains only unique transactions.","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"    private boolean transactionsAreUnique(List\u003cTransaction\u003e transactions) {","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"        for (int i \u003d 0; i \u003c transactions.size() - 1; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"ncduy0303"},"content":"            for (int j \u003d i + 1; j \u003c transactions.size(); j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"ncduy0303"},"content":"                if (transactions.get(i).isSameTransaction(transactions.get(j))) {","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"ncduy0303"},"content":"                    return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"ncduy0303"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"ncduy0303"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"ncduy0303"},"content":"        return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":99,"nathanielcalimag":3,"ncduy0303":18,"wui-hong":5,"jeffrey-jian":95}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/exceptions/DuplicateTransactionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":" * Signals that the operation will result in duplicate Transactions (Transactions are considered duplicates if they have","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":" * the same identity).","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"public class DuplicateTransactionException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"    public DuplicateTransactionException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"        super(\"Operation would result in duplicate transactions\");","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ncduy0303":11,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/exceptions/TransactionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction.exceptions;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":" * Signals that the operation is unable to find the specified transaction.","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"public class TransactionNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wui-hong":1,"jeffrey-jian":5}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/portion/Portion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction.portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a Portion in a transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"public class Portion {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"    // Identity fields","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    private final Name personName;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    private final Weight weight;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public Portion(Name personName, Weight weight) {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    public Name getPersonName() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        return personName;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    public Weight getWeight() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        return weight;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if both portions have the same name and weight.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    public boolean isSamePortion(Portion otherPortion) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        if (otherPortion \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        return otherPortion !\u003d null","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 otherPortion.getPersonName().equals(getPersonName())","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 otherPortion.getWeight().equals(getWeight());","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"     * Returns true if both portions have the same identity fields.","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        if (!(other instanceof Portion)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        Portion otherPortion \u003d (Portion) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        return personName.equals(otherPortion.personName)","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"                \u0026\u0026 weight.equals(otherPortion.weight);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        return Objects.hash(personName, weight);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"        return \"[name: \" + personName + \", weight: \" + weight + \"]\";","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"nathanielcalimag":57,"ncduy0303":13,"wui-hong":2,"jeffrey-jian":2}},{"path":"src/main/java/seedu/spendnsplit/model/transaction/portion/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction.portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":" * Represents a Weight in an Portion.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeight(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"public class Weight {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALUE_CONSTRAINT \u003d \"Weight should be greater than 0\";","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"            \"Weight should only contain non-negative numbers.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"            \"^-?(([0-9 ]*[0-9][0-9 ]*)|([0-9 ]*\\\\.[0-9 ]*))(/(([0-9 ]*[0-9][0-9 ]*)|([0-9 ]*\\\\.[0-9 ]*)))?$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    public static final int DEFAULT_DECIMAL_PLACES \u003d 2;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"    public final BigFraction value;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"     * @param weight A valid weight.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    public Weight(String weight) throws ParseException {","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"        value \u003d FractionUtil.parseFraction(weight);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"     * @param weight A valid weight.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    public Weight(BigFraction weight) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        requireNonNull(weight);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        value \u003d weight;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"     * Returns true if a given string is a valid weight.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        return FractionUtil.toString(value, DEFAULT_DECIMAL_PLACES);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        if (!(other instanceof Weight)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"        Weight otherWeight \u003d (Weight) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"        return value.equals(otherWeight.value);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":14,"nathanielcalimag":59,"ncduy0303":1,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":" * Contains utility methods for populating {@code SpendNSplitBook} with sample data.","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new TelegramHandle(\"@alex_yeoh\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new TelegramHandle(\"@bernice122\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"                null,","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), null,","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"                null,","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"            new Person(new Name(\"David Li\"), null, null,","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"                null,","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new TelegramHandle(\"@irfan_handsome\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), null, null,","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"                null,","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"                null,","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"    public static Transaction[] getSampleTransactions() {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"            return new Transaction[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"                new Transaction(new Amount(\"60\"), new Description(\"Group Project Lunch\"), new Name(\"Self\"), Set.of(","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"                    new Portion(new Name(\"Alex Yeoh\"), new Weight(\"2\")), new Portion(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"                        new Weight(\"4\"))), new Timestamp(\"13/10/2023 12:00\")),","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"                new Transaction(new Amount(\"90\"), new Description(\"Hall Dinner\"), new Name(\"Bernice Yu\"), Set.of(","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"                    new Portion(new Name(\"Self\"), new Weight(\"8\")), new Portion(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"                        new Weight(\"4\"))), new Timestamp(\"13/10/2023 16:00\")),","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"                new Transaction(new Amount(\"600\"), new Description(\"Shared Dorm Rent\"), new Name(\"Bernice Yu\"), Set.of(","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"                    new Portion(new Name(\"Self\"), new Weight(\"1\")), new Portion(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"                        new Weight(\"1\"))), new Timestamp(\"13/10/2023 13:00\")),","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"                new Transaction(new Amount(\"100\"), new Description(\"Carpool Subscription\"), new Name(\"Self\"), Set.of(","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"                    new Portion(new Name(\"Self\"), new Weight(\"1\")), new Portion(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                        new Weight(\"1\"))), new Timestamp(\"13/10/2023 04:00\"))","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"            };","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"            return new Transaction[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"    public static ReadOnlySpendNSplitBook getSampleSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit sampleAb \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"        for (Transaction sampleTransaction : getSampleTransactions()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"            sampleAb.addTransaction(sampleTransaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jedkohjk":20,"nathanielcalimag":12,"ncduy0303":1,"-":40,"wui-hong":25}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    private final String telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"            @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        if (source.getPhone() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"            phone \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        if (source.getTelegramHandle() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"            telegramHandle \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"            telegramHandle \u003d source.getTelegramHandle().value;","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        if (source.getEmail() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"            email \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        if (source.getAddress() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"            address \u003d \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        final Phone modelPhone;","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        final TelegramHandle modelTelegramHandle;","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        final Email modelEmail;","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"        final Address modelAddress;","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"        if (Name.isReservedName(modelName)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"            throw new IllegalValueException(String.format(Name.RESERVED_CONSTRAINTS, name));","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"jedkohjk"},"content":"        if (phone.equals(\"\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"            modelPhone \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"jedkohjk"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"                    TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"        if (telegramHandle.equals(\"\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"            modelTelegramHandle \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"        } else if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"            modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"        if (email.equals(\"\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"jedkohjk"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"jedkohjk"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"jedkohjk"},"content":"        if (address.equals(\"\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"jedkohjk"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"jedkohjk"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"jedkohjk"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        return new Person(modelName, modelPhone, modelTelegramHandle, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jedkohjk":43,"-":96,"wui-hong":19}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonAdaptedPortion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.ParserUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":" * Jackson-friendly version of {@link Portion}.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"public class JsonAdaptedPortion {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Portion\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    private final String personName;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    private final String weight;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"     * Constructs a {@code JsonAdaptedPortion} with the given portion details.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public JsonAdaptedPortion(@JsonProperty(\"personName\") String personName, @JsonProperty(\"weight\") String weight) {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"     * Converts a given {@code Portion} into this class for Jackson use.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"    public JsonAdaptedPortion(Portion source) {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        personName \u003d source.getPersonName().fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        weight \u003d source.getWeight().value.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"     * Converts this Jackson-friendly adapted portion object into the model\u0027s {@code Portion} object.","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted portion.","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    public Portion toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        if (personName \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        if (!Name.isValidName(personName)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        final Name modelName \u003d new Name(personName);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"        if (weight \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        final Weight modelWeight;","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"            modelWeight \u003d ParserUtil.parseWeight(weight);","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        return new Portion(modelName, modelWeight);","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":8,"nathanielcalimag":42,"ncduy0303":11,"wui-hong":5}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"wui-hong":3}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonAdaptedTransaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.ParserUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":" * Jackson-friendly version of {@link Transaction}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"public class JsonAdaptedTransaction {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Transaction\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"    private final String amount;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    private final String description;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    private final String payeeName;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    private final List\u003cJsonAdaptedPortion\u003e portions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    private final String timestamp;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"     * Constructs a {@code JsonAdaptedTransaction} with the given transaction details.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    public JsonAdaptedTransaction(@JsonProperty(\"amount\") String amount,","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"                                  @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"                                  @JsonProperty(\"payeeName\") String payeeName,","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"                                  @JsonProperty(\"portions\") List\u003cJsonAdaptedPortion\u003e portions,","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"                                  @JsonProperty(\"timestamp\") String timestamp) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        this.payeeName \u003d payeeName;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        if (portions !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"            this.portions.addAll(portions);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"     * Converts a given {@code Transaction} into this class for Jackson use.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    public JsonAdaptedTransaction(Transaction source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"        amount \u003d source.getAmount().amount.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        payeeName \u003d source.getPayeeName().fullName;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        portions.addAll(source.getPortions().stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"                .map(JsonAdaptedPortion::new)","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        timestamp \u003d source.getTimestamp().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"     * Converts this Jackson-friendly adapted transaction object into the model\u0027s {@code Transaction} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"    public Transaction toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"        final List\u003cPortion\u003e transactionPortions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"        for (JsonAdaptedPortion portion: portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"            transactionPortions.add(portion.toModelType());","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"        if (amount \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Amount.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"nathanielcalimag"},"content":"        if (!Amount.isValidAmount(amount)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        final Amount modelAmount;","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"            modelAmount \u003d ParserUtil.parseAmount(amount);","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"nathanielcalimag"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"        if (payeeName \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"nathanielcalimag"},"content":"        if (!Name.isValidName(payeeName)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"nathanielcalimag"},"content":"        final Name modelPayeeName \u003d new Name(payeeName);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"nathanielcalimag"},"content":"        if (timestamp \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Timestamp.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"nathanielcalimag"},"content":"        if (!Timestamp.isValidTimestamp(timestamp)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"nathanielcalimag"},"content":"            throw new IllegalValueException(Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"nathanielcalimag"},"content":"        final Timestamp modelTimestamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"ncduy0303"},"content":"        final Set\u003cPortion\u003e modelPortions \u003d new HashSet\u003c\u003e(transactionPortions);","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ncduy0303"},"content":"        return new Transaction(modelAmount, modelDescription, modelPayeeName, modelPortions, modelTimestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":8,"nathanielcalimag":98,"ncduy0303":11,"wui-hong":8}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonSerializableSpendNSplitBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":" * An Immutable SpendNSplitBook that is serializable to JSON format.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"@JsonRootName(value \u003d \"spendnsplitbook\")","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"class JsonSerializableSpendNSplitBook {","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"Persons list contains duplicate transaction(s).\";","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_INVALID_TRANSACTION \u003d \"Invalid transaction!\";","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    private final List\u003cJsonAdaptedTransaction\u003e transactions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"     * Constructs a {@code JsonSerializableSpendNSplitBook} with the given persons.","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    public JsonSerializableSpendNSplitBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"                                           @JsonProperty(\"transactions\") List\u003cJsonAdaptedTransaction\u003e transactions) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"        this.transactions.addAll(transactions);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"     * Converts a given {@code ReadOnlySpendNSplitBook} into this class for Jackson use.","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSpendNSplitBook}.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    public JsonSerializableSpendNSplitBook(ReadOnlySpendNSplitBook source) {","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        transactions.addAll(source.getTransactionList().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"                .map(JsonAdaptedTransaction::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"     * Converts this spendNSplit book into the model\u0027s {@code SpendNSplitBook} object.","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplit toModelType() throws IllegalValueException {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit spendNSplit \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"            if (spendNSplit.hasPerson(person)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"            spendNSplit.addPerson(person);","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        for (JsonAdaptedTransaction jsonAdaptedTransaction : transactions) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"            Transaction transaction \u003d jsonAdaptedTransaction.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"            if (!transaction.isValid(spendNSplit.getAllNames())) {","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"                throw new IllegalValueException(MESSAGE_INVALID_TRANSACTION);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"            if (spendNSplit.hasTransaction(transaction)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"            spendNSplit.addTransaction(transaction);","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jedkohjk":5,"nathanielcalimag":9,"-":41,"wui-hong":23}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonSpendNSplitBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.FileUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.JsonUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":" * A class to access SpendNSplitBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"public class JsonSpendNSplitBookStorage implements SpendNSplitBookStorage {","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSpendNSplitBookStorage.class);","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    private Path filePath;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    public JsonSpendNSplitBookStorage(Path filePath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        return filePath;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"    public Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook() throws DataLoadingException {","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        return readSpendNSplitBook(filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"     * Similar to {@link #readSpendNSplitBook()}.","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    public Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        Optional\u003cJsonSerializableSpendNSplitBook\u003e jsonSpendNSplitBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"                filePath, JsonSerializableSpendNSplitBook.class);","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        if (!jsonSpendNSplitBook.isPresent()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"            return Optional.empty();","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"            return Optional.of(jsonSpendNSplitBook.get().toModelType());","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"    public void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook) throws IOException {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"        saveSpendNSplitBook(spendNSplitBook, filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"     * Similar to {@link #saveSpendNSplitBook(ReadOnlySpendNSplitBook)}.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"    public void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook, Path filePath) throws IOException {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(spendNSplitBook);","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSpendNSplitBook(spendNSplitBook), filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":79}},{"path":"src/main/java/seedu/spendnsplit/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_DUPLICATE_ALIAS;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import java.util.Map;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.JsonUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_SHORTHAND_IS_COMMAND \u003d \"Existing commands cannot be shorthands!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"    public static final String MESSAGE_EMPTY_FIELD \u003d \"Command or alias cannot be empty!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUserPrefsStorage.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        Optional\u003cUserPrefs\u003e readValue \u003d JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        if (!readValue.isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"            return readValue;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        if (readValue.orElse(new UserPrefs()).getSpendNSplitBookFilePath() \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"            readValue.orElse(new UserPrefs()).setSpendNSplitBookFilePath(Paths","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"                    .get(\"data\" , \"spendnsplitbook.json\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        if (readValue.orElse(new UserPrefs()).getCommandMap() \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"            readValue.orElse(new UserPrefs()).resetCommandMap();","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        Map\u003cString, String\u003e aliasMap \u003d readValue.orElse(new UserPrefs()).getCommandMap().getMap();","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        if (aliasMap \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"            readValue.orElse(new UserPrefs()).resetCommandMap();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"            return readValue;","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cString\u003e keySet \u003d aliasMap.keySet().stream().collect(Collectors.toSet());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        for (String key : keySet) {","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"            if (key \u003d\u003d null || key.isEmpty() || aliasMap.get(key) \u003d\u003d null || aliasMap.get(key).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"                logger.warning(MESSAGE_EMPTY_FIELD);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"                aliasMap.remove(key);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        if (aliasMap.keySet().stream().anyMatch(CommandAliasMap.FULL_COMMANDS::contains)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"            logger.warning(String.format(MESSAGE_SHORTHAND_IS_COMMAND));","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"            for (String command : CommandAliasMap.FULL_COMMANDS) {","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"                aliasMap.remove(command);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        if (!CommandAliasMap.FULL_COMMANDS.containsAll(aliasMap.values())) {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"            logger.warning(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"            keySet \u003d aliasMap.keySet().stream().collect(Collectors.toSet());","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"            for (String key : keySet) {","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"                if (!CommandAliasMap.FULL_COMMANDS.contains(aliasMap.get(key))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"                    aliasMap.remove(key);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cString\u003e valueSet \u003d aliasMap.values().stream().collect(Collectors.toSet());","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        if (valueSet.size() !\u003d aliasMap.size()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"            throw new DataLoadingException(new Exception(MESSAGE_DUPLICATE_ALIAS));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"        return readValue;","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jedkohjk":51,"-":42,"wui-hong":12}},{"path":"src/main/java/seedu/spendnsplit/storage/SpendNSplitBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":" * Represents a storage for {@link seedu.spendnsplit.model.SpendNSplit}.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"public interface SpendNSplitBookStorage {","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    Path getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"     * Returns SpendNSplitBook data as a {@link ReadOnlySpendNSplitBook}.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook() throws DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"     * @see #getSpendNSplitBookFilePath()","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"     * Saves the given {@link ReadOnlySpendNSplitBook} to the storage.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"     * @param spendNSplitBook cannot be null.","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook) throws IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"     * @see #saveSpendNSplitBook(ReadOnlySpendNSplitBook)","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook, Path filePath) throws IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":45}},{"path":"src/main/java/seedu/spendnsplit/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":" * API of the Storage component","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"public interface Storage extends SpendNSplitBookStorage, UserPrefsStorage {","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    Path getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook() throws DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook) throws IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":32}},{"path":"src/main/java/seedu/spendnsplit/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":" * Manages storage of SpendNSplitBook data in local storage.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    private SpendNSplitBookStorage spendNSplitBookStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"     * Creates a {@code StorageManager} with the given {@code SpendNSplitBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    public StorageManager(SpendNSplitBookStorage spendNSplitBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        this.spendNSplitBookStorage \u003d spendNSplitBookStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SpendNSplitBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"    public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        return spendNSplitBookStorage.getSpendNSplitBookFilePath();","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    public Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook() throws DataLoadingException {","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        return readSpendNSplitBook(spendNSplitBookStorage.getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"    public Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"        return spendNSplitBookStorage.readSpendNSplitBook(filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"    public void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook) throws IOException {","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"        saveSpendNSplitBook(spendNSplitBook, spendNSplitBookStorage.getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"    public void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook, Path filePath) throws IOException {","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        spendNSplitBookStorage.saveSpendNSplitBook(spendNSplitBook, filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":78}},{"path":"src/main/java/seedu/spendnsplit/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":" * Represents a storage for {@link seedu.spendnsplit.model.UserPrefs}.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"     * Saves the given {@link seedu.spendnsplit.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"wui-hong":6}},{"path":"src/main/java/seedu/spendnsplit/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.CommandResult;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class CommandBox extends UiPartFocusable\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"     * Focuses on the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    public void focus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"     * Un-focuses on the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"     * Command box automatically un-focuses when another UI element is focused.","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    public void unFocus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"        // command box automatically un-focuses when another UI element is focused","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"         * @see seedu.spendnsplit.logic.Logic#execute(String)","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":79,"wui-hong":5,"jeffrey-jian":17}},{"path":"src/main/java/seedu/spendnsplit/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":" * Controller for a help page.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"public class HelpWindow extends UiPartFocusable\u003cStage\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w17-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"     * Un-focuses on the help window.","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"     * Help window automatically un-focuses when another UI element is focused.","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"    public void unFocus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"        // help window automatically un-focuses when another UI element is focused","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nathanielcalimag":1,"-":97,"wui-hong":2,"jeffrey-jian":10}},{"path":"src/main/java/seedu/spendnsplit/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import java.awt.GraphicsEnvironment;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import java.awt.Rectangle;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.CommandResult;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    private UiPartFocusable\u003c?\u003e focusedUiPart;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    private TransactionListPanel transactionListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    private StackPane transactionListPanelPlaceholder;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        setWindowDefaultSize();","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"    private void setKeyNavigation(UiPartFocusable\u003c?\u003e uiPartFocusable, KeyCombination keyCombination) {","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"            if (keyCombination.match(event)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"                if (focusedUiPart !\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"                    focusedUiPart.unFocus();","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"                uiPartFocusable.focus();","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"                focusedUiPart \u003d uiPartFocusable;","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"                event.consume();","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"jedkohjk"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.getFullTransactionList());","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"        transactionListPanel \u003d new TransactionListPanel(logic.getFilteredTransactionList());","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"        transactionListPanelPlaceholder.getChildren().add(transactionListPanel.getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"     * Sets up the key navigation for the UI.","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"    void setKeyNavigations() {","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"nathanielcalimag"},"content":"        setKeyNavigation(personListPanel, KeyCombination.keyCombination(\"Alt+LEFT\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"nathanielcalimag"},"content":"        setKeyNavigation(transactionListPanel, KeyCombination.keyCombination(\"Alt+RIGHT\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"nathanielcalimag"},"content":"        setKeyNavigation(resultDisplay, KeyCombination.keyCombination(\"Alt+UP\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"nathanielcalimag"},"content":"        setKeyNavigation(commandBox, KeyCombination.keyCombination(\"Alt+DOWN\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"jedkohjk"},"content":"     * Sets the default size based on the screen size.","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"jedkohjk"},"content":"    private void setWindowDefaultSize() {","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"        Rectangle screenSize \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"jedkohjk"},"content":"                GraphicsEnvironment.getLocalGraphicsEnvironment().getMaximumWindowBounds();","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"jedkohjk"},"content":"        primaryStage.setHeight(screenSize.getHeight());","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"        primaryStage.setWidth(screenSize.getWidth());","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"        primaryStage.setMinHeight(screenSize.getHeight() * 0.9);","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"jedkohjk"},"content":"        primaryStage.setMinWidth(screenSize.getWidth() * 0.9);","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"jedkohjk"},"content":"        primaryStage.setX(0);","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"jedkohjk"},"content":"        primaryStage.setY(0);","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"jedkohjk"},"content":"    public TransactionListPanel getTransactionListPanel() {","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"jedkohjk"},"content":"        return transactionListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"wui-hong"},"content":"     * @see seedu.spendnsplit.logic.Logic#execute(String)","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jedkohjk":23,"nathanielcalimag":4,"-":176,"wui-hong":7,"jeffrey-jian":17}},{"path":"src/main/java/seedu/spendnsplit/ui/NameLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":" * Util class that adds a name to a label, with consideration for special names.","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"public class NameLabel {","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String SELF_LABEL \u003d \"You\";","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"     * Sets the Name {@code name} to the Label {@code l}.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    public static void setNameLabel(Label l, Name name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"        if (name.equals(Name.SELF)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"            l.setStyle(\"-fx-font-family: \\\"Poppins Medium\\\"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"            l.setText(NameLabel.SELF_LABEL);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"        } else if (name.equals(Name.OTHERS)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"            l.setStyle(\"-fx-font-family: \\\"Poppins Italic\\\"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"            l.setText(Name.OTHERS.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"            l.setStyle(\"-fx-font-family: \\\"Poppins Regular\\\"\");","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"            l.setText(name.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jedkohjk":19,"nathanielcalimag":6,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    private HBox personCardPane;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    private Label balance;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    private Label telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"    @FXML","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"    public PersonCard(Person person, BigFraction balanceValue, int displayedIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        String balanceString \u003d FractionUtil.toString(balanceValue, 2);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        if (balanceValue.signum() \u003e 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"            balanceString \u003d \"+\" + balanceString;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        balance.setText(\"Balance: \" + balanceString);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        if (person.getPhone() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"            hideLabel(phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        if (person.getTelegramHandle() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"            hideLabel(telegramHandle);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"            telegramHandle.setText(person.getTelegramHandle().value);","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        if (person.getAddress() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"            hideLabel(address);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        if (person.getEmail() \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"            hideLabel(email);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"    private void hideLabel(Label label) {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        label.setVisible(false);","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        label.setMinSize(0, 0);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        label.setPrefSize(0, 0);","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        label.setMaxSize(0, 0);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jedkohjk":33,"-":55,"wui-hong":6}},{"path":"src/main/java/seedu/spendnsplit/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.UniqueTransactionList;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"public class PersonListPanel extends UiPartFocusable\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ObservableList\u003cTransaction\u003e transactionList) {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell(transactionList));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"     * Focuses on the person list.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    public void focus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        if (!personListView.getItems().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"            personListView.requestFocus();","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"            personListView.getSelectionModel().select(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"     * Un-focuses on the person list.","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"     * This is done by clearing the selection in the list view.","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    public void unFocus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"        personListView.getSelectionModel().clearSelection();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        private ObservableList\u003cTransaction\u003e transactions;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        PersonListViewCell(ObservableList\u003cTransaction\u003e transactions) {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"            this.transactions \u003d transactions;","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                setGraphic(new PersonCard(person,","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"                        UniqueTransactionList.getBalance(person.getName(), transactions), getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jedkohjk":11,"-":42,"wui-hong":5,"jeffrey-jian":19}},{"path":"src/main/java/seedu/spendnsplit/ui/PortionListView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":" * A UI component that displays information of a {@code Portion}.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"public class PortionListView extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    private static final String FXML \u003d \"PortionListView.fxml\";","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    public final Name name;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    private HBox portionListView;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"    private Label payer;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    private Label amount;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    private Label change;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"     * Creates a {@code TransactionCode} with the given {@code Transaction} and index to display.","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"    public PortionListView(Name name, String subtotal, String change, int displayedIndex) {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        NameLabel.setNameLabel(payer, name);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        amount.setText(subtotal);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        this.change.setText(change);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":39,"ncduy0303":5,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"public class ResultDisplay extends UiPartFocusable\u003cRegion\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"     * Focuses on the result display.","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    public void focus() {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        resultDisplay.requestFocus();","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"     * Un-focuses on the result display.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"     * Command box automatically un-focuses when another UI element is focused.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    public void unFocus() {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        // result display automatically un-focuses when another UI element is focused","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nathanielcalimag":14,"-":26,"wui-hong":1,"jeffrey-jian":1}},{"path":"src/main/java/seedu/spendnsplit/ui/TransactionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":" * An UI component that displays information of a {@code Transaction}.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"public class TransactionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    private static final String FXML \u003d \"TransactionListCard.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"    private static final int ROW_HEIGHT \u003d 20;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    public final Transaction transaction;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    private HBox transactionCardPane;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    private Label description;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    private Label id;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"    private Label date;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"    private Label payee;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    private Label amount;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"    private Label change;","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"    private ListView\u003cName\u003e portionListView;","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"     * Creates a {@code TransactionCode} with the given {@code Transaction} and index to display.","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    public TransactionCard(Transaction transaction, int displayedIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        this.transaction \u003d transaction;","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        Map\u003cName, BigFraction\u003e subtotals \u003d transaction.getAllPortionAmounts();","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        ObservableList\u003cName\u003e lst \u003d new SortedList\u003c\u003e(FXCollections.observableArrayList(","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"            subtotals.keySet()), (name1, name2) -\u003e name1.compareTo(name2));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        description.setText(transaction.getDescription().toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        date.setText(transaction.getTimestamp().toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        NameLabel.setNameLabel(payee, transaction.getPayeeName());","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        amount.setText(transaction.getAmount().toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        portionListView.setItems(lst);","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        if (transaction.getPayeeName().equals(Name.SELF)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            change.setText(\"-\");","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"            portionListView.setCellFactory(listView -\u003e new PortionListViewCell(subtotals, true));","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"            change.setText(\"-\" + FractionUtil.toString(subtotals.get(Name.SELF), 2));","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"            portionListView.setCellFactory(listView -\u003e new PortionListViewCell(subtotals, false));","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"        portionListView.prefHeightProperty().bind(Bindings.size(lst).multiply(ROW_HEIGHT));","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Portion} using a {@code PortionListView}.","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"    class PortionListViewCell extends ListCell\u003cName\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        private Map\u003cName, BigFraction\u003e map;","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        private boolean isCredit;","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        PortionListViewCell(Map\u003cName, BigFraction\u003e map, boolean isCredit) {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"            this.map \u003d map;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"            this.isCredit \u003d isCredit;","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        protected void updateItem(Name name, boolean empty) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"            super.updateItem(name, empty);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"            if (empty || name \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"                setText(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"                String subtotal \u003d FractionUtil.toString(map.get(name), 2);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"                String change \u003d \"-\";","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"                if (isCredit \u0026\u0026 !Name.RESERVED_NAMES.contains(name)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"                    change \u003d \"+\" + subtotal;","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"                setGraphic(new PortionListView(name, subtotal, change, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":95,"ncduy0303":10,"wui-hong":4}},{"path":"src/main/java/seedu/spendnsplit/ui/TransactionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":" * Panel containing the list of transactions.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"public class TransactionListPanel extends UiPartFocusable\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    private static final String FXML \u003d \"TransactionListPanel.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TransactionListPanel.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    private ListView\u003cTransaction\u003e transactionListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"     * Creates a {@code TransactionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    public TransactionListPanel(ObservableList\u003cTransaction\u003e transactionList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        transactionListView.setItems(transactionList);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        transactionListView.setCellFactory(listView -\u003e new TransactionListViewCell());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     * Focuses on the transaction list.","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"    public void focus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"        if (!transactionListView.getItems().isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"            transactionListView.requestFocus();","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"            transactionListView.getSelectionModel().select(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"     * Un-focuses on the transaction list.","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"     * This is done by clearing the selection in the list view.","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    public void unFocus() {","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"        transactionListView.getSelectionModel().clearSelection();","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Transaction} using a {@code TransactionCard}.","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    class TransactionListViewCell extends ListCell\u003cTransaction\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        protected void updateItem(Transaction transaction, boolean empty) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"            super.updateItem(transaction, empty);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"            if (empty || transaction \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"                setText(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"                setGraphic(new TransactionCard(transaction, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":45,"wui-hong":3,"jeffrey-jian":19}},{"path":"src/main/java/seedu/spendnsplit/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"wui-hong":1}},{"path":"src/main/java/seedu/spendnsplit/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.MainApp;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.LogsCenter;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.StringUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/spend_n_split.png\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"            mainWindow.setKeyNavigations();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"                primaryStage.setIconified(false);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"                primaryStage.setMaximized(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            });","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jedkohjk":5,"nathanielcalimag":1,"-":80,"wui-hong":5,"jeffrey-jian":1}},{"path":"src/main/java/seedu/spendnsplit/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.MainApp;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"wui-hong":2}},{"path":"src/main/java/seedu/spendnsplit/ui/UiPartFocusable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import java.net.URL;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":" * Represents a UiPart that can be focused on.","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"public abstract class UiPartFocusable\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fxmlFileUrl","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    public UiPartFocusable(URL fxmlFileUrl) {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"        super(fxmlFileUrl);","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fxmlFileName","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"     * @see #UiPartFocusable(URL)","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    public UiPartFocusable(String fxmlFileName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"        super(fxmlFileName);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fxmlFileUrl","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"     * @param root","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"    public UiPartFocusable(URL fxmlFileUrl, T root) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        super(fxmlFileUrl, root);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"     * @param fxmlFileName","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"     * @param root","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"     * @see #UiPartFocusable(URL, T)","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    public UiPartFocusable(String fxmlFileName, T root) {","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"        super(fxmlFileName, root);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"     * Focuses on the root node of UiPartFocusable.","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    public abstract void focus();","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"     * Un-focuses on the root node of UiPartFocusable.","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"    public abstract void unFocus();","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"wui-hong":1,"jeffrey-jian":60}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"    \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"nathanielcalimag":4,"-":9}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"    -fx-background: transparent;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":1,"-":19}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Light\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-Light.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Regular\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-Regular.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Medium\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-Medium.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins SemiBold\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-SemiBold.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Bold\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-Bold.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Italic Light\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-LightItalic.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Italic Regular\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-Italic.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Italic Medium\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-MediumItalic.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Italic SemiBold\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-SemiBoldItalic.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"@font-face {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"  font-family: \u0027Poppins Italic Bold\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"  src: url(\u0027../fonts/Poppins/static/Poppins-BoldItalic.ttf\u0027);","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"    background-color: #f8fafc; /* Used in the default.html file */","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":".main-container {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"    -fx-text-fill: transparent;","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #cbd5e1;","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-base: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-control-inner-background: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color:#cbd5e1;","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"jedkohjk"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":146,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"#doublePanel .list-cell:filled:even {","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f1f5f9;","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"jedkohjk"},"content":"#doublePanel .list-cell:filled:odd {","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #e2e8f0;","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"jedkohjk"},"content":"#doublePanel .list-cell:filled:selected {","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #dbeafe;","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"jedkohjk"},"content":".list-cell:filled:selected #personCardPane {","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"jedkohjk"},"content":"    -fx-border-color: #2563eb;","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"jedkohjk"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":".list-cell:filled:selected #transactionCardPane {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-color: #2563eb;","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"ncduy0303"},"content":"#portionListView .list-cell:filled:even {","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #eff6ff;","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"ncduy0303"},"content":"#portionListView .list-cell:filled:odd {","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #e0f2fe;","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"ncduy0303"},"content":"#portionListView .list-cell:filled:selected {","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #93c5fd;","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":206,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"jedkohjk"},"content":".cell_medium_label {","lastModifiedDate":"2023-10-14"},{"lineNumber":208,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins SemiBold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"jedkohjk"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-14"},{"lineNumber":210,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Regular\";","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":217,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"jedkohjk"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-10-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":222,"author":{"gitId":"nathanielcalimag"},"content":"     -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":226,"author":{"gitId":"nathanielcalimag"},"content":"     -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"nathanielcalimag"},"content":"     -fx-border-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":231,"author":{"gitId":"jedkohjk"},"content":".main-pane {","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"jedkohjk"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":239,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":241,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":245,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617 !important;","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":262,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #cbd5e1;","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-color: #e2e8f0;","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #e2e8f0;","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Regular\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #94a3b8;","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-color: #f8fafc, #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #cbd5e1;","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #e2e8f0;","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-fill: #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":359,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #e2e8f0;","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":367,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #cbd5e1;","lastModifiedDate":"2023-10-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":388,"author":{"gitId":"jedkohjk"},"content":"#personCardPane {","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"jedkohjk"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"jedkohjk"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"jedkohjk"},"content":"#transactionCardPane {","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":398,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #b91c1c;","lastModifiedDate":"2023-10-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":404,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc #f8fafc #f8fafc #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":406,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-color: #020617 #020617 #020617 #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":407,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":408,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":411,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-font-family: \"Poppins Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":413,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":416,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":417,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-effect: innershadow(gaussian, #020617, 10, 0, 0, 0);","lastModifiedDate":"2023-10-18"},{"lineNumber":418,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":419,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":420,"author":{"gitId":"nathanielcalimag"},"content":"#placeHolder {","lastModifiedDate":"2023-10-18"},{"lineNumber":421,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":422,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-border-color: #020617 #020617 #020617 #020617;","lastModifiedDate":"2023-10-18"},{"lineNumber":423,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-border-radius: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":424,"author":{"gitId":"nathanielcalimag"},"content":"  -fx-background-radius: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":428,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #f8fafc, #f8fafc, #f8fafc, #f8fafc;","lastModifiedDate":"2023-10-18"},{"lineNumber":429,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-radius: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":431,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":433,"author":{"gitId":"nathanielcalimag"},"content":"#resultDisplay:focused {","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #3b82f6, #3b82f6, #3b82f6, #3b82f6;","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":437,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":440,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":442,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":443,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-text-fill: #eff6ff;","lastModifiedDate":"2023-10-18"},{"lineNumber":444,"author":{"gitId":"nathanielcalimag"},"content":"    -fx-background-color: #3b82f6;","lastModifiedDate":"2023-10-18"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":449,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jedkohjk":39,"nathanielcalimag":150,"ncduy0303":3,"-":257}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"         title\u003d\"Spend n Split\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    \u003cImage url\u003d\"@/images/spend_n_split.png\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"      \u003cVBox styleClass\u003d\"main-container\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        \u003cHBox fx:id\u003d\"doublePanel\" spacing\u003d\"10\" alignment\u003d\"CENTER\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"main-pane\" minWidth\u003d\"170\" prefWidth\u003d\"170\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"0\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"              \u003cLabel fx:id\u003d\"personListLabel\" alignment\u003d\"CENTER\" prefWidth\u003d\"Infinity\" text\u003d\"Persons\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"label-header\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"            \u003cVBox fx:id\u003d\"transactionList\" styleClass\u003d\"main-pane\" minWidth\u003d\"170\" prefWidth\u003d\"170\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"              \u003cLabel fx:id\u003d\"transactionListLabel\" alignment\u003d\"CENTER\" prefWidth\u003d\"Infinity\" text\u003d\"Transactions\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"label-header\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"              \u003cStackPane fx:id\u003d\"transactionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"main-pane\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"            \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jedkohjk":22,"nathanielcalimag":4,"-":48}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"\u003cHBox id\u003d\"personCardPane\" fx:id\u003d\"personCardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"      \u003cLabel fx:id\u003d\"balance\" styleClass\u003d\"cell_medium_label\" text\u003d\"\\$balance\" /\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"      \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jedkohjk":3,"-":34,"wui-hong":1}},{"path":"src/main/resources/view/PortionListView.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jedkohjk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"\u003cHBox id\u003d\"portionListView\" fx:id\u003d\"portionListView\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"5\" HBox.hgrow\u003d\"ALWAYS\" prefHeight\u003d\"20\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"      \u003cLabel fx:id\u003d\"payer\" prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$payer\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"    \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"      \u003cLabel fx:id\u003d\"amount\" prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$amount\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"    \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"      \u003cLabel fx:id\u003d\"change\" prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$change\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":33}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" wrapText\u003d\"true\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"nathanielcalimag":1,"-":8}},{"path":"src/main/resources/view/TransactionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jedkohjk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"\u003cHBox id\u003d\"transactionCardPane\" fx:id\u003d\"transactionCardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$date\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"      \u003cHBox spacing\u003d\"5\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_medium_label\" text\u003d\"Payee\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_medium_label\" text\u003d\"Total\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_medium_label\" text\u003d\"Net change\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"      \u003cHBox spacing\u003d\"5\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel fx:id\u003d\"payee\" prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$payee\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel fx:id\u003d\"amount\" prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$amount\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel fx:id\u003d\"change\" prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$change\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"      \u003cHBox spacing\u003d\"5\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"0\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_medium_label\" text\u003d\"Payer\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_medium_label\" text\u003d\"Subtotal\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"          \u003cVBox HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"55\" prefWidth\u003d\"60\" alignment\u003d\"CENTER_RIGHT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"                \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"            \u003cLabel prefWidth\u003d\"Infinity\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"cell_medium_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"      \u003cListView fx:id\u003d\"portionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":102,"ncduy0303":1}},{"path":"src/main/resources/view/TransactionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jedkohjk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"  \u003cListView fx:id\u003d\"transactionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":8}},{"path":"src/test/java/seedu/spendnsplit/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":88,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.core.index;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":65,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"        assertNotNull(AppUtil.getImage(\"/images/spend_n_split.png\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jedkohjk":1,"-":33,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"    public void requireNonEmptyCollection() {","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"        // null reference","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"        assertNullPointerExceptionThrown((Collection\u003c?\u003e) null);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"        // empty list","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionThrown(Collections.emptyList());","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionThrown(Arrays.asList());","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"        // empty set","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionThrown(Collections.emptySet());","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionThrown(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"        // non-empty list","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionNotThrown(Arrays.asList(new Object(), new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"        // non-empty set","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionNotThrown(Collections.singleton(new Object()));","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"        assertIllegalArgumentExceptionNotThrown(new HashSet\u003c\u003e(Arrays.asList(new Object(), new Object())));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"    private void assertIllegalArgumentExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e CollectionUtil.requireNonEmptyCollection(collection));","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"    private void assertIllegalArgumentExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"        CollectionUtil.requireNonEmptyCollection(collection);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"wui-hong":3,"jeffrey-jian":29}},{"path":"src/test/java/seedu/spendnsplit/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.Config;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    public void read_nullPath_successfullyRead() {","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        assertDoesNotThrow(() -\u003e read(\"NullPathConfig.json\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jedkohjk":6,"-":112,"wui-hong":4}},{"path":"src/test/java/seedu/spendnsplit/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/commons/util/FractionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"public class FractionUtilTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"    public void parseFraction() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"0.00\", FractionUtil.toString(FractionUtil.parseFraction(\"0\"), 2));","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"0.00\", FractionUtil.toString(FractionUtil.parseFraction(\".\"), 2));","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"0.50\", FractionUtil.toString(FractionUtil.parseFraction(\"1.0/2\"), 2));","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"0.25\", FractionUtil.toString(FractionUtil.parseFraction(\"0.25\"), 2));","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"0.3\", FractionUtil.toString(FractionUtil.parseFraction(\"0.25\"), 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    public void compare() throws Exception {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"1\"), FractionUtil.parseFraction(\"1\")) \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"1\"), FractionUtil.parseFraction(\"2\")) \u003c 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"2\"), FractionUtil.parseFraction(\"1\")) \u003e 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"-1\"), FractionUtil.parseFraction(\"-1\")) \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"-1\"), FractionUtil.parseFraction(\"-2\")) \u003e 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"-2\"), FractionUtil.parseFraction(\"-1\")) \u003c 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"0\"), FractionUtil.parseFraction(\"0\")) \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"0\"), FractionUtil.parseFraction(\"1\")) \u003c 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"1\"), FractionUtil.parseFraction(\"0\")) \u003e 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"0\"), FractionUtil.parseFraction(\"-1\")) \u003e 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"-1\"), FractionUtil.parseFraction(\"0\")) \u003c 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"1\"), FractionUtil.parseFraction(\"-1\")) \u003e 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(FractionUtil.compare(FractionUtil.parseFraction(\"-1\"), FractionUtil.parseFraction(\"1\")) \u003c 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    public void sum_halfQuarter_threeQuarters() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"0.75\", FractionUtil.toString(FractionUtil","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"                .sum(List.of(FractionUtil.parseFraction(\"0.25\"), FractionUtil.parseFraction(\"0.5\"))), 2));","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":42,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.SerializableTestClass;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TestUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"wui-hong":3}},{"path":"src/test/java/seedu/spendnsplit/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.commons.util;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"jedkohjk"},"content":"    public void trimRegExpTest() {","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"\", StringUtil.trimRegExp(\"\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"\", StringUtil.trimRegExp(\"^\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"\", StringUtil.trimRegExp(\"$\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"\", StringUtil.trimRegExp(\"^$\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\" \", StringUtil.trimRegExp(\"^ $\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\"\\\\$\", StringUtil.trimRegExp(\"^\\\\$\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(\" \\\\\\\\\", StringUtil.trimRegExp(\" \\\\\\\\$\"));","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jedkohjk":12,"-":141,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.CommandResult;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.JsonSpendNSplitBookStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.storage.StorageManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        JsonSpendNSplitBookStorage spendNSplitBookStorage \u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"                new JsonSpendNSplitBookStorage(temporaryFolder.resolve(\"spendnsplitbook.json\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        StorageManager storage \u003d new StorageManager(spendNSplitBookStorage, userPrefsStorage);","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        String deleteCommand \u003d \"deletePerson 9\";","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        String listCommand \u003d ListPersonCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(listCommand, expectedMessage, model);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"    public void getFilteredTransactionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTransactionList().remove(0));","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"        // Inject LogicManager with an SpendNSplitBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"        JsonSpendNSplitBookStorage spendNSplitBookStorage \u003d new JsonSpendNSplitBookStorage(prefPath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"            public void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook, Path filePath)","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"        StorageManager storage \u003d new StorageManager(spendNSplitBookStorage, userPrefsStorage);","lastModifiedDate":"2023-11-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"wui-hong"},"content":"        // Triggers the saveSpendNSplitBook method by executing an add command","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"jedkohjk"},"content":"        String addPersonCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"wui-hong"},"content":"                + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(addPersonCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jedkohjk":9,"ncduy0303":2,"-":137,"wui-hong":35}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"        Person personInList \u003d model.getSpendNSplitBook().getPersonList().get(0);","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model,","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jedkohjk":6,"-":29,"wui-hong":13}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d AddPersonCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(expected, addPersonCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"        public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"        public void setSpendNSplitBookFilePath(Path spendNSplitBookFilePath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ncduy0303"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"wui-hong"},"content":"        public void setSpendNSplitBook(ReadOnlySpendNSplitBook newData) {","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"        public ReadOnlySpendNSplitBook getSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ncduy0303"},"content":"        public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"ncduy0303"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"ncduy0303"},"content":"        public void deleteTransaction(Transaction target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"ncduy0303"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"ncduy0303"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"ncduy0303"},"content":"        public void setTransaction(Transaction target, Transaction editedTransaction) {","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ncduy0303"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"nathanielcalimag"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"nathanielcalimag"},"content":"        public BigFraction getBalance(Name name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"nathanielcalimag"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"jedkohjk"},"content":"        public BigFraction getBalance(Name name, Timestamp time) {","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"jedkohjk"},"content":"        public ObservableList\u003cTransaction\u003e getFullTransactionList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"ncduy0303"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"ncduy0303"},"content":"        public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"ncduy0303"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":191,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"ncduy0303"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"ncduy0303"},"content":"        public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"ncduy0303"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"jedkohjk"},"content":"        public Set\u003cName\u003e getAllNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":208,"author":{"gitId":"jedkohjk"},"content":"        public CommandAliasMap getCommandMap() {","lastModifiedDate":"2023-10-22"},{"lineNumber":209,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":210,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":211,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":212,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"jedkohjk"},"content":"        public void sortPersonDescending() {","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"jedkohjk"},"content":"        public String setCommandAlias(String command, String alias) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":219,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":220,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":221,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"jedkohjk"},"content":"        public void sortPersonAscending() {","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"wui-hong"},"content":"        public ReadOnlySpendNSplitBook getSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":266,"author":{"gitId":"wui-hong"},"content":"            return new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jedkohjk":49,"nathanielcalimag":6,"ncduy0303":22,"-":171,"wui-hong":22}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/AddTransactionCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TypicalPersons;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TypicalPortions;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"public class AddTransactionCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    public void execute_newTransaction_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        Transaction validTransaction \u003d new TransactionBuilder().withPayeeName(Name.SELF.fullName)","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"            .withPortions(Set.of(ALICE_PORTION)).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        expectedModel.addTransaction(validTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        assertCommandSuccess(new AddTransactionCommand(validTransaction), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"                String.format(AddTransactionCommand.MESSAGE_SUCCESS, Messages.format(validTransaction)),","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"    public void execute_irrelevantTransaction_throwsCommandException() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        Transaction irrelevantTransaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(TypicalPersons.ALICE.getName().fullName)","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"            .withPortions(Set.of(TypicalPortions.ALICE_PORTION))","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(new AddTransactionCommand(irrelevantTransaction), model,","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"            AddTransactionCommand.MESSAGE_TRANSACTION_NOT_RELEVANT);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"    public void execute_unknownTransaction_throwsCommandException() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        Transaction unknownTransaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(\"Unknown\")","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"            .withPortions(Set.of(TypicalPortions.SELF_PORTION))","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(new AddTransactionCommand(unknownTransaction), model,","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"            AddTransactionCommand.MESSAGE_UNKNOWN_PARTY);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"    public void execute_duplicateTransaction_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"        Transaction transactionInList \u003d model.getSpendNSplitBook().getTransactionList().get(0);","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(new AddTransactionCommand(transactionInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"            AddTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jedkohjk":34,"ncduy0303":21,"wui-hong":17}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/AddTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalTransactions.LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.CommandAliasMap;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TypicalPersons;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TypicalPortions;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"public class AddTransactionCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    public void constructor_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTransactionCommand(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    public void execute_transactionAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"        ModelStubAcceptingTransactionAdded modelStub \u003d new ModelStubAcceptingTransactionAdded();","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"        Transaction validTransaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"        CommandResult commandResult \u003d new AddTransactionCommand(validTransaction).execute(modelStub);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(String.format(AddTransactionCommand.MESSAGE_SUCCESS, Messages.format(validTransaction)),","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        assertEquals(Arrays.asList(validTransaction), modelStub.transactionsAdded);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"    public void execute_irrelevantTransaction_throwsCommandException() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        ModelStubAcceptingTransactionAdded modelStub \u003d new ModelStubAcceptingTransactionAdded();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        Transaction irrelevantTransaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"                .withPortions(Set.of(TypicalPortions.ALICE_PORTION)).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        AddTransactionCommand addTransactionCommand \u003d new AddTransactionCommand(irrelevantTransaction);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"                AddTransactionCommand.MESSAGE_TRANSACTION_NOT_RELEVANT, () -\u003e addTransactionCommand.execute(modelStub));","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"    public void execute_unknownTransaction_throwsCommandException() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        ModelStubAcceptingTransactionAdded modelStub \u003d new ModelStubAcceptingTransactionAdded();","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        Transaction irrelevantTransaction \u003d new TransactionBuilder().withPayeeName(\"Unknown\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        AddTransactionCommand addTransactionCommand \u003d new AddTransactionCommand(irrelevantTransaction);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                AddTransactionCommand.MESSAGE_UNKNOWN_PARTY, () -\u003e addTransactionCommand.execute(modelStub));","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"    public void execute_duplicateTransaction_throwsCommandException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"        Transaction validTransaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"        AddTransactionCommand addTransactionCommand \u003d new AddTransactionCommand(validTransaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"        ModelStub modelStub \u003d new ModelStubWithTransaction(validTransaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"                AddTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION, () -\u003e addTransactionCommand.execute(modelStub));","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"        Transaction alice \u003d new TransactionBuilder().withPayeeName(\"Alice\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"        Transaction bob \u003d new TransactionBuilder().withPayeeName(\"Bob\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"        AddTransactionCommand addAliceCommand \u003d new AddTransactionCommand(alice);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"        AddTransactionCommand addBobCommand \u003d new AddTransactionCommand(bob);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        AddTransactionCommand addAliceCommandCopy \u003d new AddTransactionCommand(alice);","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"        AddTransactionCommand addTransactionCommand \u003d new AddTransactionCommand(LUNCH);","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"        String expected \u003d AddTransactionCommand.class.getCanonicalName() + \"{toAdd\u003d\" + LUNCH + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expected, addTransactionCommand.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wui-hong"},"content":"        public Path getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"        public void setSpendNSplitBookFilePath(Path spendNSplitBookFilePath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"wui-hong"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"        public void setSpendNSplitBook(ReadOnlySpendNSplitBook newData) {","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"wui-hong"},"content":"        public ReadOnlySpendNSplitBook getSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"wui-hong"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"        public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"wui-hong"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"wui-hong"},"content":"        public void deleteTransaction(Transaction target) {","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"wui-hong"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"wui-hong"},"content":"        public void setTransaction(Transaction target, Transaction editedTransaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"wui-hong"},"content":"        public BigFraction getBalance(Name name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"        public BigFraction getBalance(Name name, Timestamp time) {","lastModifiedDate":"2023-10-29"},{"lineNumber":194,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"wui-hong"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"jedkohjk"},"content":"        public ObservableList\u003cTransaction\u003e getFullTransactionList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"wui-hong"},"content":"        public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"wui-hong"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"wui-hong"},"content":"        public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":219,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"jedkohjk"},"content":"        public Set\u003cName\u003e getAllNames() {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"jedkohjk"},"content":"            return Set.of(TypicalPersons.ALICE.getName(), new TransactionBuilder().build().getPayeeName());","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"jedkohjk"},"content":"        public CommandAliasMap getCommandMap() {","lastModifiedDate":"2023-10-22"},{"lineNumber":229,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":230,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":231,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":232,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"jedkohjk"},"content":"        public void sortPersonDescending() {","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"jedkohjk"},"content":"        public String setCommandAlias(String command, String alias) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":240,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":241,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"jedkohjk"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"jedkohjk"},"content":"        public void sortPersonAscending() {","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"jedkohjk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":247,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":248,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"wui-hong"},"content":"     * A Model stub that contains a single transaction.","lastModifiedDate":"2023-10-15"},{"lineNumber":250,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":251,"author":{"gitId":"wui-hong"},"content":"    private class ModelStubWithTransaction extends ModelStub {","lastModifiedDate":"2023-10-15"},{"lineNumber":252,"author":{"gitId":"wui-hong"},"content":"        private final Transaction transaction;","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"wui-hong"},"content":"        ModelStubWithTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"wui-hong"},"content":"            requireNonNull(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":256,"author":{"gitId":"wui-hong"},"content":"            this.transaction \u003d transaction;","lastModifiedDate":"2023-10-15"},{"lineNumber":257,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":258,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":259,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"wui-hong"},"content":"        public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"wui-hong"},"content":"            requireNonNull(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"wui-hong"},"content":"            return this.transaction.isSameTransaction(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":263,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":267,"author":{"gitId":"wui-hong"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-15"},{"lineNumber":268,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":269,"author":{"gitId":"wui-hong"},"content":"    private class ModelStubAcceptingTransactionAdded extends ModelStub {","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"wui-hong"},"content":"        final ArrayList\u003cTransaction\u003e transactionsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":271,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":272,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":273,"author":{"gitId":"wui-hong"},"content":"        public boolean hasTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"wui-hong"},"content":"            requireNonNull(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"wui-hong"},"content":"            return transactionsAdded.stream().anyMatch(transaction::isSameTransaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":277,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"wui-hong"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-15"},{"lineNumber":280,"author":{"gitId":"wui-hong"},"content":"            requireNonNull(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":281,"author":{"gitId":"wui-hong"},"content":"            transactionsAdded.add(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":282,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":283,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":284,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"wui-hong"},"content":"        public ReadOnlySpendNSplitBook getSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":286,"author":{"gitId":"wui-hong"},"content":"            return new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":287,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":288,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":289,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":52,"ncduy0303":4,"wui-hong":233}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    public void execute_emptySpendNSplitBook_success() {","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"wui-hong":5}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":62,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PersonDescriptorBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.TransactionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    public static final String VALID_TELEGRAM_HANDLE_AMY \u003d \"@amy1234\";","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"    public static final String VALID_TELEGRAM_HANDLE_BOB \u003d \"@bob1234\";","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALID_TIMESTAMP \u003d \"13/10/2023 12:34\";","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String VALID_DESCRIPTION_LUNCH \u003d \"Lunch at Tampines Mall\";","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String VALID_DESCRIPTION_DINNER \u003d \"Dinner at Clementi Mall\";","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"    public static final String VALID_COST_LUNCH \u003d \"20.00\";","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    public static final String VALID_COST_DINNER \u003d \"50.00\";","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALID_WEIGHT_ONE \u003d \"1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    public static final String VALID_WEIGHT_HALF \u003d \"0.5\";","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"    public static final String RESERVED_NAME_SELF \u003d \"Self\";","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"    public static final String RESERVED_NAME_OTHERS \u003d \"Others\";","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"    public static final String TELEGRAM_HANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"    public static final String TELEGRAM_HANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM_HANDLE + VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    public static final String DESC_TIMESTAMP \u003d \" \" + PREFIX_TIMESTAMP + VALID_TIMESTAMP;","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String DESCRIPTION_DESC_LUNCH \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_LUNCH;","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"    public static final String DESCRIPTION_DESC_DINNER \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_DINNER;","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"    public static final String COST_DESC_LUNCH \u003d \" \" + PREFIX_COST + VALID_COST_LUNCH;","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"    public static final String COST_DESC_DINNER \u003d \" \" + PREFIX_COST + VALID_COST_DINNER;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"    public static final String WEIGHT_DESC_ONE \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_ONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"    public static final String WEIGHT_DESC_HALF \u003d \" \" + PREFIX_WEIGHT + VALID_WEIGHT_HALF;","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"    public static final String INVALID_TELEGRAM_HANDLE_DESC \u003d \" \" + PREFIX_TELEGRAM_HANDLE + \"@123\"; // length too short","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"    public static final String RESERVED_NAME_DESC_SELF \u003d \" \" + PREFIX_NAME + RESERVED_NAME_SELF;","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"    public static final String RESERVED_NAME_DESC_OTHERS \u003d \" \" + PREFIX_NAME + RESERVED_NAME_OTHERS;","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"    public static final PersonDescriptor DESC_AMY;","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"    public static final PersonDescriptor DESC_BOB;","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"    public static final TransactionDescriptor DESC_LUNCH;","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"    public static final TransactionDescriptor DESC_DINNER;","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"        DESC_AMY \u003d new PersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"        DESC_BOB \u003d new PersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"    static {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"        DESC_LUNCH \u003d new TransactionDescriptorBuilder().withAmount(VALID_COST_LUNCH)","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"                .withDescription(VALID_DESCRIPTION_LUNCH).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"        DESC_DINNER \u003d new TransactionDescriptorBuilder().withAmount(VALID_COST_DINNER)","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"                .withDescription(VALID_DESCRIPTION_DINNER).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"nathanielcalimag"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"nathanielcalimag"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"nathanielcalimag"},"content":"     * - the {@code actualModel} matches {@code expectedModel} excluding transaction timestamps","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"nathanielcalimag"},"content":"    public static void assertTransactionCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"nathanielcalimag"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"nathanielcalimag"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"nathanielcalimag"},"content":"            CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"nathanielcalimag"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"nathanielcalimag"},"content":"            actualModel.getFilteredTransactionList().forEach(transaction -\u003e actualModel.setTransaction(transaction,","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"                    new TransactionBuilder(transaction).withTimestamp(VALID_TIMESTAMP).build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"nathanielcalimag"},"content":"            expectedModel.getFilteredTransactionList().forEach(transaction -\u003e expectedModel.setTransaction(transaction,","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"nathanielcalimag"},"content":"                    new TransactionBuilder(transaction).withTimestamp(VALID_TIMESTAMP).build()));","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"nathanielcalimag"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"nathanielcalimag"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"nathanielcalimag"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"nathanielcalimag"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"wui-hong"},"content":"     * - the spendNSplit book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-11-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit expectedSpendNSplit \u003d new SpendNSplit(actualModel.getSpendNSplitBook());","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":182,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expectedSpendNSplit, actualModel.getSpendNSplitBook());","lastModifiedDate":"2023-11-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":185,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":188,"author":{"gitId":"wui-hong"},"content":"     * {@code model}\u0027s spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"ncduy0303"},"content":"     * Updates {@code model}\u0027s filtered list to show only the transaction at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"wui-hong"},"content":"     * {@code model}\u0027s spendNSplit book.","lastModifiedDate":"2023-11-03"},{"lineNumber":203,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"ncduy0303"},"content":"    public static void showTransactionAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTransactionList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d model.getFilteredTransactionList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"ncduy0303"},"content":"        model.updateFilteredTransactionList(currentTransaction -\u003e currentTransaction.equals(transaction));","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(1, model.getFilteredTransactionList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jedkohjk":12,"nathanielcalimag":21,"ncduy0303":24,"-":106,"wui-hong":36,"jeffrey-jian":13}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        // ensures that outOfBoundIndex is still in bounds of the spendnsplit list","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSpendNSplitBook().getPersonList().size());","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(targetIndex);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d DeletePersonCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jedkohjk":8,"ncduy0303":10,"-":85,"wui-hong":17}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/DeleteTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"public class DeleteTransactionCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        Transaction transactionToDelete \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(DeleteTransactionCommand.MESSAGE_DELETE_TRANSACTION_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"            Messages.format(transactionToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.deleteTransaction(transactionToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        Transaction transactionToDelete \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(DeleteTransactionCommand.MESSAGE_DELETE_TRANSACTION_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"            Messages.format(transactionToDelete));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.deleteTransaction(transactionToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"        showNoTransaction(expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"        // ensures that outOfBoundIndex is still in bounds of spendNSplit book list","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSpendNSplitBook().getTransactionList().size());","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteFirstCommand \u003d new DeleteTransactionCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteSecondCommand \u003d new DeleteTransactionCommand(INDEX_SECOND_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteFirstCommandCopy \u003d new DeleteTransactionCommand(INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"        // different transaction -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand deleteCommand \u003d new DeleteTransactionCommand(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"        String expected \u003d DeleteTransactionCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"    private void showNoTransaction(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"        model.updateFilteredTransactionList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(model.getFilteredTransactionList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ncduy0303":102,"wui-hong":18}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/DuplicateTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_DINNER;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertTransactionCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.DuplicateTransactionCommand.MESSAGE_TRANSACTION_NOT_RELEVANT;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.TransactionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":" * {@code DuplicateCommand}.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"public class DuplicateTransactionCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        Transaction duplicateTransaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(originalTransaction.getPayeeName().toString())","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"            .withTimestamp(originalTransaction.getTimestamp().toString())","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"            .withPortions(originalTransaction.getPortions()).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder(duplicateTransaction).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"            DuplicateTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION_SUCCESS, Messages.format(duplicateTransaction));","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.addTransaction(duplicateTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        assertTransactionCommandSuccess(duplicateTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    public void execute_descriptionFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        Transaction firstTransaction \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        String descriptionString \u003d \"A New Dinner\";","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        TransactionBuilder transactionInList \u003d new TransactionBuilder(firstTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        Transaction duplicateTransaction \u003d transactionInList.withDescription(descriptionString).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"            .withDescription(descriptionString).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"            DuplicateTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION_SUCCESS, Messages.format(duplicateTransaction));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.addTransaction(duplicateTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"        assertTransactionCommandSuccess(duplicateTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"    public void execute_costFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"        Transaction firstTransaction \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"        String costString \u003d \"123.21\";","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"        TransactionBuilder transactionInList \u003d new TransactionBuilder(firstTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        Transaction duplicateTransaction \u003d transactionInList.withAmount(costString).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"            .withAmount(costString).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"            DuplicateTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION_SUCCESS, Messages.format(duplicateTransaction));","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.addTransaction(duplicateTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"        assertTransactionCommandSuccess(duplicateTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"    public void execute_timestampFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"        Transaction firstTransaction \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"        String timestampString \u003d \"10/10/2020 10:10\";","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"        TransactionBuilder transactionInList \u003d new TransactionBuilder(firstTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"        Transaction duplicateTransaction \u003d transactionInList.withTimestamp(timestampString).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"            .withTimestamp(timestampString).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"            DuplicateTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION_SUCCESS, Messages.format(duplicateTransaction));","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.addTransaction(duplicateTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"        assertTransactionCommandSuccess(duplicateTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"    public void execute_duplicateTransaction_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"            new TransactionDescriptor());","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d DuplicateTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(duplicateTransactionCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"ncduy0303"},"content":"    public void execute_invalidTransactionUnfilteredList_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(\"Alice\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(duplicateTransactionCommand, model, MESSAGE_TRANSACTION_NOT_RELEVANT);","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"        duplicateTransactionCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"jedkohjk"},"content":"            new DuplicateTransactionCommand(INDEX_SECOND_ELEMENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(duplicateTransactionCommand, model, DuplicateTransactionCommand.MESSAGE_UNKNOWN_PAYEE);","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"ncduy0303"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"ncduy0303"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"ncduy0303"},"content":"        Transaction transactionInFilteredList \u003d model.getFilteredTransactionList()","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"ncduy0303"},"content":"            .get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"ncduy0303"},"content":"        Transaction duplicateTransaction \u003d new TransactionBuilder(transactionInFilteredList)","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"ncduy0303"},"content":"            .withAmount(\"123.21\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"ncduy0303"},"content":"            new TransactionDescriptorBuilder().withAmount(\"123.21\").build());","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"ncduy0303"},"content":"            DuplicateTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION_SUCCESS, Messages.format(duplicateTransaction));","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.addTransaction(duplicateTransaction);","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"ncduy0303"},"content":"        assertTransactionCommandSuccess(duplicateTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"ncduy0303"},"content":"    public void execute_invalidTransactionIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"ncduy0303"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"ncduy0303"},"content":"            .withAmount(\"123.21\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(duplicateTransactionCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"ncduy0303"},"content":"     * Duplicate filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"     * but smaller than size of spendnsplit book","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"ncduy0303"},"content":"    public void execute_invalidTransactionIndexFilteredList_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"ncduy0303"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"ncduy0303"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"jedkohjk"},"content":"        // ensures that outOfBoundIndex is still in bounds of spendnsplit list","lastModifiedDate":"2023-11-06"},{"lineNumber":187,"author":{"gitId":"wui-hong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSpendNSplitBook().getTransactionList().size());","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateTransactionCommand \u003d new DuplicateTransactionCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"ncduy0303"},"content":"            new TransactionDescriptorBuilder().withAmount(\"123.21\").build());","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"ncduy0303"},"content":"        assertCommandFailure(duplicateTransactionCommand, model, Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"ncduy0303"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"ncduy0303"},"content":"        final DuplicateTransactionCommand standardCommand \u003d new DuplicateTransactionCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"ncduy0303"},"content":"            INDEX_FIRST_ELEMENT, DESC_LUNCH);","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"ncduy0303"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor copyDescriptor \u003d new TransactionDescriptor(DESC_LUNCH);","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand commandWithSameValues \u003d new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"ncduy0303"},"content":"            copyDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"ncduy0303"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(standardCommand.equals(new DuplicateTransactionCommand(INDEX_SECOND_ELEMENT, DESC_LUNCH)));","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"ncduy0303"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(standardCommand.equals(new DuplicateTransactionCommand(INDEX_FIRST_ELEMENT, DESC_DINNER)));","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"ncduy0303"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor duplicateTransactionDescriptor \u003d new TransactionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand duplicateCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"ncduy0303"},"content":"            new DuplicateTransactionCommand(targetIndex, duplicateTransactionDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"ncduy0303"},"content":"        String expected \u003d DuplicateTransactionCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \", \"","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"ncduy0303"},"content":"            + \"transactionDescriptor\u003d\" + duplicateTransactionDescriptor + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expected, duplicateCommand.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":10,"ncduy0303":197,"wui-hong":25}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PersonDescriptorBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT, new PersonDescriptor());","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"                new PersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"jedkohjk"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_ELEMENT, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"    public void execute_reservedPersonUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"                new PersonDescriptorBuilder(firstPerson).withName(Name.SELF.fullName).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(editPersonCommand, model, String.format(Name.RESERVED_CONSTRAINTS, Name.SELF.fullName));","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"ncduy0303"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"        // edit person in filtered list into a duplicate in spendnsplit book","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"        Person personInList \u003d model.getSpendNSplitBook().getPersonList().get(INDEX_SECOND_ELEMENT.getZeroBased());","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"                new PersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"jedkohjk"},"content":"     * but smaller than size of spendnsplit book","lastModifiedDate":"2023-11-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"ncduy0303"},"content":"        showPersonAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"ncduy0303"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"jedkohjk"},"content":"        // ensures that outOfBoundIndex is still in bounds of spendnsplit book list","lastModifiedDate":"2023-11-06"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSpendNSplitBook().getPersonList().size());","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"ncduy0303"},"content":"                new PersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"ncduy0303"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT, DESC_AMY);","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor copyDescriptor \u003d new PersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"ncduy0303"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_ELEMENT, copyDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_ELEMENT, DESC_AMY)));","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_ELEMENT, DESC_BOB)));","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor editPersonDescriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d EditPersonCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(expected, editPersonCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jedkohjk":35,"ncduy0303":29,"-":107,"wui-hong":28}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/EditTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_DINNER;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertTransactionCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.EditTransactionCommand.MESSAGE_TRANSACTION_NOT_RELEVANT;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.TransactionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTransactionCommand.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"class EditTransactionCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"                .withPayeeName(originalTransaction.getPayeeName().toString())","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"                .withTimestamp(originalTransaction.getTimestamp().toString())","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"                .withPortions(originalTransaction.getPortions()).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder(editedTransaction).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"                EditTransactionCommand.MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(editTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_descriptionFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction firstTransaction \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"        String descriptionString \u003d \"A New Dinner\";","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"        TransactionBuilder transactionInList \u003d new TransactionBuilder(firstTransaction);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d transactionInList.withDescription(descriptionString).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"                .withDescription(descriptionString).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"                EditTransactionCommand.MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(editTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_costFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction firstTransaction \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"        String costString \u003d \"123.21\";","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"        TransactionBuilder transactionInList \u003d new TransactionBuilder(firstTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d transactionInList.withAmount(costString).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"                .withAmount(costString).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"                EditTransactionCommand.MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(editTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_timestampFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction firstTransaction \u003d model.getFilteredTransactionList().get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"        String timestampString \u003d \"10/10/2020 10:10\";","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"        TransactionBuilder transactionInList \u003d new TransactionBuilder(firstTransaction);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d transactionInList.withTimestamp(timestampString).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"                .withTimestamp(timestampString).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"                EditTransactionCommand.MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(editTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"    public void execute_duplicateTransaction_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"ncduy0303"},"content":"                new TransactionDescriptor());","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d EditTransactionCommand.MESSAGE_DUPLICATE_TRANSACTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(editTransactionCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_invalidTransactionUnfilteredList_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"                .withPayeeName(\"Alice\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(editTransactionCommand, model,","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"                MESSAGE_TRANSACTION_NOT_RELEVANT);","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"        editTransactionCommand \u003d new EditTransactionCommand(INDEX_SECOND_ELEMENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"jedkohjk"},"content":"        CommandTestUtil.assertCommandFailure(editTransactionCommand, model,","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"                EditTransactionCommand.MESSAGE_UNKNOWN_PAYEE);","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction transactionInFilteredList \u003d model.getFilteredTransactionList()","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"                .get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder(transactionInFilteredList)","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"                .withAmount(\"123.21\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"ncduy0303"},"content":"                new TransactionDescriptorBuilder().withAmount(\"123.21\").build());","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"ncduy0303"},"content":"                EditTransactionCommand.MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(editTransactionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_invalidTransactionIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"                .withAmount(\"123.21\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(editTransactionCommand, model,","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"                Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"jedkohjk"},"content":"     * but smaller than size of spendnsplit book","lastModifiedDate":"2023-11-06"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_invalidTransactionIndexFilteredList_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"jeffrey-jian"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"jeffrey-jian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"        // ensures that outOfBoundIndex is still in bounds of spendnsplit book list","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"wui-hong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSpendNSplitBook().getTransactionList().size());","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"ncduy0303"},"content":"                new TransactionDescriptorBuilder().withAmount(\"123.21\").build());","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(editTransactionCommand, model,","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"jeffrey-jian"},"content":"                Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"jeffrey-jian"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"jeffrey-jian"},"content":"        final EditTransactionCommand standardCommand \u003d new EditTransactionCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"jeffrey-jian"},"content":"                INDEX_FIRST_ELEMENT, DESC_LUNCH);","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"jeffrey-jian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor copyDescriptor \u003d new TransactionDescriptor(DESC_LUNCH);","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand commandWithSameValues \u003d new EditTransactionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"jeffrey-jian"},"content":"                copyDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":199,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":201,"author":{"gitId":"jeffrey-jian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":202,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"jeffrey-jian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"jeffrey-jian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"jeffrey-jian"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(standardCommand.equals(new EditTransactionCommand(INDEX_SECOND_ELEMENT, DESC_LUNCH)));","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"jeffrey-jian"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(standardCommand.equals(new EditTransactionCommand(INDEX_FIRST_ELEMENT, DESC_DINNER)));","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"jeffrey-jian"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"jeffrey-jian"},"content":"        Index index \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor editTransactionDescriptor \u003d new TransactionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand editTransactionCommand \u003d new EditTransactionCommand(index, editTransactionDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedString \u003d EditTransactionCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"jeffrey-jian"},"content":"                + \"{index\u003d\" + index","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"ncduy0303"},"content":"                + \", transactionDescriptor\u003d\" + editTransactionDescriptor + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedString, editTransactionCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":12,"ncduy0303":20,"wui-hong":25,"jeffrey-jian":170}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"wui-hong":5}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"wui-hong":5}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    private final Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand listFirstCommand \u003d new ListPersonCommand(firstPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand listSecondCommand \u003d new ListPersonCommand(secondPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(listFirstCommand, listFirstCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand listFirstCommandCopy \u003d new ListPersonCommand(firstPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(listFirstCommand, listFirstCommandCopy);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(1, listFirstCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(null, listFirstCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(listFirstCommand, listSecondCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    public void execute_zeroKeywords_allPersonsFound() {","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"        List\u003cPerson\u003e allPersons \u003d Arrays.asList(ALICE, CARL, DANIEL, ELLE, FIONA, GEORGE, BENSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, allPersons.size());","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand command \u003d new ListPersonCommand(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(allPersons, model.getFilteredPersonList());","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand command \u003d new ListPersonCommand(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(List.of(\"keyword\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand listPersonCommand \u003d new ListPersonCommand(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"        String expected \u003d ListPersonCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expected, listPersonCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jedkohjk":1,"ncduy0303":61,"-":17,"wui-hong":18}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/ListTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_TRANSACTIONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.TransactionContainsKeywordsAndPersonNamesPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTransactionCommand.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"public class ListTransactionCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    private Model model;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"        model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        expectedModel \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"                new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"                Collections.singletonList(new Name(\"first\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"                new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"                Collections.singletonList(new Name(\"second\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand listFirstCommand \u003d new ListTransactionCommand(firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand listSecondCommand \u003d new ListTransactionCommand(secondPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(listFirstCommand, listFirstCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand listFirstCommandCopy \u003d new ListTransactionCommand(firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(listFirstCommand, listFirstCommandCopy);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(1, listFirstCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(null, listFirstCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        // different person name -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(listFirstCommand, listSecondCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"    public void execute_zeroNames_allTransactionsFound() {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TRANSACTIONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(new ListTransactionCommand(predicate), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"    public void execute_multipleNames_multipleTransactionsFound() {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TRANSACTIONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), Arrays.asList(","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"                    new Name(\"Alice Pauline\"), new Name(\"Benson Meier\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        expectedModel.updateFilteredTransactionList(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"        assertCommandSuccess(new ListTransactionCommand(predicate), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"                new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"                Arrays.asList(new Name(\"Bob\"), new Name(\"Carl\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand listTransactionCommand \u003d new ListTransactionCommand(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        String expected \u003d ListTransactionCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expected, listTransactionCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":14,"nathanielcalimag":1,"ncduy0303":64,"wui-hong":11,"jeffrey-jian":2}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/PersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PersonDescriptorBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"public class PersonDescriptorTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptorWithSameValues \u003d new PersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor editedAmy \u003d new PersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"        editedAmy \u003d new PersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        editedAmy \u003d new PersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        editedAmy \u003d new PersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        editedAmy \u003d new PersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor editPersonDescriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        String expected \u003d PersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", telegramHandle\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ncduy0303":11,"-":52,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/SetShorthandCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertTransactionCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"public class SetShorthandCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    public void execute() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()),","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"                new UserPrefs(model.getUserPrefs()));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"            expectedModel.setCommandAlias(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        SetShorthandCommand cmd \u003d new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(SetShorthandCommand.MESSAGE_SET_SHORTHAND_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"                \"a\", SetShorthandCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        assertTransactionCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"            expectedModel.setCommandAlias(SetShorthandCommand.COMMAND_WORD, \"b\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        cmd \u003d new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"b\");","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        expectedMessage \u003d String.format(SetShorthandCommand.MESSAGE_UPDATE_SHORTHAND_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"                SetShorthandCommand.COMMAND_WORD, \"a\", \"b\");","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        assertTransactionCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        SetShorthandCommand commandShorthandA \u003d new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        SetShorthandCommand commandShorthandB \u003d new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"b\");","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        SetShorthandCommand commandShorthandACopy \u003d new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(commandShorthandA.equals(commandShorthandA));","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(commandShorthandA.equals(commandShorthandACopy));","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(commandShorthandA.equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(commandShorthandA.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(commandShorthandA.equals(commandShorthandB));","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        SetShorthandCommand commandShorthand \u003d new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d SetShorthandCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                + \"{original\u003d\" + SetShorthandCommand.COMMAND_WORD + \", \" + \"shorthand\u003d\" + \"a\" + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(expected, commandShorthand.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":64,"wui-hong":10}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/SettlePersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertTransactionCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIFTH_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SEVENTH_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PortionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":" * Contains integration tests (interaction with the Model) for {@code SettlePersonCommand}.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"public class SettlePersonCommandIntegrationTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    private static final Timestamp TIME \u003d new Timestamp(new Timestamp(VALID_TIMESTAMP).value.plusDays(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    private Model model;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"        model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    public void execute_settlePositiveBalance_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        Person personToSettle \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        Name personToSettleName \u003d personToSettle.getName();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction transaction \u003d new TransactionBuilder().withPayeeName(personToSettleName.fullName).withDescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"                String.format(SettlePersonCommand.SETTLE_TRANSACTION_DESCRIPTION, personToSettleName.fullName))","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"                .withAmount(expectedModel.getBalance(personToSettleName).toString())","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"                .withPortions(Set.of(new PortionBuilder().withName(Name.SELF.fullName)","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"                .withWeight(\"1\").build())).withTimestamp(TIME.toString()).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"        expectedModel.addTransaction(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        assertTransactionCommandSuccess(new SettlePersonCommand(INDEX_FIRST_ELEMENT, TIME), model,","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"                String.format(SettlePersonCommand.MESSAGE_SETTLE_PERSON_SUCCESS, personToSettle.getName()),","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"                expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"    public void execute_settleNegativeBalance_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        Person personToSettle \u003d new PersonBuilder(BENSON).build();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"        Name personToSettleName \u003d personToSettle.getName();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(model.getSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction transaction \u003d new TransactionBuilder().withPayeeName(Name.SELF.fullName).withDescription(","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"                String.format(SettlePersonCommand.SETTLE_TRANSACTION_DESCRIPTION, personToSettleName.fullName))","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"                .withAmount(expectedModel.getBalance(personToSettleName).abs().toString())","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"                .withPortions(Set.of(new PortionBuilder().withName(personToSettleName.fullName)","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"                .withWeight(\"1\").build())).withTimestamp(TIME.toString()).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"        expectedModel.addTransaction(transaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        assertTransactionCommandSuccess(new SettlePersonCommand(INDEX_SEVENTH_ELEMENT, TIME), model,","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"                String.format(SettlePersonCommand.MESSAGE_SETTLE_PERSON_SUCCESS, personToSettle.getName()),","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"                expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"    public void execute_noOutstandingBalance_throwsCommandException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        Person personToSettle \u003d new PersonBuilder(FIONA).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"nathanielcalimag"},"content":"        Name personToSettleName \u003d personToSettle.getName();","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(new SettlePersonCommand(INDEX_FIFTH_ELEMENT, TIME),","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"                model, String.format(SettlePersonCommand.MESSAGE_NO_OUTSTANDING_BALANCE, personToSettleName, TIME));","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        SettlePersonCommand settlePersonCommand \u003d new SettlePersonCommand(outOfBoundIndex, TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"        assertCommandFailure(settlePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jedkohjk":13,"nathanielcalimag":54,"ncduy0303":2,"wui-hong":27}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/SettlePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":" * Contains unit tests for {@code SettlePersonCommand}.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"public class SettlePersonCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    private static final Timestamp TIME \u003d new Timestamp(VALID_TIMESTAMP);","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        SettlePersonCommand settleFirstCommand \u003d new SettlePersonCommand(INDEX_FIRST_ELEMENT, TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        SettlePersonCommand settleSecondCommand \u003d new SettlePersonCommand(INDEX_SECOND_ELEMENT, TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(settleFirstCommand, settleFirstCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        SettlePersonCommand settleFirstCommandCopy \u003d new SettlePersonCommand(INDEX_FIRST_ELEMENT, TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(settleFirstCommand, settleFirstCommandCopy);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(1, settleFirstCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(null, settleFirstCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(settleFirstCommand, settleSecondCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        SettlePersonCommand settleCommand \u003d new SettlePersonCommand(targetIndex, TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d SettlePersonCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"                + \"{targetIndex\u003d\" + targetIndex + \", time\u003d\" + TIME + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(expected, settleCommand.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jedkohjk":9,"nathanielcalimag":36,"wui-hong":6}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/SortPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertTransactionCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"public class SortPersonCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    public void execute() {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        SortPersonCommand cmd \u003d new SortPersonCommand(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(SortPersonCommand.MESSAGE_SORT_PERSON_SUCCESS, \"ascending\");","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"        expectedModel.sortPersonAscending();","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        assertTransactionCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        cmd \u003d new SortPersonCommand(true);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        expectedMessage \u003d String.format(SortPersonCommand.MESSAGE_SORT_PERSON_SUCCESS, \"descending\");","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        expectedModel.sortPersonDescending();","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        assertTransactionCommandSuccess(cmd, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        SortPersonCommand sortDescCommand \u003d new SortPersonCommand(true);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        SortPersonCommand sortDescCommandCopy \u003d new SortPersonCommand(true);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        SortPersonCommand sortAscCommand \u003d new SortPersonCommand(false);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(sortDescCommand, sortDescCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        // same values -\u003e returns true;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(sortDescCommand, sortDescCommandCopy);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        assertNotEquals(sortDescCommand, 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        assertNotEquals(sortDescCommand, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        // different isDesc -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        assertNotEquals(sortDescCommand, sortAscCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        SortPersonCommand sortPersonCommand \u003d new SortPersonCommand(true);","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d SortPersonCommand.class.getCanonicalName() + \"{isDesc\u003dtrue}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(expected, sortPersonCommand.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":52,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/logic/commands/UpdatePortionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.commands;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_WEIGHT_HALF;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.assertTransactionCommandSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_THIRD_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ModelManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PortionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PortionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":" * Contains integration tests (interaction with the Model) and unit tests for UpdatePortionCommand.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"class UpdatePortionCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"    private Model model \u003d new ModelManager(getTypicalSpendNSplitBook(), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_editExistingPortionWeightNonZeroUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e originalPortions \u003d originalTransaction.getPortions();","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"        Portion originalPortion \u003d originalTransaction.getPortions().stream().iterator().next();","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        Portion editedPortion \u003d new PortionBuilder(originalPortion).withWeight(\"2/3\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e editedPortions \u003d originalPortions.stream().map(portion -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"                portion.equals(originalPortion) ? editedPortion : portion).collect(Collectors.toSet());","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder(originalTransaction)","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"                .withPortions(editedPortions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(originalPortion)","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"                .withWeight(\"1/2\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_SECOND_ELEMENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(UpdatePortionCommand.MESSAGE_UPDATE_PORTION_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"                Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(1), editedTransaction);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(updatePortionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"    public void execute_onlyPortion_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(0);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        Portion originalPortion \u003d originalTransaction.getPortions().stream().iterator().next();","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(originalPortion)","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"                .withWeight(\"1/2\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d UpdatePortionCommand.MESSAGE_ONLY_PORTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(updatePortionCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"    public void execute_duplicatePortion_failure() {","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(1);","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        Portion originalPortion \u003d originalTransaction.getPortions().stream().iterator().next();","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(originalPortion)","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"                .withWeight(\"1/3\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_SECOND_ELEMENT, descriptor);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d UpdatePortionCommand.MESSAGE_DUPLICATE_TRANSACTION;","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(updatePortionCommand, model, expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_deleteExistingPortionUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(2);","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e originalPortions \u003d originalTransaction.getPortions();","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"        Portion originalPortion \u003d originalTransaction.getPortions().stream().iterator().next();","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e editedPortions \u003d originalPortions.stream().filter(portion -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"                !portion.equals(originalPortion)).collect(Collectors.toSet());","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder(originalTransaction)","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"                .withPortions(editedPortions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(originalPortion)","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"                .withWeight(\"0\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_THIRD_ELEMENT, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(UpdatePortionCommand.MESSAGE_UPDATE_PORTION_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"                Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(2), editedTransaction);","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(updatePortionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"     * Delete the only portion in the transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_deleteOnlyExistingPortionUnfilteredList_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"        Portion originalPortion \u003d originalTransaction.getPortions().stream().iterator().next();","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(originalPortion)","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"                .withWeight(\"0\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(updatePortionCommand, model,","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"                UpdatePortionCommand.MESSAGE_DELETE_ONLY_PORTION_FAILURE);","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"     * Deletes a portion that results in an irrelevant transaction.","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"     * i.e. Transaction does not involve yourself.","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_deleteExistingPortionIrrelevantTransactionUnfilteredList_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(2);","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"        Portion originalPortion \u003d originalTransaction.getPortions().stream().filter(portion -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"                portion.getPersonName().equals(Name.SELF)).iterator().next();","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(originalPortion)","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"                .withWeight(\"0\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_THIRD_ELEMENT, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d UpdatePortionCommand.MESSAGE_IRRELEVANT_UPDATED_TRANSACTION;","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(updatePortionCommand, model, expectedMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_addNewPortionUnfilteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction originalTransaction \u003d model.getFilteredTransactionList().get(0);","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"jedkohjk"},"content":"        Portion newPortion \u003d new PortionBuilder().withName(CARL.getName().fullName).withWeight(\"1/2\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e editedPortions \u003d originalTransaction.getPortionsCopy();","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"        editedPortions.add(newPortion);","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder(originalTransaction)","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"                .withPortions(editedPortions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(newPortion).withWeight(\"1/3\").build();","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(UpdatePortionCommand.MESSAGE_UPDATE_PORTION_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"ncduy0303"},"content":"                Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(updatePortionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"jedkohjk"},"content":"    public void execute_unknownName_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"jedkohjk"},"content":"        Portion newPortion \u003d new PortionBuilder().withName(VALID_NAME_AMY).withWeight(\"1/2\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(newPortion).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"jedkohjk"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d UpdatePortionCommand.MESSAGE_UNKNOWN_PARTY;","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(updatePortionCommand, model, expectedMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"jedkohjk"},"content":"    public void execute_highWeight_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"        Portion newPortion \u003d new PortionBuilder().withName(CARL.getName().fullName).withWeight(\"1\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(newPortion).withWeight(\"1\").build();","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d UpdatePortionCommand.MESSAGE_INVALID_PROPORTION;","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"jedkohjk"},"content":"        assertCommandFailure(updatePortionCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"jeffrey-jian"},"content":"        showTransactionAtIndex(model, INDEX_FIRST_ELEMENT);","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction transactionInFilteredList \u003d model.getFilteredTransactionList()","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"jeffrey-jian"},"content":"                .get(INDEX_FIRST_ELEMENT.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"jedkohjk"},"content":"        Portion newPortion \u003d new PortionBuilder().withName(CARL.getName().fullName).withWeight(\"1/2\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"jeffrey-jian"},"content":"        Set\u003cPortion\u003e editedPortions \u003d transactionInFilteredList.getPortionsCopy();","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"jeffrey-jian"},"content":"        editedPortions.add(newPortion);","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction editedTransaction \u003d new TransactionBuilder(transactionInFilteredList)","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"jeffrey-jian"},"content":"                .withPortions(editedPortions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT,","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"ncduy0303"},"content":"                new PortionDescriptorBuilder(newPortion).withWeight(\"1/3\").build());","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedMessage \u003d String.format(UpdatePortionCommand.MESSAGE_UPDATE_PORTION_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"                Messages.format(editedTransaction));","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"wui-hong"},"content":"        Model expectedModel \u003d new ModelManager(new SpendNSplit(model.getSpendNSplitBook()), new UserPrefs());","lastModifiedDate":"2023-11-03"},{"lineNumber":210,"author":{"gitId":"jeffrey-jian"},"content":"        expectedModel.setTransaction(model.getFilteredTransactionList().get(0), editedTransaction);","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"jeffrey-jian"},"content":"        assertTransactionCommandSuccess(updatePortionCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_invalidTransactionIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"jeffrey-jian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"jedkohjk"},"content":"                .withPersonName(CARL.getName().fullName).withWeight(VALID_WEIGHT_HALF).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(updatePortionCommand, model,","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"jeffrey-jian"},"content":"                Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"jeffrey-jian"},"content":"    public void execute_invalidTransactionIndexFilteredList_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"jeffrey-jian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTransactionList().size() + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"jedkohjk"},"content":"                .withPersonName(CARL.getName().fullName).withWeight(VALID_WEIGHT_HALF).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"jeffrey-jian"},"content":"        CommandTestUtil.assertCommandFailure(updatePortionCommand, model,","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"jeffrey-jian"},"content":"                Messages.MESSAGE_INVALID_TRANSACTION_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"jeffrey-jian"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"ncduy0303"},"content":"        final PortionDescriptor standardDescriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"jeffrey-jian"},"content":"                .withPersonName(VALID_NAME_AMY).withWeight(VALID_WEIGHT_HALF).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"jeffrey-jian"},"content":"        final UpdatePortionCommand standardCommand \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, standardDescriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"jeffrey-jian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor copyDescriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":245,"author":{"gitId":"jeffrey-jian"},"content":"                .withPersonName(VALID_NAME_AMY).withWeight(VALID_WEIGHT_HALF).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand commandWithSameValues \u003d new UpdatePortionCommand(INDEX_FIRST_ELEMENT, copyDescriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"jeffrey-jian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"jeffrey-jian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(!standardCommand.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"jeffrey-jian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(!standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"jeffrey-jian"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"jeffrey-jian"},"content":"        assertTrue(!standardCommand.equals(new UpdatePortionCommand(INDEX_SECOND_ELEMENT, copyDescriptor)));","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"jeffrey-jian"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor differentDescriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"jeffrey-jian"},"content":"                .withPersonName(VALID_NAME_BOB).withWeight(\"100\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(standardCommand.equals(new UpdatePortionCommand(INDEX_FIRST_ELEMENT, differentDescriptor)));","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"jeffrey-jian"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"jeffrey-jian"},"content":"        Index index \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor portionDescriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":271,"author":{"gitId":"jeffrey-jian"},"content":"                .withPersonName(VALID_NAME_AMY).withWeight(VALID_WEIGHT_HALF).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"ncduy0303"},"content":"        UpdatePortionCommand updatePortionCommand \u003d new UpdatePortionCommand(index, portionDescriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"jeffrey-jian"},"content":"        String expectedString \u003d UpdatePortionCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"jeffrey-jian"},"content":"                + \"{index\u003d\" + index","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"ncduy0303"},"content":"                + \", portionDescriptor\u003d\" + portionDescriptor + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":276,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedString, updatePortionCommand.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":53,"ncduy0303":24,"wui-hong":28,"jeffrey-jian":173}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_TELEGRAM_HANDLE_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.RESERVED_NAME_DESC_OTHERS;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.RESERVED_NAME_DESC_SELF;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"        // no phone","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withPhone(null).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withTelegramHandle(null).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"                + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        // no email","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmail(null).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"                + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        // no address","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withAddress(null).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"                new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"                        + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"                        PREFIX_PHONE, PREFIX_TELEGRAM_HANDLE));","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":170,"author":{"gitId":"wui-hong"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + TELEGRAM_HANDLE_DESC_AMY","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"jedkohjk"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"wui-hong"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"wui-hong"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"wui-hong"},"content":"        // invalid telegramHandle","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_TELEGRAM_HANDLE_DESC","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"wui-hong"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"wui-hong"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"wui-hong"},"content":"                + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"wui-hong"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"wui-hong"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + TELEGRAM_HANDLE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"wui-hong"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"wui-hong"},"content":"                        + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":229,"author":{"gitId":"jedkohjk"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"jedkohjk"},"content":"    public void parse_reservedValue_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"jedkohjk"},"content":"        // self","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + RESERVED_NAME_DESC_SELF + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"wui-hong"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"jedkohjk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, String.format(Name.RESERVED_CONSTRAINTS, \"Self\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":238,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"jedkohjk"},"content":"        // others","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"wui-hong"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + RESERVED_NAME_DESC_OTHERS + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"wui-hong"},"content":"                + TELEGRAM_HANDLE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"jedkohjk"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, String.format(Name.RESERVED_CONSTRAINTS, \"Others\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jedkohjk":40,"-":121,"wui-hong":83}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/AddTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.COST_DESC_LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESCRIPTION_DESC_LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.DESC_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_COST_LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_DESCRIPTION_LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_WEIGHT_ONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.WEIGHT_DESC_ONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"public class AddTransactionCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    private AddTransactionCommandParser parser \u003d new AddTransactionCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        // missing description prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \" \" + VALID_DESCRIPTION_LUNCH + NAME_DESC_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_NAME + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + \" \" + VALID_NAME_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_NAME + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        // missing cost prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + NAME_DESC_AMY + \" \" + VALID_COST_LUNCH","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_NAME + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + NAME_DESC_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        // missing weight prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + NAME_DESC_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_NAME + Name.SELF + \" \" + VALID_WEIGHT_ONE, expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        // missing description prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \" \" + VALID_DESCRIPTION_LUNCH + NAME_DESC_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"                + DESC_TIMESTAMP + \" \" + PREFIX_NAME + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + \" \" + VALID_NAME_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_NAME + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        // missing cost prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + NAME_DESC_AMY + \" \" + VALID_COST_LUNCH","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"                + DESC_TIMESTAMP + \" \" + PREFIX_NAME + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + NAME_DESC_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"                + DESC_TIMESTAMP + \" \" + Name.SELF + WEIGHT_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        // missing weight prefix","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, DESCRIPTION_DESC_LUNCH + NAME_DESC_AMY + COST_DESC_LUNCH","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"                + DESC_TIMESTAMP + \" \" + PREFIX_NAME + Name.SELF + \" \" + VALID_WEIGHT_ONE, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jedkohjk":54,"wui-hong":15}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/CommandAliasMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SetShorthandCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"public class CommandAliasMapTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    public void getCommand() {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"        CommandAliasMap map \u003d new CommandAliasMap();","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"            map.getCommand(\"a\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e instanceof ParseException);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"            map.putAlias(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e \u003d\u003d null);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"            map.getCommand(SetShorthandCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e \u003d\u003d null);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"            map.getCommand(\"a\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e \u003d\u003d null);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    public void putAlias() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        CommandAliasMap map \u003d new CommandAliasMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"            map.putAlias(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e \u003d\u003d null);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            map.putAlias(ListPersonCommand.COMMAND_WORD, SetShorthandCommand.COMMAND_WORD);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(false);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e instanceof CommandException);","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"            map.putAlias(ListPersonCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(false);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e instanceof CommandException);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"            map.putAlias(ListPersonCommand.COMMAND_WORD, \"b\");","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e \u003d\u003d null);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"            map.putAlias(\"a\", \"c\");","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(false);","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e instanceof CommandException);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        CommandAliasMap map1 \u003d new CommandAliasMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        CommandAliasMap map2 \u003d new CommandAliasMap();","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(map1.equals(map1));","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(map1.equals(map2));","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(map1.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(map1.equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"            map2.putAlias(SetShorthandCommand.COMMAND_WORD, \"a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"            assertFalse(map1.equals(map2));","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"            assertTrue(e \u003d\u003d null);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":84,"wui-hong":5}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.Command;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":36,"wui-hong":3}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_ELEMENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"                DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jedkohjk":4,"ncduy0303":1,"-":22,"wui-hong":6}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/DeleteTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"public class DeleteTransactionCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    private DeleteTransactionCommandParser parser \u003d new DeleteTransactionCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTransactionCommand(INDEX_FIRST_ELEMENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"            DeleteTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ncduy0303":27,"wui-hong":6}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/DuplicateTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.Command;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DuplicateTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.TransactionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":" * outside of the DuplicateCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":" * same path through the DuplicateCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"public class DuplicateTransactionCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Dinner\";","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    private static final String VALID_COST \u003d \"10.00\";","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    private static final String VALID_TIMESTAMP \u003d \"10/10/2020 10:10\";","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    private static final String INVALID_COST \u003d \"1.3.0.1\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"    private static final String INVALID_TIMESTAMP \u003d \"20 October 2022\";","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DuplicateTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"    private DuplicateTransactionCommandParser parser \u003d new DuplicateTransactionCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        // no index specified","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        // negative index","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, \"-5\" + PREFIX_DESCRIPTION + VALID_DESCRIPTION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"        // zero index","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, \"0\" + PREFIX_DESCRIPTION + VALID_DESCRIPTION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, \"1 i\u003dstring\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"        // invalid description","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"            \"1\" + \" \" + PREFIX_DESCRIPTION + INVALID_DESCRIPTION, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"        // invalid cost","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"            \"1\" + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"                + PREFIX_COST + INVALID_COST, Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        // invalid timestamp","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"            \"1\" + \" \" + PREFIX_TIMESTAMP + INVALID_TIMESTAMP, Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        // two invalid values, only first invalid value reported (in order of description, cost, timestamp)","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"            \"1\" + \" \" + PREFIX_COST + INVALID_COST + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"                + PREFIX_DESCRIPTION + INVALID_DESCRIPTION, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"    public void parse_noFieldSpecified_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"        String userInput \u003d targetIndex.getOneBased() + \"\";","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand expectedCommand \u003d new DuplicateTransactionCommand(targetIndex,","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"            new TransactionDescriptor());","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"ncduy0303"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"        // timestamp","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_TIMESTAMP + VALID_TIMESTAMP;","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"            new TransactionDescriptorBuilder().withTimestamp(VALID_TIMESTAMP).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"        DuplicateTransactionCommand expectedCommand \u003d new DuplicateTransactionCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"ncduy0303"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"ncduy0303"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"ncduy0303"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"            + PREFIX_DESCRIPTION + VALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + INVALID_DESCRIPTION;","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"ncduy0303"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"ncduy0303"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"ncduy0303"},"content":"            + PREFIX_DESCRIPTION + INVALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"ncduy0303"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"ncduy0303"},"content":"            + PREFIX_DESCRIPTION + VALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"ncduy0303"},"content":"        // multiple invalid fields repeated","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"ncduy0303"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"ncduy0303"},"content":"            + PREFIX_DESCRIPTION + INVALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + INVALID_DESCRIPTION;","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":1,"ncduy0303":126,"wui-hong":16}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_THIRD_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PersonDescriptorBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_SECOND_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_THIRD_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"jedkohjk"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"jedkohjk"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"jedkohjk"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"jedkohjk"},"content":"        // AddPersonCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"ncduy0303"},"content":"        Index targetIndex \u003d INDEX_THIRD_ELEMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-11-08"},{"lineNumber":204,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jedkohjk":13,"ncduy0303":15,"-":140,"wui-hong":40}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/EditTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.EditTransactionCommand.MESSAGE_TRANSACTION_NOT_EDITED;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.TransactionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"class EditTransactionCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String VALID_DESCRIPTION \u003d \"Dinner\";","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String VALID_COST \u003d \"10.00\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"    private static final String VALID_TIMESTAMP \u003d \"10/10/2020 10:10\";","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String INVALID_COST \u003d \"1.3.0.1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String INVALID_TIMESTAMP \u003d \"20 October 2022\";","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTransactionCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"    private EditTransactionCommandParser parser \u003d new EditTransactionCommandParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"        // no index specified","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"        // no field specified","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_TRANSACTION_NOT_EDITED);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"        // negative index","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \"-5\" + PREFIX_DESCRIPTION + VALID_DESCRIPTION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"        // zero index","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \"0\" + PREFIX_DESCRIPTION + VALID_DESCRIPTION, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \"1 i\u003dstring\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"        // invalid description","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"jeffrey-jian"},"content":"                \"1\" + \" \" + PREFIX_DESCRIPTION + INVALID_DESCRIPTION, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"        // invalid cost","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"                \"1\" + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"                        + PREFIX_COST + INVALID_COST, Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"        // invalid timestamp","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"jeffrey-jian"},"content":"                \"1\" + \" \" + PREFIX_TIMESTAMP + INVALID_TIMESTAMP, Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"        // two invalid values, only first invalid value reported (in order of description, cost, timestamp)","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"                \"1\" + \" \" + PREFIX_COST + INVALID_COST + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jeffrey-jian"},"content":"                        + PREFIX_DESCRIPTION + INVALID_DESCRIPTION, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"        // description","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"                new TransactionDescriptorBuilder().withDescription(VALID_DESCRIPTION).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand expectedCommand \u003d new EditTransactionCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"jeffrey-jian"},"content":"        // cost","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_COST + VALID_COST;","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new TransactionDescriptorBuilder().withAmount(VALID_COST).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"        expectedCommand \u003d new EditTransactionCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"        // payeeName","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new TransactionDescriptorBuilder().withPayeeName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"        expectedCommand \u003d new EditTransactionCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"jeffrey-jian"},"content":"        // timestamp","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_TIMESTAMP + VALID_TIMESTAMP;","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new TransactionDescriptorBuilder().withTimestamp(VALID_TIMESTAMP).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"        expectedCommand \u003d new EditTransactionCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"jeffrey-jian"},"content":"                + PREFIX_DESCRIPTION + VALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + INVALID_DESCRIPTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"                + PREFIX_DESCRIPTION + INVALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"jeffrey-jian"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"jeffrey-jian"},"content":"                + PREFIX_DESCRIPTION + VALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"        // multiple invalid fields repeated","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"                + PREFIX_DESCRIPTION + INVALID_DESCRIPTION + \" \" + PREFIX_DESCRIPTION + INVALID_DESCRIPTION;","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jedkohjk":1,"ncduy0303":7,"wui-hong":18,"jeffrey-jian":118}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/ListPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"public class ListPersonCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"    private final ListPersonCommandParser parser \u003d new ListPersonCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"    public void parse_emptyArg_returnsListCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"            new ListPersonCommand(new NameContainsKeywordsPredicate(List.of()));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \"     \", expectedFindPersonCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"            new ListPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ncduy0303":31,"wui-hong":4}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/ListTransactionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.TransactionContainsKeywordsAndPersonNamesPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"public class ListTransactionCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"    private final ListTransactionCommandParser parser \u003d new ListTransactionCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"        // zero keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand expectedListTransactionCommand \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"            new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), List.of()));","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \"\", expectedListTransactionCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, \" \\n \\t \\n\", expectedListTransactionCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    public void parse_validNameFields_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        // one keyword","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand expectedListTransactionCommand \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"            new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"            List.of(new Name(VALID_NAME_AMY))));","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY, expectedListTransactionCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        // multiple different keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        expectedListTransactionCommand \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"            new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), List.of(","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"                new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"                new Name(VALID_NAME_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"            )));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB, expectedListTransactionCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        // duplicate keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        expectedListTransactionCommand \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"            new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"            List.of(new Name(VALID_NAME_AMY))));","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_AMY, expectedListTransactionCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"    public void parse_validKeywordFields_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        // one keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"        ListTransactionCommand expectedListTransactionCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"                new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"Lunch\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"                List.of()));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"Lunch\", expectedListTransactionCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        // multiple different keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        expectedListTransactionCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"                new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"                .of(\"Lunch\", \"Dinner\"), List.of()));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"Lunch Dinner\", expectedListTransactionCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"        // duplicate keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        expectedListTransactionCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"                new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"Lunch\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"                List.of()));","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"Lunch Lunch\", expectedListTransactionCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    public void parse_validBothFields_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        // one keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        ListTransactionCommand expectedListTransactionCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"                new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"Lunch\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"                List.of(new Name(VALID_NAME_AMY))));","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"Lunch\" + NAME_DESC_AMY, expectedListTransactionCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        // multiple different keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        expectedListTransactionCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"                new ListTransactionCommand(new TransactionContainsKeywordsAndPersonNamesPredicate(List","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"                .of(\"Lunch\", \"Dinner\"), List.of(new Name(VALID_NAME_AMY), new Name(VALID_NAME_BOB))));","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"Lunch Dinner\" + NAME_DESC_AMY + NAME_DESC_BOB, expectedListTransactionCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":43,"ncduy0303":37,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    private static final String INVALID_COST \u003d \".20.00\";","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    private static final String VALID_COST \u003d \"20.00\";","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    private static final String VALID_DESCRIPTION \u003d \"bread\";","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(INDEX_FIRST_ELEMENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(INDEX_FIRST_ELEMENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"wui-hong"},"content":"    public void parseAmount_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAmount((String) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":211,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"wui-hong"},"content":"    public void parseAmount_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"wui-hong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAmount(INVALID_COST));","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"jedkohjk"},"content":"    public void parseAmount_negativeValue_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAmount(\"-1\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"wui-hong"},"content":"    public void parseAmount_validValueWithoutWhitespace_returnsAmount() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":225,"author":{"gitId":"wui-hong"},"content":"        Amount expectedAmount \u003d new Amount(VALID_COST);","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expectedAmount, ParserUtil.parseAmount(VALID_COST));","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"wui-hong"},"content":"    public void parseAmount_validValueWithWhitespace_returnsTrimmedAmount() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"wui-hong"},"content":"        String amountWithWhitespace \u003d WHITESPACE + VALID_COST + WHITESPACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"wui-hong"},"content":"        Amount expectedAmount \u003d new Amount(VALID_COST);","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expectedAmount, ParserUtil.parseAmount(amountWithWhitespace));","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"wui-hong"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"jeffrey-jian"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"wui-hong"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"wui-hong"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"jeffrey-jian"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"jeffrey-jian"},"content":"    public void parseDescription_invalidValueEmptyString_throwsParseException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"jeffrey-jian"},"content":"    public void parseDescription_invalidValueNull_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"jedkohjk"},"content":"    public void parseWeight_invalidValueNull_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeight(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":262,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":263,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":264,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":265,"author":{"gitId":"jedkohjk"},"content":"    public void parseWeight_invalidValue_throwsNullParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":266,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeight(\"1/2/3\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":267,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":268,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":269,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":270,"author":{"gitId":"jedkohjk"},"content":"    public void parseWeight_negativeValue_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeight(\"-1\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":272,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":273,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"jeffrey-jian"},"content":"    public void parseZeroableWeight_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseZeroableWeight(\"1/2/3\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"jeffrey-jian"},"content":"    public void parseZeroableWeight_negativeValue_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseZeroableWeight(\"-1\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jedkohjk":20,"ncduy0303":2,"-":184,"wui-hong":51,"jeffrey-jian":28}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/SetShorthandCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ORIGINAL_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_SHORTHAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SetShorthandCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"public class SetShorthandCommandParserTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    private SetShorthandCommandParser parser \u003d new SetShorthandCommandParser();","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ORIGINAL_COMMAND + SetShorthandCommand.COMMAND_WORD","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_SHORTHAND + \"a\", new SetShorthandCommand(SetShorthandCommand.COMMAND_WORD, \"a\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetShorthandCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \" \" + SetShorthandCommand.COMMAND_WORD","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_SHORTHAND + \"a\", expectedMessage);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ORIGINAL_COMMAND + SetShorthandCommand.COMMAND_WORD","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + \"a\", expectedMessage);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    public void parse_inValidValue_failure() {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ORIGINAL_COMMAND + SetShorthandCommand.COMMAND_WORD","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_SHORTHAND + \"123\", SetShorthandCommandParser.MESSAGE_INVALID_SHORTHAND);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \" \" + PREFIX_ORIGINAL_COMMAND + SetShorthandCommand.COMMAND_WORD","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"                + \" \" + PREFIX_SHORTHAND, SetShorthandCommandParser.MESSAGE_INVALID_SHORTHAND);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"jedkohjk":31,"wui-hong":7}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/SettlePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SettlePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":" * outside of the SettlePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":" * same path through the SettlePersonCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"public class SettlePersonCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    private SettlePersonCommandParser parser \u003d new SettlePersonCommandParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    public void parse_validArgs_returnsSettlePersonCommand() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"1 \" + PREFIX_TIMESTAMP + VALID_TIMESTAMP,","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"                new SettlePersonCommand(INDEX_FIRST_ELEMENT, new Timestamp(VALID_TIMESTAMP)));","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(parser.parse(\"1\") instanceof SettlePersonCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"                SettlePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_TIMESTAMP + \"\u003da\", Timestamp.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"jedkohjk":6,"nathanielcalimag":25,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/SortPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"jedkohjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SortPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"public class SortPersonCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"jedkohjk"},"content":"    private SortPersonCommandParser parser \u003d new SortPersonCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jedkohjk"},"content":"    public void parse_validArgs_returnsSettlePersonCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"+\", new SortPersonCommand(true));","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"jedkohjk"},"content":"        assertParseSuccess(parser, \"-\", new SortPersonCommand(false));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"jedkohjk"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"                SortPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":22,"wui-hong":5}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/SpendNSplitParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ORIGINAL_COMMAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_SHORTHAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"import static seedu.spendnsplit.testutil.PortionUtil.getPortionDescriptorDetails;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"import static seedu.spendnsplit.testutil.TransactionUtil.getTransactionDescriptorDetails;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ClearCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeletePersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ExitCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.HelpCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.ListTransactionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SetShorthandCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.SortPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.UpdatePortionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.TransactionContainsKeywordsAndPersonNamesPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PersonDescriptorBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PortionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PortionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.TransactionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"public class SpendNSplitParserTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"    private final SpendNSplitParser parser \u003d new SpendNSplitParser();","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"    public void parseCommand_addPerson() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"            .parseCommand(PersonUtil.getAddPersonCommand(person), new CommandAliasMap());","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, new CommandAliasMap()) instanceof ClearCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\", new CommandAliasMap())","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            instanceof ClearCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    public void parseCommand_deletePerson() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"            DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ELEMENT.getOneBased(), new CommandAliasMap());","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_ELEMENT), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"    public void parseCommand_editPerson() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        PersonDescriptor descriptor \u003d new PersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"            + INDEX_FIRST_ELEMENT.getOneBased() + \" \"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"            + PersonUtil.getPersonDescriptorDetails(descriptor), new CommandAliasMap());","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_ELEMENT, descriptor), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"    public void parseCommand_sortPerson() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(parser.parseCommand(SortPersonCommand.COMMAND_WORD","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"            + \" +\", new CommandAliasMap()) instanceof SortPersonCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(parser.parseCommand(SortPersonCommand.COMMAND_WORD","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"            + \" -\", new CommandAliasMap()) instanceof SortPersonCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"    public void parseCommand_listPerson() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD, new CommandAliasMap())","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"            instanceof ListPersonCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD + \" Alice\", new CommandAliasMap())","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"            instanceof ListPersonCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"ncduy0303"},"content":"        ListPersonCommand command \u003d (ListPersonCommand) parser.parseCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"ncduy0303"},"content":"            ListPersonCommand.COMMAND_WORD + \" \" + keywords.stream()","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"                .collect(Collectors.joining(\" \")), new CommandAliasMap());","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(new ListPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, new CommandAliasMap()) instanceof ExitCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", new CommandAliasMap()) instanceof ExitCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, new CommandAliasMap()) instanceof HelpCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", new CommandAliasMap()) instanceof HelpCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"ncduy0303"},"content":"    public void parseCommand_listTransaction() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"        ListTransactionCommand command \u003d (ListTransactionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"jedkohjk"},"content":"            ListTransactionCommand.COMMAND_WORD + \" \" + NAME_DESC_AMY + \" \" + NAME_DESC_BOB, new CommandAliasMap());","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"jedkohjk"},"content":"                new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"ncduy0303"},"content":"                List.of(new Name(VALID_NAME_AMY), new Name(VALID_NAME_BOB)));","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(new ListTransactionCommand(predicate), command);","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"wui-hong"},"content":"    public void parseCommand_addTransaction() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"        assertTrue(parser.parseCommand(AddTransactionCommand.COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"jedkohjk"},"content":"            + \" d\u003dbread n\u003dBob c\u003d20.00 n\u003dself w\u003d1\", new CommandAliasMap()) instanceof AddTransactionCommand);","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(parser.parseCommand(AddTransactionCommand.COMMAND_WORD","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"jedkohjk"},"content":"            + \" d\u003dbread n\u003dBob c\u003d20.00 ts\u003d10/10/2020 12:00 n\u003dself w\u003d1\", new CommandAliasMap())","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"jedkohjk"},"content":"            instanceof AddTransactionCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"jeffrey-jian"},"content":"    public void parseCommand_editTransaction() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"jeffrey-jian"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"ncduy0303"},"content":"        TransactionDescriptor descriptor \u003d new TransactionDescriptorBuilder(transaction)","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"            .withoutTimestamp().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"        EditTransactionCommand command \u003d (EditTransactionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"            EditTransactionCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ELEMENT.getOneBased() + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"ncduy0303"},"content":"                + getTransactionDescriptorDetails(descriptor), new CommandAliasMap());","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(new EditTransactionCommand(INDEX_FIRST_ELEMENT, descriptor), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"ncduy0303"},"content":"    public void parseCommand_deleteTransaction() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"ncduy0303"},"content":"        DeleteTransactionCommand command \u003d (DeleteTransactionCommand) parser.parseCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"ncduy0303"},"content":"            DeleteTransactionCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ELEMENT.getOneBased(), new CommandAliasMap());","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(new DeleteTransactionCommand(INDEX_FIRST_ELEMENT), command);","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"ncduy0303"},"content":"    public void parseCommand_setShorthandCommand() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"ncduy0303"},"content":"        SetShorthandCommand command \u003d (SetShorthandCommand) parser.parseCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"ncduy0303"},"content":"            SetShorthandCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"ncduy0303"},"content":"                + PREFIX_ORIGINAL_COMMAND + \" \" + DeleteTransactionCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"ncduy0303"},"content":"                + PREFIX_SHORTHAND + \" \" + \"dt\", new CommandAliasMap());","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(new SetShorthandCommand(DeleteTransactionCommand.COMMAND_WORD, \"dt\"), command);","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"    public void parseCommand_updatePortion() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"        Portion portion \u003d new PortionBuilder().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder(portion).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand command \u003d (UpdatePortionCommand) parser.parseCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"            UpdatePortionCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ELEMENT.getOneBased() + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"ncduy0303"},"content":"                + getPortionDescriptorDetails(descriptor), new CommandAliasMap());","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(new UpdatePortionCommand(INDEX_FIRST_ELEMENT, descriptor), command);","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"            -\u003e parser.parseCommand(\"\", new CommandAliasMap()));","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"jedkohjk"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\", new CommandAliasMap()));","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jedkohjk":32,"ncduy0303":53,"-":47,"wui-hong":43,"jeffrey-jian":17}},{"path":"src/test/java/seedu/spendnsplit/logic/parser/UpdatePortionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.logic.parser;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_WEIGHT_HALF;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.WEIGHT_DESC_HALF;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.WEIGHT_DESC_ONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalIndexes.INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.Messages;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.UpdatePortionCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.testutil.PortionDescriptorBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"class UpdatePortionCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdatePortionCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    private UpdatePortionCommandParser parser \u003d new UpdatePortionCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"jeffrey-jian"},"content":"        // no index specified","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \" \" + NAME_DESC_AMY + WEIGHT_DESC_HALF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jeffrey-jian"},"content":"        // no field specified","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \" 1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"jeffrey-jian"},"content":"        // some fields specified","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \" 1\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, \" 1\" + WEIGHT_DESC_HALF, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"        String userInput \u003d \" \" + targetIndex.getOneBased() + \" \" + NAME_DESC_AMY + WEIGHT_DESC_HALF;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        PortionDescriptor descriptor \u003d new PortionDescriptorBuilder()","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"jeffrey-jian"},"content":"                .withPersonName(VALID_NAME_AMY).withWeight(VALID_WEIGHT_HALF).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jeffrey-jian"},"content":"        UpdatePortionCommand expectedCommand \u003d new UpdatePortionCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"jeffrey-jian"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"        Index targetIndex \u003d INDEX_FIRST_ELEMENT;","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + WEIGHT_DESC_HALF + NAME_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"jeffrey-jian"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + WEIGHT_DESC_ONE + WEIGHT_DESC_HALF;","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_WEIGHT));","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ncduy0303":3,"wui-hong":17,"jeffrey-jian":45}},{"path":"src/test/java/seedu/spendnsplit/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalTransactions.DINNER;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.SpendNSplitBookBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        assertEquals(new SpendNSplit(), new SpendNSplit(modelManager.getSpendNSplitBook()));","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"        userPrefs.setSpendNSplitBookFilePath(Paths.get(\"spendnsplit/book/file/path\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"        userPrefs.setSpendNSplitBookFilePath(Paths.get(\"new/spendnsplit/book/file/path\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    public void setSpendNSplitBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSpendNSplitBookFilePath(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"    public void setSpendNSplitBookFilePath_validPath_setsSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        Path path \u003d Paths.get(\"spendnsplit/book/file/path\");","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        modelManager.setSpendNSplitBookFilePath(path);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        assertEquals(path, modelManager.getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    public void hasTransaction_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTransaction(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"    public void hasPerson_personNotInSpendNSplitBook_returnsFalse() {","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"    public void hasTransaction_transactionNotInSpendNSplitBook_returnsFalse() {","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(modelManager.hasTransaction(DINNER));","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"    public void hasPerson_personInSpendNSplitBook_returnsTrue() {","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"    public void hasTransaction_transactionInSpendNSplitBook_returnsTrue() {","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        modelManager.addPerson(BENSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"        modelManager.addTransaction(DINNER);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(modelManager.hasTransaction(DINNER));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"    public void getFilteredTransactionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"            UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTransactionList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit spendNSplit \u003d new SpendNSplitBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit differentSpendNSplit \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"        modelManager \u003d new ModelManager(spendNSplit, userPrefs);","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(spendNSplit, userPrefs);","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"        // different spendNSplitBook -\u003e returns false","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSpendNSplit, userPrefs)));","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"        assertFalse(modelManager.equals(new ModelManager(spendNSplit, userPrefs)));","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"        differentUserPrefs.setSpendNSplitBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"        assertFalse(modelManager.equals(new ModelManager(spendNSplit, differentUserPrefs)));","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jedkohjk":2,"nathanielcalimag":3,"ncduy0303":11,"-":96,"wui-hong":30}},{"path":"src/test/java/seedu/spendnsplit/model/SpendNSplitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalTransactions.LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import java.util.List;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.exceptions.DuplicateTransactionException;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.SpendNSplitBookBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"public class SpendNSplitTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    private final SpendNSplit spendNSplit \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    public void constructor() {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        assertEquals(Collections.emptyList(), spendNSplit.getPersonList());","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        assertEquals(Collections.emptyList(), spendNSplit.getTransactionList());","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e spendNSplit.resetData(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"    public void resetData_withValidReadOnlySpendNSplitBook_replacesData() {","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit newData \u003d getTypicalSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.resetData(newData);","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        assertEquals(newData, spendNSplit);","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"                .build();","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"        List\u003cTransaction\u003e newTransactions \u003d List.of();","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"        SpendNSplitBookStub newData \u003d new SpendNSplitBookStub(newPersons, newTransactions);","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e spendNSplit.resetData(newData));","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e spendNSplit.hasPerson(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"    public void hasPerson_personNotInSpendNSplitBook_returnsFalse() {","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"        assertFalse(spendNSplit.hasPerson(ALICE));","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"    public void hasPerson_personInSpendNSplitBook_returnsTrue() {","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.addPerson(ALICE);","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"        assertTrue(spendNSplit.hasPerson(ALICE));","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"    public void hasPerson_personWithSameIdentityFieldsInSpendNSplitBook_returnsTrue() {","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.addPerson(ALICE);","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"                .build();","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"        assertTrue(spendNSplit.hasPerson(editedAlice));","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"    public void resetData_withDuplicateTransactions_throwsDuplicateTransactionException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"        // Two transactions with the same identity fields","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"        Transaction editedDinner \u003d new TransactionBuilder(LUNCH)","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"            .withAmount(LUNCH.getAmount().toString())","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"            .withDescription(LUNCH.getDescription().toString())","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"            .withPayeeName(LUNCH.getPayeeName().toString())","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"            .withPortions(LUNCH.getPortions())","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"            .withTimestamp(LUNCH.getTimestamp().toString())","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"            .build();","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"        List\u003cPerson\u003e newPersons \u003d List.of();","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"        List\u003cTransaction\u003e newTransactions \u003d Arrays.asList(LUNCH, editedDinner);","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"        SpendNSplitBookStub newData \u003d new SpendNSplitBookStub(newPersons, newTransactions);","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"        assertThrows(DuplicateTransactionException.class, () -\u003e spendNSplit.resetData(newData));","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"    public void hasTransaction_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e spendNSplit.hasTransaction(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"    public void hasTransaction_transactionNotInSpendNSplitBook_returnsFalse() {","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"        assertFalse(spendNSplit.hasTransaction(LUNCH));","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"    public void hasTransaction_transactionInSpendNSplitBook_returnsTrue() {","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit testBook \u003d new SpendNSplitBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"wui-hong"},"content":"        testBook.addTransaction(LUNCH);","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"wui-hong"},"content":"        assertTrue(testBook.hasTransaction(LUNCH));","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"wui-hong"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"wui-hong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e spendNSplit.getPersonList().remove(0));","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"wui-hong"},"content":"    public void sort() {","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit ab \u003d new SpendNSplitBookBuilder().withPerson(ALICE).withPerson(BENSON)","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"wui-hong"},"content":"                .withTransaction(LUNCH).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"wui-hong"},"content":"        ab.setPersonAscendingBalance();","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"wui-hong"},"content":"        assertTrue(ALICE.equals(ab.getPersonList().get(0)));","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"wui-hong"},"content":"        ab.setPersonDescendingBalance();","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"wui-hong"},"content":"        assertTrue(BENSON.equals(ab.getPersonList().get(0)));","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"wui-hong"},"content":"        String expected \u003d SpendNSplit.class.getCanonicalName() + \"{persons\u003d\" + spendNSplit.getPersonList()","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"wui-hong"},"content":"                + \", transactions\u003d\" + spendNSplit.getTransactionList() + \"}\";","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"wui-hong"},"content":"        assertEquals(expected, spendNSplit.toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"wui-hong"},"content":"     * A stub ReadOnlySpendNSplitBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"wui-hong"},"content":"    private static class SpendNSplitBookStub implements ReadOnlySpendNSplitBook {","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"wui-hong"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"wui-hong"},"content":"        private final ObservableList\u003cTransaction\u003e transactions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"wui-hong"},"content":"        SpendNSplitBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTransaction\u003e transactions) {","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"wui-hong"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"wui-hong"},"content":"            this.transactions.setAll(transactions);","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"wui-hong"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"wui-hong"},"content":"            return persons;","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"wui-hong"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"        public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"            return transactions;","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":166,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":167,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":168}},{"path":"src/test/java/seedu/spendnsplit/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"public class UserPrefsTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    public void setSpendNSplitBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSpendNSplitBookFilePath(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":15}},{"path":"src/test/java/seedu/spendnsplit/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(Address.isValidAddress(\"Blk\u003d456, Den Road, #01-355\")); // with equal sign","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(Address.isValidAddress(\"dd\u003d\")); // with trailing equal sign","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"        assertFalse(Address.isValidAddress(\"Leng Inc adr2\u003ddd\u003d\")); // with many equal signs","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":54,"wui-hong":2,"jeffrey-jian":3}},{"path":"src/test/java/seedu/spendnsplit/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":86,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        // Zero keywords matches everything","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ncduy0303":5,"-":78,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    public void isReservedName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        // valid name","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Name.isReservedName(new Name(\"peter jack\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        // Self","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.isReservedName(new Name(\"self\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.isReservedName(new Name(\"SELF\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.isReservedName(new Name(\"Self\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        // others","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.isReservedName(new Name(\"others\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.isReservedName(new Name(\"OTHERS\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.isReservedName(new Name(\"Others\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        // only different capitalization -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(name.equals(new Name(\"vAliD nAmE\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        // same values -\u003e \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(name.compareTo(new Name(\"Valid Name\")) \u003d\u003d 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"        // same object -\u003e \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(name.compareTo(name) \u003d\u003d 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        // self -\u003e \u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(name.compareTo(Name.SELF) \u003e 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.SELF.compareTo(name) \u003c 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"        // others -\u003e \u003c","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(name.compareTo(Name.OTHERS) \u003c 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Name.OTHERS.compareTo(name) \u003e 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        // smaller value -\u003e \u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(name.compareTo(new Name(\"Other Valid Name\")) \u003e 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jedkohjk":38,"nathanielcalimag":3,"-":58,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"                .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB).build();","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"                + \", telegramHandle\u003d\" + ALICE.getTelegramHandle()","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jedkohjk":4,"-":84,"wui-hong":14}},{"path":"src/test/java/seedu/spendnsplit/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":58,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/person/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"        String invalidTelegramHandle \u003d \"\";","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidTelegramHandle));","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"        // null address","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidTelegramHandle(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        // invalid addresses","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@ \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@123 2312\")); // contains space","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@a12!d\")); // contains special characters that are not _","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@aasd\")); // has less than 5 characters after @","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        // valid addresses","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@ryanlee\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@1234z\")); // 5 characters","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(\"@1892mjs_sdsed_223\")); // long TelegramHandle","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"        TelegramHandle telegramHandle \u003d new TelegramHandle(\"@valid_\");","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"        assertTrue(telegramHandle.equals(new TelegramHandle(\"@valid_\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        assertTrue(telegramHandle.equals(telegramHandle));","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"        assertFalse(telegramHandle.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        assertFalse(telegramHandle.equals(5.0f));","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        assertFalse(telegramHandle.equals(new TelegramHandle(\"@notvalid_\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"wui-hong":58}},{"path":"src/test/java/seedu/spendnsplit/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.person;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":166,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":24,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/AmountTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"class AmountTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Amount(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public void constructor_invalidAmount_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"        String invalidAmount \u003d \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Amount(invalidAmount));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public void isValidAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        // null amount","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(NullPointerException.class, () -\u003e Amount.isValidAmount(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"        // invalid amount","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(Amount.isValidAmount(\"\")); // empty string","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(Amount.isValidAmount(\"1.2.3\")); // contains multiple decimal points","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        // valid amount","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(Amount.isValidAmount(\"123\")); // numbers without decimal point","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(Amount.isValidAmount(\"123.45\")); // numbers with decimal point","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(Amount.isValidAmount(","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"            \"123.4567890123456789012345678901234567890123456789012345678901234567890\")); // long numbers","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Amount.isValidAmount(\"1/2\")); // fractional form","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Amount.isValidAmount(\"1 / 2\")); // fractional form with space","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Amount.isValidAmount(\"-1/2\")); // fractional form with negative","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Amount.isValidAmount(\"1.0/2.0\")); // fractional form with decimals","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(Amount.isValidAmount(\"-123\")); // negative numbers without decimal point","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(Amount.isValidAmount(\"-123.45\")); // negative numbers with decimal point","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Amount.isValidAmount(\"3.\")); // contains no numbers after decimal point","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Amount.isValidAmount(\".12\")); // contains no numbers before decimal point","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Amount.isValidAmount(\"1.  2\")); // contains spaces","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    public void equals() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"        Amount amount \u003d new Amount(\"1.23\");","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(amount, new Amount(\"1.23\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(amount, amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(null, amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(\"String\", amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(amount, new Amount(\"2.34\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":4,"nathanielcalimag":4,"ncduy0303":58,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    public void isValidDescription() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        // null description","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        // invalid descriptions","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Description.isValidDescription(\"\u003d\")); // special character","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        // valid descriptions","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Description.isValidDescription(\"Dinner\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Description.isValidDescription(\"-\")); // one character","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Description.isValidDescription(\"Raffles Hall Cluster Event Logistics: Food,\"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"                + \"Transportation and Miscellaneous Expenses\")); // long description","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"        Description description \u003d new Description(\"Dinner\");","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        Description otherDescription \u003d new Description(\"Dinner\");","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(description.hashCode(), otherDescription.hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"        Description description \u003d new Description(\"Valid Description\");","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(description, new Description(\"Valid Description\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(description, description);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(null, description);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(description.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(description, new Description(\"Other Valid Description\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":1,"nathanielcalimag":64,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/TimestampTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"public class TimestampTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timestamp((String) null));","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public void constructor_invalidTimestamp_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        String invalidTimestamp \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timestamp(invalidTimestamp));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    public void isValidTimestamp() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        // null timestamp","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(NullPointerException.class, () -\u003e Timestamp.isValidTimestamp(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        // invalid timestamps","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Timestamp.isValidTimestamp(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"2023-10-13T12:34\")); // incorrect format","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"12/13/2020 12:00\")); // invalid date","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"12/00/2020 12:00\")); // invalid date","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"00/12/2020\")); // invalid date","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"12/12/2020 24:00\")); // invalid time","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"23:60\")); // invalid time","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"12/12/2020  12:00\")); // extra space","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(Timestamp.isValidTimestamp(\"12:00 12/12/2020\")); // time before date","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        // valid timestamps","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Timestamp.isValidTimestamp(\"12/12/2020 12:00\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Timestamp.isValidTimestamp(\"12:00\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Timestamp.isValidTimestamp(\"00:00\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Timestamp.isValidTimestamp(\"23:59\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Timestamp.isValidTimestamp(\"12/12/2020\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        Timestamp timestamp \u003d new Timestamp(\"13/10/2023 12:34\");","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        Timestamp otherTimestamp \u003d new Timestamp(\"13/10/2023 12:34\");","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(timestamp.hashCode(), otherTimestamp.hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"        Timestamp timestamp \u003d new Timestamp(\"13/10/2023 12:34\");","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(timestamp, new Timestamp(\"13/10/2023 12:34\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(timestamp, timestamp);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(null, timestamp);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(timestamp.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        assertNotEquals(timestamp, new Timestamp(\"13/10/2023 12:33\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        Timestamp timestamp1 \u003d new Timestamp(\"13/10/2023 12:34\");","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        Timestamp timestamp2 \u003d new Timestamp(\"13/10/2023\");","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        // same value","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(timestamp1.compareTo(new Timestamp(\"13/10/2023 12:34\")) \u003d\u003d 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        // smaller value","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(timestamp1.compareTo(timestamp2) \u003e 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        // larger value","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(timestamp2.compareTo(timestamp1) \u003c 0);","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":33,"nathanielcalimag":56,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/TransactionContainsPersonNamesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.BENSON_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.CARL_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"public class TransactionContainsPersonNamesPredicateTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"        List\u003cName\u003e firstPredicateNameList \u003d List.of(new Name(\"first\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        List\u003cName\u003e secondPredicateNameList \u003d List.of(new Name(\"first\"), new Name(\"second\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), firstPredicateNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), secondPredicateNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), firstPredicateNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"        // different name list -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        // different keywords list -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        assertNotEquals(firstPredicate, new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"a\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"                firstPredicateNameList));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"    public void test_transactionContainsPersonNames_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        // One name","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), List.of(CARL.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPayeeName(CARL.getName().fullName).build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPortions(Set.of(CARL_PORTION)).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        // Multiple names","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"        predicate \u003d new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(),","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"                List.of(BENSON.getName(), CARL.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPayeeName(CARL.getName().fullName).build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new TransactionBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(ALICE.getName().fullName).withPortions(Set.of(BENSON_PORTION, CARL_PORTION)).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPortions(Set.of(BENSON_PORTION)).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPortions(Set.of(ALICE_PORTION, CARL_PORTION)).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"    public void test_transactionContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"        // One keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"A\"), List.of());","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withDescription(\"a\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withDescription(\"b a\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        // Multiple keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"                new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"A\", \"B\"), List.of());","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withDescription(\"b\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withDescription(\"a b\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"    public void test_transactionDoesNotContainNames_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), List.of());","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPayeeName(CARL.getName().fullName).build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(predicate.test(new TransactionBuilder().withPortions(Set.of(CARL_PORTION)).build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"    public void test_transactionDoesNotContainPersonNames_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"                new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), List.of(new Name(\"Carol\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(predicate.test(new TransactionBuilder().withPayeeName(CARL.getName().fullName).build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(predicate.test(new TransactionBuilder().withPortions(Set.of(CARL_PORTION)).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"    public void test_transactionDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"                    new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(\"A\"), List.of());","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(predicate.test(new TransactionBuilder().withDescription(\"B\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"ncduy0303"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"ncduy0303"},"content":"        List\u003cName\u003e names \u003d List.of(new Name(\"name1\"), new Name(\"name2\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"        TransactionContainsKeywordsAndPersonNamesPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"            new TransactionContainsKeywordsAndPersonNamesPredicate(List.of(), names);","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"        String expected \u003d TransactionContainsKeywordsAndPersonNamesPredicate.class.getCanonicalName()","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"            + \"{keywords\u003d\" + List.of() + \", personNames\u003d\" + names + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jedkohjk":51,"ncduy0303":62,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/TransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.BENSON_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.CARL_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.SELF_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PortionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"class TransactionTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e transaction.getPortions().remove(0));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    public void isSameTransaction() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        // same values but different objects -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(transaction.isSameTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"                new TransactionBuilder().withTimestamp(transaction.getTimestamp().toString()).build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        // different timestamps -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(transaction.isSameTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"                new TransactionBuilder().withTimestamp(\"13/10/2023 12:34\").build()));","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(transaction.isSameTransaction(transaction));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(transaction.isSameTransaction(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        // different amount -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(transaction.isSameTransaction(new TransactionBuilder().withAmount(\"100\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(transaction.isSameTransaction(new TransactionBuilder().withDescription(\"Description\").build()));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        // different payeeName -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(transaction.isSameTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"                new TransactionBuilder().withPayeeName(BOB.getName().fullName).build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"        // different portions -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(BENSON_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(transaction.isSameTransaction(new TransactionBuilder().withPortions(portions).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"        // same values but different objects -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(transaction, new TransactionBuilder().withTimestamp(","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"nathanielcalimag"},"content":"                transaction.getTimestamp().toString()).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"        // different timestamps -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        assertNotEquals(transaction, new TransactionBuilder().withTimestamp(\"13/10/2023 12:34\").build());","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(transaction, transaction);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(null, transaction);","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(transaction, 5.0f);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"        // different amount -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(transaction, new TransactionBuilder().withAmount(\"100\").build());","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(transaction, new TransactionBuilder().withDescription(\"Description\").build());","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"        // different payee -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(transaction, new TransactionBuilder().withPayeeName(BOB.getName().fullName).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"ncduy0303"},"content":"        // different portions -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(new PortionBuilder(BENSON_PORTION).withWeight(\"1\").build());","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(transaction, new TransactionBuilder().withPortions(portions).build());","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"jedkohjk"},"content":"        // equivalent portions -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"        Set\u003cPortion\u003e portionsDuplicate \u003d Set.of(new PortionBuilder(BENSON_PORTION).withWeight(\"2\").build());","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(new TransactionBuilder().withPortions(portions).build(),","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"jedkohjk"},"content":"                new TransactionBuilder().withPortions(portionsDuplicate).build());","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"jedkohjk"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().build().compareTo(new TransactionBuilder().build()) \u003d\u003d 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().withTimestamp(\"10/10/2020\").build()","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"jedkohjk"},"content":"                .compareTo(new TransactionBuilder().withTimestamp(\"10/10/1010\").build()) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().withAmount(\"1\").build()","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"                .compareTo(new TransactionBuilder().withAmount(\"2\").build()) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().withDescription(\"A\").build()","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"                .compareTo(new TransactionBuilder().withDescription(\"B\").build()) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().withPayeeName(Name.SELF.fullName).build()","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"                .compareTo(new TransactionBuilder().withPayeeName(\"A\").build()) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().withPortions(Set.of(SELF_PORTION, ALICE_PORTION, BENSON_PORTION)).build()","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"                .compareTo(new TransactionBuilder().withPortions(Set.of(SELF_PORTION, ALICE_PORTION)).build()) \u003c 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(new TransactionBuilder().withPortions(Set.of(SELF_PORTION, BENSON_PORTION)).build()","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"                .compareTo(new TransactionBuilder().withPortions(Set.of(SELF_PORTION, ALICE_PORTION)).build()) \u003e 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"ncduy0303"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"ncduy0303"},"content":"        String expected \u003d Transaction.class.getCanonicalName() + \"{amount\u003d\" + transaction.getAmount()","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"            + \", description\u003d\" + transaction.getDescription() + \", payeeName\u003d\" + transaction.getPayeeName()","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"            + \", portions\u003d\" + transaction.getPortions()","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"            + \", timestamp\u003d\" + transaction.getTimestamp() + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expected, transaction.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"ncduy0303"},"content":"    public void isPersonInvolved_payerInTransaction_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION, CARL_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(BOB.getName().fullName).withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(transaction.isPersonInvolved(ALICE.getName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(transaction.isPersonInvolved(CARL.getName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"ncduy0303"},"content":"    public void isPersonInvolved_payeeInTransaction_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION, CARL_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(BOB.getName().fullName).withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(transaction.isPersonInvolved(BOB.getName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"ncduy0303"},"content":"    public void isPersonInvolved_personNotInTransaction_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION, CARL_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(BOB.getName().fullName).withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(transaction.isPersonInvolved(DANIEL.getName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ncduy0303"},"content":"    public void getAllInvolvedPersonNames_transactionWithPayerAndPayee_returnsCorrectNames() {","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION, CARL_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"ncduy0303"},"content":"            .withPayeeName(BENSON.getName().fullName).withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(Set.of(ALICE.getName(), CARL.getName(), BENSON.getName()),","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"nathanielcalimag"},"content":"            transaction.getAllInvolvedPersonNames());","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"ncduy0303"},"content":"    public void getPortion_singlePortion_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().withAmount(\"100\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"ncduy0303"},"content":"        BigFraction expectedPortion \u003d BigFraction.of(100, 1);","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expectedPortion, transaction.getPortionAmount(ALICE.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"ncduy0303"},"content":"    public void getPortion_multiplePortions_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"ncduy0303"},"content":"            ALICE_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"ncduy0303"},"content":"            BENSON_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"ncduy0303"},"content":"            CARL_PORTION","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"ncduy0303"},"content":"        );","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().withAmount(\"600\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.of(100, 1),","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmount(ALICE.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.of(200, 1),","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmount(BENSON.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.of(300, 1),","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmount(CARL.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"ncduy0303"},"content":"    public void getPortionOwed_otherPayeeSinglePortion_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction transaction \u003d new TransactionBuilder().withPayeeName(ALICE.getName().fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"ncduy0303"},"content":"                .withAmount(\"100\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(BigFraction.ZERO, transaction.getPortionAmountOwedSelf(ALICE.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"ncduy0303"},"content":"    public void getPortionOwed_otherPayeeMultiplePortions_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"ncduy0303"},"content":"            ALICE_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"ncduy0303"},"content":"            BENSON_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"ncduy0303"},"content":"            CARL_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"ncduy0303"},"content":"            SELF_PORTION","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"nathanielcalimag"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction transaction \u003d new TransactionBuilder().withPayeeName(ALICE.getName().fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":214,"author":{"gitId":"ncduy0303"},"content":"                .withAmount(\"1000\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(BigFraction.of(-400, 1), transaction.getPortionAmountOwedSelf(ALICE.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(BigFraction.ZERO, transaction.getPortionAmountOwedSelf(BENSON.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(BigFraction.ZERO, transaction.getPortionAmountOwedSelf(CARL.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(BigFraction.ZERO, transaction.getPortionAmountOwedSelf(Name.SELF));","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":220,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":221,"author":{"gitId":"ncduy0303"},"content":"    public void getPortionOwed_selfPayeeSinglePortion_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction transaction \u003d new TransactionBuilder().withPayeeName(Name.SELF.fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"ncduy0303"},"content":"                .withAmount(\"100\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"nathanielcalimag"},"content":"        BigFraction expectedPortion \u003d BigFraction.of(100, 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expectedPortion, transaction.getPortionAmountOwedSelf(ALICE.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"ncduy0303"},"content":"    public void getPortionOwed_selfPayeeMultiplePortions_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"ncduy0303"},"content":"            ALICE_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"ncduy0303"},"content":"            BENSON_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"ncduy0303"},"content":"            CARL_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"ncduy0303"},"content":"            SELF_PORTION","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"nathanielcalimag"},"content":"        );","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"nathanielcalimag"},"content":"        Transaction transaction \u003d new TransactionBuilder().withPayeeName(Name.SELF.fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":238,"author":{"gitId":"ncduy0303"},"content":"                .withAmount(\"1000\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.of(100, 1),","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmountOwedSelf(ALICE.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.of(200, 1),","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmountOwedSelf(BENSON.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.of(300, 1),","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmountOwedSelf(CARL.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(BigFraction.ZERO,","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"ncduy0303"},"content":"                transaction.getPortionAmountOwedSelf(Name.SELF));","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":248,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":249,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":250,"author":{"gitId":"ncduy0303"},"content":"    public void getAllPortions_singlePortion_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(ALICE_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().withAmount(\"100\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"ncduy0303"},"content":"        Person person \u003d new PersonBuilder().withName(ALICE_PORTION.getPersonName().fullName).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"ncduy0303"},"content":"        Map\u003cName, BigFraction\u003e expectedPortions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":255,"author":{"gitId":"ncduy0303"},"content":"        expectedPortions.put(person.getName(), BigFraction.of(100, 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":256,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expectedPortions, transaction.getAllPortionAmounts());","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"ncduy0303"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":260,"author":{"gitId":"ncduy0303"},"content":"    public void getAllPortions_multiplePortions_returnsCorrectPortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cPortion\u003e portions \u003d Set.of(","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"ncduy0303"},"content":"            ALICE_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"ncduy0303"},"content":"            BENSON_PORTION,","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"ncduy0303"},"content":"            CARL_PORTION","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"ncduy0303"},"content":"        );","lastModifiedDate":"2023-10-12"},{"lineNumber":266,"author":{"gitId":"ncduy0303"},"content":"        Transaction transaction \u003d new TransactionBuilder().withAmount(\"1200\").withPortions(portions).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"ncduy0303"},"content":"        Map\u003cName, BigFraction\u003e expectedPortions \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":268,"author":{"gitId":"nathanielcalimag"},"content":"        expectedPortions.put(new Name(ALICE.getName().toString()), BigFraction.of(200, 1));","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"nathanielcalimag"},"content":"        expectedPortions.put(new Name(BENSON.getName().toString()), BigFraction.of(400, 1));","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"nathanielcalimag"},"content":"        expectedPortions.put(new Name(CARL.getName().toString()), BigFraction.of(600, 1));","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(expectedPortions, transaction.getAllPortionAmounts());","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":273,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"jedkohjk"},"content":"    public void isValid() {","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(new TransactionBuilder().build().isValid(Set.of()));","lastModifiedDate":"2023-10-15"},{"lineNumber":277,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(new TransactionBuilder().withPayeeName(Name.SELF.fullName).build().isValid(Set.of()));","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"jedkohjk"},"content":"        assertFalse(new TransactionBuilder().withPayeeName(Name.SELF.fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"jedkohjk"},"content":"                .withAmount(\"0\").build().isValid(Set.of()));","lastModifiedDate":"2023-10-15"},{"lineNumber":280,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(new TransactionBuilder().withPortions(Set.of(new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"ncduy0303"},"content":"                .withName(Name.SELF.fullName).build(), ALICE_PORTION)).build().isValid(Set.of()));","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(new TransactionBuilder().withPayeeName(Name.SELF.fullName).withPortions(Set.of(new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"ncduy0303"},"content":"                .withName(Name.SELF.fullName).build(), ALICE_PORTION)).build().isValid(Set.of()));","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(new TransactionBuilder().withPayeeName(Name.SELF.fullName).withPortions(Set.of(new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"ncduy0303"},"content":"                .withName(Name.SELF.fullName).withWeight(\"0\").build(), ALICE_PORTION)).build()","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"jedkohjk"},"content":"                .isValid(Set.of(ALICE.getName())));","lastModifiedDate":"2023-10-15"},{"lineNumber":287,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":288,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":34,"nathanielcalimag":48,"ncduy0303":189,"wui-hong":17}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/UniqueTransactionListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jeffrey-jian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.BENSON_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.SELF_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.exceptions.TransactionNotFoundException;","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TransactionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TypicalPersons;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"class UniqueTransactionListTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Unit Tests \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"jedkohjk"},"content":"    private static TransactionWithAliceStub transactionWithAliceStub;","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"jedkohjk"},"content":"    static {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"jedkohjk"},"content":"            transactionWithAliceStub \u003d new TransactionWithAliceStub();","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"            //","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"    private static TransactionWithBobStub transactionWithBobStub;","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"    static {","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            transactionWithBobStub \u003d new TransactionWithBobStub();","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"            //","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"    private final UniqueTransactionList transactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"jeffrey-jian"},"content":"    public void add_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e transactionList.add(null, Set.of()));","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jeffrey-jian"},"content":"    public void add_validTransaction_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(transactionList.contains(transactionWithAliceStub));","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransaction_nullTargetTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(NullPointerException.class, () -\u003e transactionList.setTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"jedkohjk"},"content":"                null, new TransactionWithAliceStub(), Set.of(ALICE.getName())));","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransaction_nullEditedTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"                transactionList.setTransaction(transactionWithAliceStub, null, Set.of(ALICE.getName())));","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransaction_targetTransactionNotInList_throwsTransactionNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(TransactionNotFoundException.class, () -\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"                transactionList.setTransaction(transactionWithBobStub, transactionWithAliceStub,","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"                Set.of(ALICE.getName(), BOB.getName(), BENSON.getName())));","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransaction_editedTransactionIsSameTransaction_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        transactionList.setTransaction(transactionWithAliceStub, transactionWithAliceStub,","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"                Set.of(ALICE.getName(), BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"nathanielcalimag"},"content":"        UniqueTransactionList expectedTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"jedkohjk"},"content":"        expectedTransactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedTransactionList, transactionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransaction_editedTransactionIsDifferentTransaction_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"        transactionList.setTransaction(transactionWithAliceStub, transactionWithBobStub,","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"                Set.of(ALICE.getName(), BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"        UniqueTransactionList expectedTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"jedkohjk"},"content":"        expectedTransactionList.add(transactionWithBobStub, Set.of(BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedTransactionList, transactionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"jeffrey-jian"},"content":"    public void remove_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(NullPointerException.class, () -\u003e transactionList.remove(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"jeffrey-jian"},"content":"    public void remove_transactionDoesNotExist_throwsTransactionNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(TransactionNotFoundException.class, () -\u003e transactionList.remove(transactionWithAliceStub));","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"jeffrey-jian"},"content":"    public void remove_existingTransaction_removesTransaction() {","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"nathanielcalimag"},"content":"        transactionList.remove(transactionWithAliceStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"        UniqueTransactionList expectedTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedTransactionList, transactionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransactions_nullTransactionList_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"jedkohjk"},"content":"                transactionList.setTransactions((UniqueTransactionList) null, Set.of()));","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransactions_transactionList_replacesOwnListWithProvidedTransactionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"nathanielcalimag"},"content":"        UniqueTransactionList expectedTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"jedkohjk"},"content":"        expectedTransactionList.add(transactionWithBobStub, Set.of(BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"jedkohjk"},"content":"        transactionList.setTransactions(expectedTransactionList,","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"jedkohjk"},"content":"                Set.of(ALICE.getName(), BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedTransactionList, transactionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"jeffrey-jian"},"content":"    public void setTransactions_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(transactionWithAliceStub, Set.of(ALICE.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"nathanielcalimag"},"content":"        List\u003cTransaction\u003e transactionCollectionsList \u003d Collections.singletonList(transactionWithBobStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"jedkohjk"},"content":"        transactionList.setTransactions(transactionCollectionsList,","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"jedkohjk"},"content":"                Set.of(ALICE.getName(), BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"nathanielcalimag"},"content":"        UniqueTransactionList expectedTransactionList \u003d new UniqueTransactionList();","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"jedkohjk"},"content":"        expectedTransactionList.add(transactionWithBobStub, Set.of(BOB.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(expectedTransactionList, transactionList);","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"jeffrey-jian"},"content":"    void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"jeffrey-jian"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"jeffrey-jian"},"content":"                -\u003e transactionList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"jeffrey-jian"},"content":"    void testEquals_notTransactionList_returnsFalse() {","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"jeffrey-jian"},"content":"        Object notATransactionList \u003d new Object();","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(transactionList, notATransactionList);","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"jeffrey-jian"},"content":"    void testEquals_sameObject_returnsTrue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(transactionList, transactionList);","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"nathanielcalimag"},"content":"    void hashcode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(transactionList.hashCode(), transactionList.hashCode());","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"jeffrey-jian"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"jeffrey-jian"},"content":"    void testToString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"jeffrey-jian"},"content":"        assertEquals(transactionList.asUnmodifiableObservableList().toString(), transactionList.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"jedkohjk"},"content":"    void testGetBalance() {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"        transactionList.add(new TransactionBuilder().withAmount(\"3\").withPayeeName(Name.SELF.fullName)","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"jedkohjk"},"content":"            .withPortions(Set.of(ALICE_PORTION, BENSON_PORTION)).build(), Set.of(ALICE.getName(), BENSON.getName()));","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(transactionList.getBalance(ALICE.getName()).equals(BigFraction.ONE));","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(UniqueTransactionList.getBalance(BENSON.getName(),","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"                transactionList.asUnmodifiableObservableList()).equals(BigFraction.ONE.add(BigFraction.ONE)));","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"nathanielcalimag"},"content":"    private static class TransactionWithAliceStub extends Transaction {","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"nathanielcalimag"},"content":"        private static final Description description \u003d new Description(\"Stub\");","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"jedkohjk"},"content":"        private static final Name payeeName \u003d Name.SELF;","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"ncduy0303"},"content":"        private static final Set\u003cPortion\u003e portions \u003d new HashSet\u003c\u003e(Collections.singletonList(ALICE_PORTION));","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"jedkohjk"},"content":"        public TransactionWithAliceStub() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":194,"author":{"gitId":"jedkohjk"},"content":"            super(new Amount(\"1\"), description, payeeName, portions);","lastModifiedDate":"2023-11-06"},{"lineNumber":195,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"nathanielcalimag"},"content":"    private static class TransactionWithBobStub extends Transaction {","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"nathanielcalimag"},"content":"        private static final Description description \u003d new Description(\"Stub\");","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"nathanielcalimag"},"content":"        private static final Name payeeName \u003d TypicalPersons.BOB.getName();","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"jedkohjk"},"content":"        private static final Set\u003cPortion\u003e portions \u003d Set.of(SELF_PORTION, BENSON_PORTION);","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"jedkohjk"},"content":"        public TransactionWithBobStub() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":205,"author":{"gitId":"jedkohjk"},"content":"            super(new Amount(\"1\"), description, payeeName, portions);","lastModifiedDate":"2023-11-06"},{"lineNumber":206,"author":{"gitId":"nathanielcalimag"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":64,"nathanielcalimag":33,"ncduy0303":1,"wui-hong":12,"jeffrey-jian":98}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/portion/PortionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction.portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PortionBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"class PortionTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    public void isSamePortion() {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"        Portion portion \u003d new PortionBuilder().build();","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"        assertTrue(portion.isSamePortion(new PortionBuilder().build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(portion.isSamePortion(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"        // different attributes -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"        String editedName \u003d \"Daniel\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"        String editedWeight \u003d \"10\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(portion.isSamePortion(new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"                .withName(editedName).withWeight(editedWeight).build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(portion.isSamePortion(new PortionBuilder().withName(editedName).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"        assertFalse(portion.isSamePortion(new PortionBuilder().withWeight(editedWeight).build()));","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        String name \u003d \"Daniel\";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        String weight \u003d \"10\";","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        Portion portion \u003d new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"                .withName(name).withWeight(weight).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(portion, portion);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(portion, new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"                .withName(name).withWeight(weight).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"        String otherName \u003d \"Elle\";","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        String otherWeight \u003d \"20.0\";","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"        Portion otherPortion \u003d new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"nathanielcalimag"},"content":"                .withName(otherName).withWeight(otherWeight).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(portion, otherPortion);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        assertNotEquals(portion, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"        String name \u003d \"Daniel\";","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        String weight \u003d \"10\";","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        Portion portion \u003d new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"                .withName(name).withWeight(weight).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        Portion otherPortion \u003d new PortionBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"                .withName(name).withWeight(weight).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(portion, otherPortion);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"nathanielcalimag":44,"ncduy0303":17,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/model/transaction/portion/WeightTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.model.transaction.portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"class WeightTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Weight((String) null));","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"    public void constructor_invalidWeight_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"        String invalidWeight \u003d \"\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Weight(invalidWeight));","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"    public void isValidWeight() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"        // null weight","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(NullPointerException.class, () -\u003e Weight.isValidWeight(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"        // invalid weights","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Weight.isValidWeight(\"\")); // empty string","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Weight.isValidWeight(\"a\")); // non-number","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(Weight.isValidWeight(\" \")); // spaces only","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"        // valid weights","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"1/2\")); // fractional form","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"1 / 2\")); // fractional form with space","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"1.0/2.0\")); // fractional form with decimals","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Weight.isValidWeight(\"-1\")); // negative number","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Weight.isValidWeight(\"-1/2\")); // fractional form with negative","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"100.99\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"0\")); // zero","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"0.0\")); // zero with decimal places","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"010\")); // leading 0","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"        assertTrue(Weight.isValidWeight(\"010.00\")); // leading 0 with decimal places","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Weight.isValidWeight(\".0\")); // decimal without 0","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Weight.isValidWeight(\"1 \")); // trailing space","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        assertTrue(Weight.isValidWeight(\"1. 0\")); // spaces between","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    public void hashcode() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"        Weight weight \u003d new Weight(\"21.50\");","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"        Weight otherWeight \u003d new Weight(\"21.50\");","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(weight, otherWeight);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    public void equals() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        Weight weight \u003d new Weight(\"21.50\");","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(weight, new Weight(\"21.50\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(weight, weight);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(null, weight);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"nathanielcalimag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"        assertFalse(weight.equals(5.0f));","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"nathanielcalimag"},"content":"        assertNotEquals(weight, new Weight(\"10\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":8,"nathanielcalimag":67,"wui-hong":2}},{"path":"src/test/java/seedu/spendnsplit/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.PersonBuilder;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"@!sd\";","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BENSON.getTelegramHandle().toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jedkohjk"},"content":"        Person person \u003d BENSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPerson jsonPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(person, jsonPerson.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        person \u003d new PersonBuilder(BENSON).withAddress(null).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"        jsonPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(person, jsonPerson.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        person \u003d new PersonBuilder(BENSON).withEmail(null).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        jsonPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(person, jsonPerson.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        person \u003d new PersonBuilder(BENSON).withPhone(null).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        jsonPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(person, jsonPerson.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        person \u003d new PersonBuilder(BENSON).withTelegramHandle(null).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        jsonPerson \u003d new JsonAdaptedPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(person, jsonPerson.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE, VALID_EMAIL,","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_reservedName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"jedkohjk"},"content":"                new JsonAdaptedPerson(Name.SELF.fullName, VALID_PHONE, VALID_TELEGRAM_HANDLE, VALID_EMAIL,","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"jedkohjk"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d String.format(Name.RESERVED_CONSTRAINTS, Name.SELF.fullName);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_emptyPhone_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"jedkohjk"},"content":"                new JsonAdaptedPerson(VALID_NAME, \"\", VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"jedkohjk"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(new PersonBuilder(BENSON).withPhone(null).build(), person.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_nullTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"wui-hong"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_emptyTelegramHandle_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"jedkohjk"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, \"\",","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(new PersonBuilder(BENSON).withTelegramHandle(null).build(), person.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"wui-hong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"wui-hong"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"wui-hong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"wui-hong"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"wui-hong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"wui-hong"},"content":"                null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_emptyEmail_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"jedkohjk"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"jedkohjk"},"content":"                        \"\", VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(new PersonBuilder(BENSON).withEmail(null).build(), person.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"wui-hong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"wui-hong"},"content":"                        VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"wui-hong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"wui-hong"},"content":"                VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_emptyAddress_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"jedkohjk"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"jedkohjk"},"content":"                        VALID_EMAIL, \"\", VALID_TAGS);","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"jedkohjk"},"content":"        assertEquals(new PersonBuilder(BENSON).withAddress(null).build(), person.toModelType());","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"wui-hong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM_HANDLE,","lastModifiedDate":"2023-10-22"},{"lineNumber":191,"author":{"gitId":"wui-hong"},"content":"                        VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jedkohjk":56,"-":90,"wui-hong":49}},{"path":"src/test/java/seedu/spendnsplit/storage/JsonAdaptedPortionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"public class JsonAdaptedPortionTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Portion\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String INVALID_NAME \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"jedkohjk"},"content":"    private static final String INVALID_WEIGHT \u003d \"-1/2/3\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String VALID_NAME \u003d BOB.getName().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String VALID_WEIGHT \u003d \"0.5\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public void toModelType_validPortionDetails_returnsPortion() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"        JsonAdaptedPortion portion \u003d new JsonAdaptedPortion(ALICE_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"        assertEquals(ALICE_PORTION, portion.toModelType());","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        JsonAdaptedPortion portion \u003d new JsonAdaptedPortion(INVALID_NAME, VALID_WEIGHT);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, portion::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        JsonAdaptedPortion portion \u003d new JsonAdaptedPortion(null, VALID_WEIGHT);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, portion::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_invalidWeight_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"        JsonAdaptedPortion portion \u003d new JsonAdaptedPortion(VALID_NAME, INVALID_WEIGHT);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d Weight.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, portion::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_zeroDivWeight_throwsIllegalValueException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedPortion portion \u003d new JsonAdaptedPortion(VALID_NAME, \"1/0\");","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d FractionUtil.ZERO_DIVISION;","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, portion::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_nullWeight_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"        JsonAdaptedPortion portion \u003d new JsonAdaptedPortion(VALID_NAME, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, portion::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":8,"nathanielcalimag":37,"ncduy0303":13,"wui-hong":7}},{"path":"src/test/java/seedu/spendnsplit/storage/JsonAdaptedTransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"nathanielcalimag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.storage.JsonAdaptedTransaction.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalTransactions.LUNCH;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.commons.util.FractionUtil;","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"public class JsonAdaptedTransactionTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String INVALID_AMOUNT \u003d \"1-3\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String INVALID_PAYEE_NAME \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String INVALID_TIMESTAMP \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    private static final List\u003cJsonAdaptedPortion\u003e INVALID_PORTIONS \u003d List.of();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String VALID_AMOUNT \u003d LUNCH.getAmount().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String VALID_DESCRIPTION \u003d LUNCH.getDescription().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String VALID_PAYEE_NAME \u003d LUNCH.getPayeeName().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    private static final List\u003cJsonAdaptedPortion\u003e VALID_PORTIONS \u003d LUNCH.getPortions().stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"            .map(JsonAdaptedPortion::new)","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nathanielcalimag"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    private static final String VALID_TIMESTAMP \u003d LUNCH.getTimestamp().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_validTransactionDetails_returnsTransaction() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(LUNCH);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"        assertEquals(LUNCH, transaction.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_invalidAmount_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"                INVALID_AMOUNT, VALID_DESCRIPTION, VALID_PAYEE_NAME, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d Amount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_nullAmount_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"                new JsonAdaptedTransaction(null, VALID_DESCRIPTION, VALID_PAYEE_NAME, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Amount.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"nathanielcalimag"},"content":"                new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"                        VALID_AMOUNT, INVALID_DESCRIPTION, VALID_PAYEE_NAME, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"                new JsonAdaptedTransaction(VALID_AMOUNT, null, VALID_PAYEE_NAME, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_invalidPayeeName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"                VALID_AMOUNT, VALID_DESCRIPTION, INVALID_PAYEE_NAME, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"    public void toModelType_zeroDivAmount_throwsIllegalValueException() {","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"jedkohjk"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"jedkohjk"},"content":"                \"1/0\", VALID_DESCRIPTION, VALID_PAYEE_NAME, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"jedkohjk"},"content":"        String expectedMessage \u003d FractionUtil.ZERO_DIVISION;","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_nullPayeeName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"                new JsonAdaptedTransaction(VALID_AMOUNT, VALID_DESCRIPTION, null, VALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_invalidTimestamp_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ncduy0303"},"content":"                VALID_AMOUNT, VALID_DESCRIPTION, VALID_PAYEE_NAME, VALID_PORTIONS, INVALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d Timestamp.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"nathanielcalimag"},"content":"    public void toModelType_nullTimestamp_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"                VALID_AMOUNT, VALID_DESCRIPTION, VALID_PAYEE_NAME, VALID_PORTIONS, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timestamp.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"ncduy0303"},"content":"    public void toModelType_invalidPortion_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"ncduy0303"},"content":"                VALID_AMOUNT, VALID_DESCRIPTION, VALID_PAYEE_NAME, INVALID_PORTIONS, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d \"Collection should not be empty\";","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"nathanielcalimag"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"ncduy0303"},"content":"    public void toModelType_nullPortion_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"nathanielcalimag"},"content":"        JsonAdaptedTransaction transaction \u003d new JsonAdaptedTransaction(","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"nathanielcalimag"},"content":"                VALID_AMOUNT, VALID_DESCRIPTION, VALID_PAYEE_NAME, null, VALID_TIMESTAMP);","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"nathanielcalimag"},"content":"        String expectedMessage \u003d \"Collection should not be empty\";","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"nathanielcalimag"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, transaction::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":13,"nathanielcalimag":95,"ncduy0303":14,"wui-hong":9}},{"path":"src/test/java/seedu/spendnsplit/storage/JsonSerializableSpendNSplitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.util.JsonUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.testutil.TypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"public class JsonSerializableSpendNSplitTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableSpendNSplitBookTest\");","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"    private static final Path TYPICAL_SPEND_N_SPLIT_BOOK_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalSpendNSplitBook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonSpendNSplitBook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"            .resolve(\"duplicatePersonSpendNSplitBook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    private static final Path INVALID_TRANSACTION_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"            .resolve(\"invalidTransactionSpendNSplitBook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    private static final Path DUPLICATE_TRANSACTION_FILE \u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateTransactionSpendNSplitBook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        JsonSerializableSpendNSplitBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_SPEND_N_SPLIT_BOOK_FILE,","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"                JsonSerializableSpendNSplitBook.class).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit spendNSplitFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit typicalSpendNSplit \u003d TypicalSpendNSplitBook.getTypicalSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        assertEquals(spendNSplitFromFile, typicalSpendNSplit);","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"        JsonSerializableSpendNSplitBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"                JsonSerializableSpendNSplitBook.class).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        JsonSerializableSpendNSplitBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"                JsonSerializableSpendNSplitBook.class).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSpendNSplitBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_invalidTransactionFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"        JsonSerializableSpendNSplitBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TRANSACTION_FILE,","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"                JsonSerializableSpendNSplitBook.class).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"    public void toModelType_duplicateTansactions_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        JsonSerializableSpendNSplitBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TRANSACTION_FILE,","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"                JsonSerializableSpendNSplitBook.class).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSpendNSplitBook.MESSAGE_DUPLICATE_TRANSACTION,","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":68}},{"path":"src/test/java/seedu/spendnsplit/storage/JsonSpendNSplitBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalTransactions.GROCERIES;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"public class JsonSpendNSplitBookStorageTest {","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSpendNSplitBookStorageTest\");","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"    @TempDir","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"    public Path testFolder;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    public void readSpendNSplitBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSpendNSplitBook(null));","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"    private java.util.Optional\u003cReadOnlySpendNSplitBook\u003e readSpendNSplitBook(String filePath) throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"        return new JsonSpendNSplitBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"                .readSpendNSplitBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"                : null;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wui-hong"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wui-hong"},"content":"        assertFalse(readSpendNSplitBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readSpendNSplitBook(\"notJsonFormatSpendNSplitBook.json\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"    public void readSpendNSplitBook_invalidPersonSpendNSplitBook_throwDataLoadingException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readSpendNSplitBook(\"invalidPersonSpendNSplitBook.json\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wui-hong"},"content":"    public void readSpendNSplitBook_invalidAndValidPersonSpendNSplitBook_throwDataLoadingException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"        assertThrows(DataLoadingException.class, ()","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"                -\u003e readSpendNSplitBook(\"invalidAndValidPersonSpendNSplitBook.json\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"    public void readAndSaveSpendNSplitBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSpendNSplitBook.json\");","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit original \u003d getTypicalSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"wui-hong"},"content":"        JsonSpendNSplitBookStorage jsonSpendNSplitBookStorage \u003d new JsonSpendNSplitBookStorage(filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wui-hong"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wui-hong"},"content":"        jsonSpendNSplitBookStorage.saveSpendNSplitBook(original, filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wui-hong"},"content":"        ReadOnlySpendNSplitBook readBack \u003d jsonSpendNSplitBookStorage.readSpendNSplitBook(filePath).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wui-hong"},"content":"        assertEquals(original, new SpendNSplit(readBack));","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wui-hong"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wui-hong"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wui-hong"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"wui-hong"},"content":"        original.addTransaction(GROCERIES);","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"        jsonSpendNSplitBookStorage.saveSpendNSplitBook(original, filePath);","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"        readBack \u003d jsonSpendNSplitBookStorage.readSpendNSplitBook(filePath).get();","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"        assertEquals(original, new SpendNSplit(readBack));","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"wui-hong"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wui-hong"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wui-hong"},"content":"        jsonSpendNSplitBookStorage.saveSpendNSplitBook(original); // file path not specified","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"wui-hong"},"content":"        readBack \u003d jsonSpendNSplitBookStorage.readSpendNSplitBook().get(); // file path not specified","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"wui-hong"},"content":"        assertEquals(original, new SpendNSplit(readBack));","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"wui-hong"},"content":"    public void saveSpendNSplitBook_nullSpendNSplitBook_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSpendNSplitBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"wui-hong"},"content":"     * Saves {@code spendNSplitBook} at the specified {@code filePath}.","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"wui-hong"},"content":"    private void saveSpendNSplitBook(ReadOnlySpendNSplitBook spendNSplitBook, String filePath) {","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"wui-hong"},"content":"        try {","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"wui-hong"},"content":"            new JsonSpendNSplitBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"wui-hong"},"content":"                    .saveSpendNSplitBook(spendNSplitBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"wui-hong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"wui-hong"},"content":"    public void saveSpendNSplitBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"wui-hong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSpendNSplitBook(new SpendNSplit(), null));","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":114}},{"path":"src/test/java/seedu/spendnsplit/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"jedkohjk"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"    public void readUserPrefs_nullValues_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"        assertDoesNotThrow(() -\u003e readUserPrefs(\"NullPathPrefs.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        assertDoesNotThrow(() -\u003e readUserPrefs(\"NullCommandMap.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        assertDoesNotThrow(() -\u003e readUserPrefs(\"NullAliasToCommand.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"    public void readUserPrefs_invalidCommandMap_loads() {","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        assertDoesNotThrow(() -\u003e readUserPrefs(\"InvalidCommandMap.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"jedkohjk"},"content":"    public void readUserPrefs_emptyCommandMap_loads() {","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"jedkohjk"},"content":"        assertDoesNotThrow(() -\u003e readUserPrefs(\"EmptyCommandMap.json\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"jedkohjk"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"jedkohjk"},"content":"    public void readUserPrefs_duplicateMap_exceptionThrown() {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jedkohjk"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"DuplicateCommandMap.json\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"jedkohjk"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"jedkohjk"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"wui-hong"},"content":"        userPrefs.setSpendNSplitBookFilePath(Paths.get(\"spendnsplitbook.json\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jedkohjk":23,"-":113,"wui-hong":5}},{"path":"src/test/java/seedu/spendnsplit/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.storage;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalSpendNSplitBook.getTypicalSpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.ReadOnlySpendNSplitBook;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.UserPrefs;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"        JsonSpendNSplitBookStorage spendNSplitBookStorage \u003d new JsonSpendNSplitBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"        storageManager \u003d new StorageManager(spendNSplitBookStorage, userPrefsStorage);","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"    public void spendNSplitBookReadSave() throws Exception {","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"         * {@link JsonSpendNSplitBookStorage} class.","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSpendNSplitBookStorageTest} class.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit original \u003d getTypicalSpendNSplitBook();","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"        storageManager.saveSpendNSplitBook(original);","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wui-hong"},"content":"        ReadOnlySpendNSplitBook retrieved \u003d storageManager.readSpendNSplitBook().get();","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wui-hong"},"content":"        assertEquals(original, new SpendNSplit(retrieved));","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"wui-hong"},"content":"    public void getSpendNSplitBookFilePath() {","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wui-hong"},"content":"        assertNotNull(storageManager.getSpendNSplitBookFilePath());","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"wui-hong"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"wui-hong"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"wui-hong"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":52,"wui-hong":19}},{"path":"src/test/java/seedu/spendnsplit/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.util.SampleDataUtil;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"@amy1234\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"        telegramHandle \u003d personToCopy.getTelegramHandle();","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"jedkohjk"},"content":"        this.address \u003d address \u003d\u003d null ? null : new Address(address);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"wui-hong"},"content":"     * Sets the {@code TelegramHandle} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"wui-hong"},"content":"    public PersonBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"jedkohjk"},"content":"        this.telegramHandle \u003d telegramHandle \u003d\u003d null ? null : new TelegramHandle(telegramHandle);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"jedkohjk"},"content":"        this.phone \u003d phone \u003d\u003d null ? null : new Phone(phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"jedkohjk"},"content":"        this.email \u003d email \u003d\u003d null ? null : new Email(email);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"wui-hong"},"content":"        return new Person(name, phone, telegramHandle, email, address, tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jedkohjk":4,"-":87,"wui-hong":18}},{"path":"src/test/java/seedu/spendnsplit/testutil/PersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"ncduy0303"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Address;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Email;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Phone;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.TelegramHandle;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":" * A utility class to help with building PersonDescriptor objects.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"public class PersonDescriptorBuilder {","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"    private PersonDescriptor descriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder() {","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder(PersonDescriptor descriptor) {","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"        this.descriptor \u003d new PersonDescriptor(descriptor);","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"     * Returns an {@code PersonDescriptor} with fields containing {@code person}\u0027s details.","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder(Person person) {","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTelegramHandle(person.getTelegramHandle());","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Name} of the {@code PersonDescriptor} that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Phone} of the {@code PersonDescriptor} that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code TelegramHandle} of the {@code PersonDescriptor} that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Email} of the {@code PersonDescriptor} that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Address} of the {@code PersonDescriptor} that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code PersonDescriptor}","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"     * that we are building.","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"    public PersonDescriptor build() {","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"        return descriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"ncduy0303":98}},{"path":"src/test/java/seedu/spendnsplit/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TELEGRAM_HANDLE;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.logic.commands.AddPersonCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PersonDescriptor;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.tag.Tag;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"jedkohjk"},"content":"    public static String getAddPersonCommand(Person person) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"        sb.append(PREFIX_TELEGRAM_HANDLE + person.getTelegramHandle().value + \" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"     * Returns the part of command string for the given {@code PersonDescriptor}\u0027s details.","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"    public static String getPersonDescriptorDetails(PersonDescriptor descriptor) {","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"wui-hong"},"content":"        descriptor.getTelegramHandle().ifPresent(telegramHandle -\u003e sb.append(PREFIX_TELEGRAM_HANDLE)","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"wui-hong"},"content":"                .append(telegramHandle.value).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jedkohjk":2,"ncduy0303":3,"-":48,"wui-hong":13}},{"path":"src/test/java/seedu/spendnsplit/testutil/PortionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":" * A utility class to help with building Portion objects.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"public class PortionBuilder {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"    public static final String DEFAULT_NAME \u003d TypicalPersons.ALICE.getName().toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    public static final String DEFAULT_WEIGHT \u003d \"0.5\";","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    private Name name;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"    private Weight weight;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"     * Creates a {@code PortionBuilder} with the default details.","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    public PortionBuilder() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"            weight \u003d new Weight(DEFAULT_WEIGHT);","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"jedkohjk"},"content":"            weight \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"     * Initializes the PortionBuilder with the data of {@code portionToCopy}.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"    public PortionBuilder(Portion portionToCopy) {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"        name \u003d portionToCopy.getPersonName();","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"        weight \u003d portionToCopy.getWeight();","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Name} of the {@code Portion} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"    public PortionBuilder withName(String name) {","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Weight} of the {@code Portion} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"    public PortionBuilder withWeight(String weight) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"            this.weight \u003d new Weight(weight);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"            this.weight \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"    public Portion build() {","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        return new Portion(name, weight);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"jedkohjk":8,"ncduy0303":51,"wui-hong":4}},{"path":"src/test/java/seedu/spendnsplit/testutil/PortionDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.portion.Weight;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":" * A utility class to help with building PortionDescriptor objects.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":"public class PortionDescriptorBuilder {","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"    private PortionDescriptor descriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptorBuilder() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PortionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptorBuilder(PortionDescriptor descriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"        this.descriptor \u003d new PortionDescriptor(descriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"     * Returns an {@code PortionDescriptor} with fields containing {@code portion}\u0027s details.","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptorBuilder(Portion portion) {","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new PortionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setPersonName(portion.getPersonName());","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setWeight(portion.getWeight());","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Name} of the {@code PortionDescriptor} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptorBuilder withPersonName(String name) {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setPersonName(new Name(name));","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Weight} of the {@code PortionDescriptor} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptorBuilder withWeight(String weight) {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"            descriptor.setWeight(new Weight(weight));","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"jedkohjk"},"content":"            assert false;","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"    public PortionDescriptor build() {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"        return descriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"jedkohjk":5,"ncduy0303":51}},{"path":"src/test/java/seedu/spendnsplit/testutil/PortionUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.PortionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"jeffrey-jian"},"content":" * A utility class to help with building Portion objects.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"public class PortionUtil {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"     * Returns the part of command string for the given {@code PortionDescriptor}\u0027s details.","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    public static String getPortionDescriptorDetails(PortionDescriptor descriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"jeffrey-jian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"        sb.append(PREFIX_NAME).append(descriptor.getPersonName().toString()).append(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"jeffrey-jian"},"content":"        sb.append(PREFIX_WEIGHT).append(descriptor.getWeight().toString()).append(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ncduy0303":3,"wui-hong":3,"jeffrey-jian":16}},{"path":"src/test/java/seedu/spendnsplit/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/testutil/SpendNSplitBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":" * A utility class to help with building SpendNSplitbook objects.","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":" *     {@code SpendNSplitBook ab \u003d new SpendNSplitBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"public class SpendNSplitBookBuilder {","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"    private SpendNSplit spendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplitBookBuilder() {","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        spendNSplit \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplitBookBuilder(SpendNSplit spendNSplit) {","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"        this.spendNSplit \u003d spendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wui-hong"},"content":"     * Adds a new {@code Person} to the {@code SpendNSplitBook} that we are building.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplitBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.addPerson(person);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wui-hong"},"content":"        return this;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wui-hong"},"content":"     * Adds a new {@code Transaction} to the {@code SpendNSplitBook} that we are building.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplitBookBuilder withTransaction(Transaction transaction) {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wui-hong"},"content":"        spendNSplit.addTransaction(transaction);","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"        return this;","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wui-hong"},"content":"    public SpendNSplit build() {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wui-hong"},"content":"        return spendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":44}},{"path":"src/test/java/seedu/spendnsplit/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.Model;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":51,"wui-hong":4}},{"path":"src/test/java/seedu/spendnsplit/testutil/TransactionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.SELF_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jeffrey-jian"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":" * A utility class to help with building Transaction objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"public class TransactionBuilder {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"    public static final String DEFAULT_AMOUNT \u003d \"12.34\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Mala Xiang Guo at Clementi Mall on 12 Oct 2023\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"    public static final String DEFAULT_PAYEE_NAME \u003d \"Default Payee Name\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"    // necessary for testing of EditTransactionCommand, to test actual vs expected transactions","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jedkohjk"},"content":"    public static final String DEFAULT_TIMESTAMP \u003d \"12/10/2023 12:34\";","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"    public static final Set\u003cPortion\u003e DEFAULT_PORTIONS \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"jedkohjk"},"content":"            List.of(new PortionBuilder().withName(TypicalPersons.BOB.getName().fullName).withWeight(\"1.0\").build()));","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"    private Amount amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"    private Description description;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    private Name payeeName;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"    private Set\u003cPortion\u003e portions;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"nathanielcalimag"},"content":"    private Timestamp timestamp;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"     * Creates a {@code TransactionBuilder} with the default details.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"    public TransactionBuilder() {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"            amount \u003d new Amount(DEFAULT_AMOUNT);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            amount \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"nathanielcalimag"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"nathanielcalimag"},"content":"        payeeName \u003d new Name(DEFAULT_PAYEE_NAME);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"        portions \u003d Set.of(ALICE_PORTION, SELF_PORTION);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"nathanielcalimag"},"content":"        timestamp \u003d Timestamp.now();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"     * Initializes the TransactionBuilder with the data of {@code transactionToCopy}.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"    public TransactionBuilder(Transaction transactionToCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"        amount \u003d transactionToCopy.getAmount();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"        description \u003d transactionToCopy.getDescription();","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"nathanielcalimag"},"content":"        payeeName \u003d transactionToCopy.getPayeeName();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"        portions \u003d new HashSet\u003c\u003e(transactionToCopy.getPortions());","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"jeffrey-jian"},"content":"        timestamp \u003d transactionToCopy.getTimestamp();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Amount} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"    public TransactionBuilder withAmount(String amount) {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"            this.amount \u003d new Amount(amount);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"jedkohjk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"jedkohjk"},"content":"            this.amount \u003d null;","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Description} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"    public TransactionBuilder withDescription(String description) {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"nathanielcalimag"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"nathanielcalimag"},"content":"     * Sets the {@code PayeeName} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"nathanielcalimag"},"content":"    public TransactionBuilder withPayeeName(String payeeName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"nathanielcalimag"},"content":"        this.payeeName \u003d new Name(payeeName);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Portions} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"ncduy0303"},"content":"    public TransactionBuilder withPortions(Set\u003cPortion\u003e portions) {","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"ncduy0303"},"content":"        this.portions \u003d portions;","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"nathanielcalimag"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"nathanielcalimag"},"content":"     * Sets the {@code LocalDateTime} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"nathanielcalimag"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"nathanielcalimag"},"content":"    public TransactionBuilder withTimestamp(String timestamp) {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"nathanielcalimag"},"content":"        this.timestamp \u003d new Timestamp(timestamp);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"nathanielcalimag"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"ncduy0303"},"content":"    public Transaction build() {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"ncduy0303"},"content":"        return new Transaction(amount, description, payeeName, portions, timestamp);","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"jedkohjk":10,"nathanielcalimag":21,"ncduy0303":66,"wui-hong":9,"jeffrey-jian":6}},{"path":"src/test/java/seedu/spendnsplit/testutil/TransactionDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ncduy0303"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"jedkohjk"},"content":"import seedu.spendnsplit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Amount;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Description;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Timestamp;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"ncduy0303"},"content":" * A utility class to help with building TransactionDescriptor objects.","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"ncduy0303"},"content":"public class TransactionDescriptorBuilder {","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    private TransactionDescriptor descriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder() {","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new TransactionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder(TransactionDescriptor descriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"ncduy0303"},"content":"        this.descriptor \u003d new TransactionDescriptor(descriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"ncduy0303"},"content":"     * Returns an {@code TransactionDescriptor} with fields containing {@code transaction}\u0027s details","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder(Transaction transaction) {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"        descriptor \u003d new TransactionDescriptor();","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setAmount(transaction.getAmount());","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setDescription(transaction.getDescription());","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setPayeeName(transaction.getPayeeName());","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTimestamp(transaction.getTimestamp());","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"     * Returns an {@code TransactionDescriptor} with fields {@code timestamp} set to null.","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"ncduy0303"},"content":"     * This is required for testing the parser, as the parser does not parse the timestamp.","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder withoutTimestamp() {","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTimestamp(null);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Amount} of the {@code TransactionDescriptor} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder withAmount(String amount) {","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"jedkohjk"},"content":"        try {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"ncduy0303"},"content":"            descriptor.setAmount(new Amount(amount));","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"jedkohjk"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"jedkohjk"},"content":"            assert false;","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"jedkohjk"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Description} of the {@code TransactionDescriptor} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code PayeeName} of the {@code TransactionDescriptor} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder withPayeeName(String payeeName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setPayeeName(new Name(payeeName));","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"ncduy0303"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"ncduy0303"},"content":"     * Sets the {@code Timestamp} of the {@code TransactionDescriptor} that we are building.","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"ncduy0303"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptorBuilder withTimestamp(String timestamp) {","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"ncduy0303"},"content":"        descriptor.setTimestamp(new Timestamp(timestamp));","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"ncduy0303"},"content":"        return this;","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"ncduy0303"},"content":"    public TransactionDescriptor build() {","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"ncduy0303"},"content":"        return descriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"ncduy0303"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"ncduy0303"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"jedkohjk":5,"ncduy0303":82}},{"path":"src/test/java/seedu/spendnsplit/testutil/TransactionUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.parser.CliSyntax.PREFIX_TIMESTAMP;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"ncduy0303"},"content":"import seedu.spendnsplit.logic.descriptors.TransactionDescriptor;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jeffrey-jian"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":" * A utility class to help with building Transaction objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jeffrey-jian"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jeffrey-jian"},"content":"public class TransactionUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jeffrey-jian"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"ncduy0303"},"content":"     * Returns the part of command string for the given {@code TransactionDescriptor}\u0027s details.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"jeffrey-jian"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public static String getTransactionDescriptorDetails(TransactionDescriptor descriptor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"jeffrey-jian"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jeffrey-jian"},"content":"        descriptor.getAmount().ifPresent(amount -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jeffrey-jian"},"content":"                sb.append(PREFIX_COST).append(amount).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jeffrey-jian"},"content":"        descriptor.getDescription().ifPresent(description -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jeffrey-jian"},"content":"                sb.append(PREFIX_DESCRIPTION).append(description.value).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jeffrey-jian"},"content":"        descriptor.getPayeeName().ifPresent(payeeName -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"jeffrey-jian"},"content":"                sb.append(PREFIX_NAME).append(payeeName).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"jeffrey-jian"},"content":"        descriptor.getTimestamp().ifPresent(timestamp -\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"jeffrey-jian"},"content":"                sb.append(PREFIX_TIMESTAMP).append(timestamp).append(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"jeffrey-jian"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jeffrey-jian"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jeffrey-jian"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ncduy0303":4,"wui-hong":5,"jeffrey-jian":22}},{"path":"src/test/java/seedu/spendnsplit/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.commons.core.index.Index;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"    public static final Index INDEX_FIRST_ELEMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"    public static final Index INDEX_SECOND_ELEMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"ncduy0303"},"content":"    public static final Index INDEX_THIRD_ELEMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jeffrey-jian"},"content":"    public static final Index INDEX_FOURTH_ELEMENT \u003d Index.fromOneBased(4);","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"    public static final Index INDEX_FIFTH_ELEMENT \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jedkohjk"},"content":"    public static final Index INDEX_SEVENTH_ELEMENT \u003d Index.fromOneBased(7);","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jedkohjk":1,"ncduy0303":4,"-":7,"wui-hong":2,"jeffrey-jian":1}},{"path":"src/test/java/seedu/spendnsplit/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_AMY;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.logic.commands.CommandTestUtil.VALID_TELEGRAM_HANDLE_BOB;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"wui-hong"},"content":"            .withPhone(\"94351253\").withTelegramHandle(\"@Alice123\")","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"wui-hong"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withTelegramHandle(\"@Benson123\")","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"wui-hong"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withTelegramHandle(\"@Carl123\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"jedkohjk"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(null)","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"wui-hong"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"wui-hong"},"content":"            .withTelegramHandle(\"@Daniel123\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"jedkohjk"},"content":"            .withTelegramHandle(null).withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"jedkohjk"},"content":"            .withTelegramHandle(\"@Fiona123\").withEmail(null).withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"jedkohjk"},"content":"            .withTelegramHandle(\"@George123\").withEmail(\"anna@example.com\").withAddress(null).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"wui-hong"},"content":"            .withTelegramHandle(\"@Hoon123\").withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"wui-hong"},"content":"            .withTelegramHandle(\"@Ida123\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"wui-hong"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"wui-hong"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_AMY).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"wui-hong"},"content":"            .withTelegramHandle(VALID_TELEGRAM_HANDLE_BOB)","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jedkohjk":4,"-":41,"wui-hong":24}},{"path":"src/test/java/seedu/spendnsplit/testutil/TypicalPortions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.portion.Portion;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ncduy0303"},"content":" * A utility class containing a list of {@code Portion} objects to be used in tests.","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ncduy0303"},"content":"public class TypicalPortions {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"ncduy0303"},"content":"    public static final Portion ALICE_PORTION \u003d new PortionBuilder().withName(","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"            TypicalPersons.ALICE.getName().fullName).withWeight(\"2\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ncduy0303"},"content":"    public static final Portion BENSON_PORTION \u003d new PortionBuilder().withName(","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nathanielcalimag"},"content":"            TypicalPersons.BENSON.getName().fullName).withWeight(\"4\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ncduy0303"},"content":"    public static final Portion CARL_PORTION \u003d new PortionBuilder().withName(","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"            TypicalPersons.CARL.getName().fullName).withWeight(\"6\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ncduy0303"},"content":"    public static final Portion SELF_PORTION \u003d new PortionBuilder().withName(","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"            Name.SELF.fullName).withWeight(\"8\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"nathanielcalimag":12,"ncduy0303":6,"wui-hong":3}},{"path":"src/test/java/seedu/spendnsplit/testutil/TypicalSpendNSplitBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.SpendNSplit;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Person;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"wui-hong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"wui-hong"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"wui-hong"},"content":" * A utility class to get a typical spendNSplit book containing persons and transactions.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wui-hong"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wui-hong"},"content":"public class TypicalSpendNSplitBook {","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"wui-hong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"wui-hong"},"content":"     * Returns an {@code SpendNSplitBook} with all the typical persons and transactions.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wui-hong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"    public static SpendNSplit getTypicalSpendNSplitBook() {","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"        SpendNSplit ab \u003d new SpendNSplit();","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wui-hong"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wui-hong"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wui-hong"},"content":"        for (Transaction transaction : TypicalTransactions.getTypicalTransactions()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wui-hong"},"content":"            ab.addTransaction(transaction);","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wui-hong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wui-hong"},"content":"        return ab;","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wui-hong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wui-hong"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wui-hong":24}},{"path":"src/test/java/seedu/spendnsplit/testutil/TypicalTransactions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.testutil;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.ALICE_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.BENSON_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.TypicalPortions.SELF_PORTION;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"nathanielcalimag"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"nathanielcalimag"},"content":"import org.apache.commons.numbers.fraction.BigFraction;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.person.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.model.transaction.Transaction;","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"nathanielcalimag"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"nathanielcalimag"},"content":" * A utility class containing a list of {@code Transaction} objects to be used in tests.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"nathanielcalimag"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"nathanielcalimag"},"content":"public class TypicalTransactions {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"nathanielcalimag"},"content":"    public static final Transaction LUNCH \u003d new TransactionBuilder().withAmount(\"60\")","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"nathanielcalimag"},"content":"            .withDescription(\"Group Project Lunch\").withPayeeName(Name.SELF.fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jedkohjk"},"content":"            .withPortions(Set.of(ALICE_PORTION, BENSON_PORTION)).withTimestamp(\"13/10/2023 12:00\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"nathanielcalimag"},"content":"    public static final Transaction DINNER \u003d new TransactionBuilder().withAmount(\"90\").withDescription(\"Hall Dinner\")","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"nathanielcalimag"},"content":"            .withPayeeName(TypicalPersons.BENSON.getName().fullName)","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"jedkohjk"},"content":"            .withPortions(Set.of(BENSON_PORTION, SELF_PORTION)).withTimestamp(\"13/10/2023 16:00\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"nathanielcalimag"},"content":"    public static final Transaction RENT \u003d new TransactionBuilder().withAmount(\"600\")","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"ncduy0303"},"content":"            .withDescription(\"Shared Dorm Rent\").withPayeeName(TypicalPersons.BENSON.getName().fullName).withPortions(","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ncduy0303"},"content":"                    Set.of(new PortionBuilder(BENSON_PORTION).withWeight(BigFraction.ONE.toString()).build(),","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"ncduy0303"},"content":"                           new PortionBuilder(SELF_PORTION).withWeight(BigFraction.ONE.toString()).build()))","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"jedkohjk"},"content":"            .withTimestamp(\"13/10/2023 13:00\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"nathanielcalimag"},"content":"    public static final Transaction TRANSPORTATION \u003d new TransactionBuilder().withAmount(\"100\")","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"ncduy0303"},"content":"            .withDescription(\"Carpool Subscription\").withPayeeName(Name.SELF.fullName).withPortions(","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ncduy0303"},"content":"                    Set.of(new PortionBuilder(BENSON_PORTION).withWeight(BigFraction.ONE.toString()).build(),","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ncduy0303"},"content":"                            new PortionBuilder(SELF_PORTION).withWeight(BigFraction.ONE.toString()).build()))","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"jedkohjk"},"content":"            .withTimestamp(\"13/10/2023 04:00\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"nathanielcalimag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"nathanielcalimag"},"content":"    public static final Transaction GROCERIES \u003d new TransactionBuilder().withAmount(\"120\")","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"ncduy0303"},"content":"            .withDescription(\"Groceries\").withPayeeName(Name.SELF.fullName).withPortions(","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"ncduy0303"},"content":"                    Set.of(new PortionBuilder(ALICE_PORTION).withWeight(BigFraction.ONE.toString()).build(),","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ncduy0303"},"content":"                            new PortionBuilder(BENSON_PORTION).withWeight(BigFraction.ONE.toString()).build(),","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ncduy0303"},"content":"                            new PortionBuilder(SELF_PORTION).withWeight(BigFraction.ONE.toString()).build()))","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"jedkohjk"},"content":"            .withTimestamp(\"13/10/2023 02:00\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jeffrey-jian"},"content":"    public static final Transaction BREAKFAST_WITH_ALICE \u003d new TransactionBuilder().withAmount(\"10\")","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"ncduy0303"},"content":"            .withDescription(\"Breakfast with Alice\").withPayeeName(Name.SELF.fullName).withPortions(","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ncduy0303"},"content":"                    Set.of(new PortionBuilder(ALICE_PORTION).withWeight(\"2.00\").build()))","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"jedkohjk"},"content":"            .withTimestamp(\"14/10/2023 10:00\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"jeffrey-jian"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"nathanielcalimag"},"content":"    public static List\u003cTransaction\u003e getTypicalTransactions() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jeffrey-jian"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(LUNCH, DINNER, RENT, TRANSPORTATION, BREAKFAST_WITH_ALICE));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"nathanielcalimag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"nathanielcalimag"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"jedkohjk":6,"nathanielcalimag":28,"ncduy0303":12,"wui-hong":6,"jeffrey-jian":4}},{"path":"src/test/java/seedu/spendnsplit/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":44,"wui-hong":1}},{"path":"src/test/java/seedu/spendnsplit/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wui-hong"},"content":"package seedu.spendnsplit.ui;","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"wui-hong"},"content":"import static seedu.spendnsplit.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"wui-hong"},"content":"import seedu.spendnsplit.MainApp;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"wui-hong":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"\u003c?import seedu.spendnsplit.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"wui-hong":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"wui-hong"},"content":"\u003cfx:root type\u003d\"seedu.spendnsplit.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"wui-hong":1}}]

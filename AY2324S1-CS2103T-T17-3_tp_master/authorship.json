[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"# Tutor Connect","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T17-3/tp/actions)","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T17-3/tp/graph/badge.svg?token\u003dCY67NSXKQZ)](https://codecov.io/gh/AY2324S1-CS2103T-T17-3/tp)","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"Tutor Connect is an **address book made for tuition centre managers** to easily track, schedule, and notify tutors of their upcoming schedule, optimised for users who prefer a CLI.","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"## Features","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"- **Store** and **edit** information about your tutors","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"- **Create** and **plan** your tutor availability and schedule","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"- **View** upcoming schedules","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"If you are interested in **using** Tutor Connect, head over to the [Quick Start](https://ay2324s1-cs2103t-t17-3.github.io/tp/UserGuide.html#quick-start) section of the User Guide.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"If you are interested in **developing** Tutor Connect, the [Developer Guide](https://ay2324s1-cs2103t-t17-3.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"## Requirements","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"Ensure you have **Java 11** installed on your computer.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"To verify, perform the following steps:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"1. Open a terminal","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"   - [MacOS](https://support.apple.com/en-sg/guide/terminal/apd5265185d-f365-44cb-8b09-71a064a42125/mac#:~:text\u003dTerminal%20for%20me-,Open%20Terminal,%2C%20then%20double%2Dclick%20Terminal)","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"   - [Windows](https://www.howtogeek.com/235101/10-ways-to-open-the-command-prompt-in-windows-10/#:~:text\u003danywhere%20you%20like.-,Open%20Command%20Prompt%20from%20the%20Run%20Box,open%20an%20administrator%20Command%20Prompt)","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"2. Type `java -version` and press Enter.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"3. If it says a version other than 11 or `command not found`, please install Java 11 by following this [guide](https://www.java.com/en/download/help/download_options.html).","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"## Installation Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"1. **Download** the latest jar file (tutorconnect.jar) from our [Github Releases](https://github.com/AY2324S1-CS2103T-T17-3/tp/releases).","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"2. Move the jar file into a new folder called “Tutor Connect”","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"3. Double click the jar file to launch the application.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"\u003e If you are a **Mac** user, you may encounter a warning that says the jar file cannot be opened because it is from an unidentified developer.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"\u003e To continue:","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"\u003e    i. **Right click** on the jar file and select `Open With \u003e JavaLauncher (default)`.","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"\u003e    ii. Press **Open** when prompted.","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"## Acknowledgements","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"-":5,"mfjkri":37}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"run {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"mfjkri":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"### Joshua Weng Hao","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"\u003cimg src\u003d\"images/jweng88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"[[github](https://github.com/jweng88)]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"[[portfolio](team/jweng88.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"* Responsibilities: Tutor deletion, Tutor viewing","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"### Muhammad Fikri","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"\u003cimg src\u003d\"images/mfjkri.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"[[github](http://github.com/mfjkri)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"[[portfolio](team/mfjkri.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"* Responsibilities: Tutor search","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"### Seow Xuan Yi","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"\u003cimg src\u003d\"images/saltedfishxx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"[[github](http://github.com/saltedfishxx)] [[portfolio](team/saltedfishxx.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"* Responsibilities: Deleting and viewing schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"### Teo Rui Shan","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"\u003cimg src\u003d\"images/ruishanteo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"[[github](http://github.com/ruishanteo)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"[[portfolio](team/ruishanteo.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"* Responsibilities: Add Tutors functionalities","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"### Yeo Di Sheng","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"\u003cimg src\u003d\"images/dishenggg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"[[github](https://github.com/dishenggg)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"[[portfolio](team/dishenggg.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"* Responsibilities: Add schedule","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"ruishanteo":5,"Jweng88":6,"saltedfishxx":4,"dishenggg":5,"-":33,"mfjkri":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"### Add Tutor Feature","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"The \"Add Tutor\" feature allows users to add a new tutor to the address book. Below, we provide an example usage scenario and a detailed description of how the add tutor mechanism behaves at each step.","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"The following shows the activity diagram from when a user executes the `add-t` command:","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"ruishanteo"},"content":"![AddTutorActivityDiagram](images/AddTutorActivityDiagram.png)","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"ruishanteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"ruishanteo"},"content":"**:information_source: Input Limitations**\u003cbr\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"ruishanteo"},"content":"* Input format must adhere to the follow limitations:","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"ruishanteo"},"content":"  * `NAME`: Only contain alphanumeric characters and spaces, and should not be blank","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"ruishanteo"},"content":"  * `PHONE NUMBER`: Only contain numbers, and should be at least 3 digits long","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"ruishanteo"},"content":"  * `EMAIL`: Of the format local-part@domain","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"ruishanteo"},"content":"* Tutor to be added must be unique and not already exist in the addressbook.","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"ruishanteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"ruishanteo"},"content":"#### Implementation","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"ruishanteo"},"content":"Step 1. The user launches the application for the first time.","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"ruishanteo"},"content":"Step 2. The user executes `add-t n/John Doe p/98765432 e/johnd@example.com` to add a tutor to the address book. The ","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"ruishanteo"},"content":"command is parsed in `AddressBookParser`.","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"ruishanteo"},"content":"Step 3. `AddTutorCommandParser` is created, which constructs the `Person` to be added.  The `AddTutorCommand` is ","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"ruishanteo"},"content":"called with the `Person` created.","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"ruishanteo"},"content":"Step 4. The `AddTutorCommand` object executes the `addPerson` method through the `LogicManager`. The method then ","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"ruishanteo"},"content":"adds the `Person` in `model` and returns the `CommandResult`.","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"ruishanteo"},"content":"The following sequence diagram shows how the above steps for add tutor operation works:","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"ruishanteo"},"content":"![AddTutorSequenceDiagram](images/AddTutorSequenceDiagram.png)","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"ruishanteo"},"content":"#### Design Rationale","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"ruishanteo"},"content":"The `add-t` command was designed this way to ensure consistency with the previous `add` person.","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"ruishanteo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"mfjkri"},"content":"### Edit tutor feature ","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"mfjkri"},"content":" The “Edit Tutor” feature allows users to edit an existing tutor in the address book given a tutor index. ","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"mfjkri"},"content":" Below, we provide an example usage scenario and a detailed description of how the edit tutor mechanism behaves at ","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"mfjkri"},"content":" each step.","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"mfjkri"},"content":" ![Activity Diagram for edit-t Command](images/EditTutorActivityDiagram.png)","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"mfjkri"},"content":" \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"mfjkri"},"content":"**:information_source: Limitations**\u003cbr\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":210,"author":{"gitId":"mfjkri"},"content":"* Input format must adhere to the follow limitations:","lastModifiedDate":"2023-10-21"},{"lineNumber":211,"author":{"gitId":"mfjkri"},"content":"    * `TUTOR_INDEX`: Only number input accepted, starting from 1 to the last tutor index shown in the list of tutors.","lastModifiedDate":"2023-10-21"},{"lineNumber":212,"author":{"gitId":"mfjkri"},"content":"    * `NAME`: Only contain alphanumeric characters and spaces, and should not be blank","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"mfjkri"},"content":"    * `PHONE NUMBER`: Only contain numbers, and should be at least 3 digits long","lastModifiedDate":"2023-10-21"},{"lineNumber":214,"author":{"gitId":"mfjkri"},"content":"    * `EMAIL`: Of the format local-part@domain","lastModifiedDate":"2023-10-21"},{"lineNumber":215,"author":{"gitId":"mfjkri"},"content":"* Tutor to be edited must not already exist in the addressbook (excluding the current specified one).","lastModifiedDate":"2023-10-21"},{"lineNumber":216,"author":{"gitId":"mfjkri"},"content":"* TUTOR_INDEX parameter is compulsory and at least one edited field must be provided.","lastModifiedDate":"2023-10-21"},{"lineNumber":217,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":218,"author":{"gitId":"mfjkri"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":220,"author":{"gitId":"mfjkri"},"content":"#### Implementation","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":222,"author":{"gitId":"mfjkri"},"content":"The bulk of the implementation details is identical to that of other commands.","lastModifiedDate":"2023-10-21"},{"lineNumber":223,"author":{"gitId":"mfjkri"},"content":"As such only details specific to `edit-t` will be discussed.","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":225,"author":{"gitId":"mfjkri"},"content":"Step 1. The user has the application launched with at least 1 tutor added.","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":227,"author":{"gitId":"mfjkri"},"content":"Step 2. The user executes `list-t` to view all added tutors.","lastModifiedDate":"2023-10-22"},{"lineNumber":228,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":229,"author":{"gitId":"mfjkri"},"content":"Step 3. The user executes `edit-t 1 n/John Doe` to edit the first tutor\u0027s name in the list of tutors displayed. ","lastModifiedDate":"2023-10-21"},{"lineNumber":230,"author":{"gitId":"mfjkri"},"content":"The command is parsed in AddressBookParser.","lastModifiedDate":"2023-10-21"},{"lineNumber":231,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":232,"author":{"gitId":"mfjkri"},"content":"Step 4. EditTutorCommandParser is created, and constructs an `EditPersonDescriptor` which describes the edited ","lastModifiedDate":"2023-10-21"},{"lineNumber":233,"author":{"gitId":"mfjkri"},"content":"`Person`. An EditTutorCommand object is then constructed with this `EditPersonDescriptor` and the specified tutor index.","lastModifiedDate":"2023-10-21"},{"lineNumber":234,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":235,"author":{"gitId":"mfjkri"},"content":"Step 5. The EditTutorCommand object gets the specified person from the current filtered person list using the ","lastModifiedDate":"2023-10-21"},{"lineNumber":236,"author":{"gitId":"mfjkri"},"content":"tutor index.","lastModifiedDate":"2023-10-21"},{"lineNumber":237,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":238,"author":{"gitId":"mfjkri"},"content":"Step 6. EditTutorCommand object then creates an edited person from the specified person and the editPersonDescriptor.","lastModifiedDate":"2023-10-21"},{"lineNumber":239,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":240,"author":{"gitId":"mfjkri"},"content":"Step 7. EditTutorCommand object then calls the setPerson method in the ModelManager with the new edited person. This ","lastModifiedDate":"2023-10-21"},{"lineNumber":241,"author":{"gitId":"mfjkri"},"content":"method sets the specified `Person` in the model to be that edited person.","lastModifiedDate":"2023-10-21"},{"lineNumber":242,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":243,"author":{"gitId":"mfjkri"},"content":"Step 8. Finally, the EditTutorCommand object updates the person list to display the edited person.","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":245,"author":{"gitId":"mfjkri"},"content":"The following sequence diagram shows how the above steps for edit tutor operation works, taking ","lastModifiedDate":"2023-10-21"},{"lineNumber":246,"author":{"gitId":"mfjkri"},"content":"`execute(\"edit-t 1 n/New Name\")` API call as an example.","lastModifiedDate":"2023-10-21"},{"lineNumber":247,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":248,"author":{"gitId":"mfjkri"},"content":"![Interactions Inside the Logic Component for the `edit-t 1 n/New Name` Command](images/EditTutorSequenceDiagram.png)","lastModifiedDate":"2023-10-21"},{"lineNumber":249,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":250,"author":{"gitId":"Jweng88"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"Jweng88"},"content":":information_source: **Note:** ","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"Jweng88"},"content":"The lifeline for `EditTutorCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML,","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"Jweng88"},"content":"the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"mfjkri"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":255,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":256,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":257,"author":{"gitId":"mfjkri"},"content":"#### Design rationale:","lastModifiedDate":"2023-10-21"},{"lineNumber":258,"author":{"gitId":"mfjkri"},"content":"The `edit-t` command was designed this way to ensure consistency with the previous `edit` person command.","lastModifiedDate":"2023-10-21"},{"lineNumber":259,"author":{"gitId":"mfjkri"},"content":" ","lastModifiedDate":"2023-10-21"},{"lineNumber":260,"author":{"gitId":"Jweng88"},"content":"### Delete tutor feature","lastModifiedDate":"2023-10-22"},{"lineNumber":261,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":262,"author":{"gitId":"Jweng88"},"content":"The \"Delete Tutor\" feature allows users to delete an existing tutor in the address book given a tutor index.","lastModifiedDate":"2023-10-22"},{"lineNumber":263,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":264,"author":{"gitId":"Jweng88"},"content":"Below, we provide an example usage scenario and a detailed description of how the delete tutor mechanism behaves at","lastModifiedDate":"2023-10-22"},{"lineNumber":265,"author":{"gitId":"Jweng88"},"content":"each step. The following shows the activity diagram when a user executes the `delete-t` command:","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"Jweng88"},"content":"![Activity diagram for delete-t command](images/DeleteTutorActivityDiagram.png)","lastModifiedDate":"2023-10-22"},{"lineNumber":268,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"Jweng88"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":270,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"Jweng88"},"content":"**:information_source: Limitations**\u003cbr\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":272,"author":{"gitId":"Jweng88"},"content":"* Input format must adhere to the follow limitations:","lastModifiedDate":"2023-10-22"},{"lineNumber":273,"author":{"gitId":"Jweng88"},"content":"    * `TUTOR_INDEX`: Only number input accepted, starting from 1 to the last tutor index shown in the list of tutors.","lastModifiedDate":"2023-10-22"},{"lineNumber":274,"author":{"gitId":"Jweng88"},"content":"* TUTOR_INDEX parameter is compulsory.","lastModifiedDate":"2023-10-22"},{"lineNumber":275,"author":{"gitId":"Jweng88"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":276,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"Jweng88"},"content":"#### Implementation","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"Jweng88"},"content":"The bulk of the implementation details is identical to that of other commands.","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"Jweng88"},"content":"As such only details specific to `delete-t` will be discussed.","lastModifiedDate":"2023-10-22"},{"lineNumber":281,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"Jweng88"},"content":"Step 1. The user has the application launched with at least 1 tutor added.","lastModifiedDate":"2023-10-22"},{"lineNumber":283,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":284,"author":{"gitId":"Jweng88"},"content":"Step 2. The user executes `list-t` to view all added tutors.","lastModifiedDate":"2023-10-22"},{"lineNumber":285,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":286,"author":{"gitId":"Jweng88"},"content":"Step 3. The user executes `delete-t 1` to delete the tutor with Tutor index 1 in the list of tutors displayed.","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"Jweng88"},"content":"The command is parsed in the AddressBookParser.","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"Jweng88"},"content":"Step 4. DeleteTutorCommandParser is created and gets the index of the tutor to be deleted.","lastModifiedDate":"2023-10-22"},{"lineNumber":290,"author":{"gitId":"Jweng88"},"content":"A DeleteTutorCommand object is then constructed with the specified tutor index.","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":292,"author":{"gitId":"Jweng88"},"content":"Step 5. The DeleteTutorCommand object gets the specified person from the current filtered person list using the tutor","lastModifiedDate":"2023-10-22"},{"lineNumber":293,"author":{"gitId":"Jweng88"},"content":"index.","lastModifiedDate":"2023-10-22"},{"lineNumber":294,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":295,"author":{"gitId":"Jweng88"},"content":"Step 6. The DeleteTutorCommand object then calls the deletePerson method in the ModelManager with the specified person ","lastModifiedDate":"2023-10-22"},{"lineNumber":296,"author":{"gitId":"Jweng88"},"content":"to delete. This method deletes the specified `Person` in the model.","lastModifiedDate":"2023-10-22"},{"lineNumber":297,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":298,"author":{"gitId":"Jweng88"},"content":"Step 7. Finally, the DeleteTutorCommand object returns the `CommandResult`.","lastModifiedDate":"2023-10-22"},{"lineNumber":299,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":300,"author":{"gitId":"Jweng88"},"content":"The following sequence diagram shows how the above steps for delete tutor operation works, taking","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"Jweng88"},"content":"`execute(\"delete-t 1\")` API call as an example.","lastModifiedDate":"2023-10-22"},{"lineNumber":302,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":303,"author":{"gitId":"Jweng88"},"content":"![Interactions inside the Logic Component for the `delete-t 1` Command](images/DeleteTutorSequenceDiagram.png)","lastModifiedDate":"2023-10-22"},{"lineNumber":304,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":305,"author":{"gitId":"Jweng88"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":306,"author":{"gitId":"Jweng88"},"content":"**:information_source: Note:** ","lastModifiedDate":"2023-10-22"},{"lineNumber":307,"author":{"gitId":"Jweng88"},"content":"The lifeline for `DeleteTutorCommandParser` should end at the destroy marker (X) ","lastModifiedDate":"2023-10-22"},{"lineNumber":308,"author":{"gitId":"Jweng88"},"content":"but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-22"},{"lineNumber":309,"author":{"gitId":"Jweng88"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":310,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":311,"author":{"gitId":"Jweng88"},"content":"#### Design rationale:","lastModifiedDate":"2023-10-22"},{"lineNumber":312,"author":{"gitId":"Jweng88"},"content":"The `delete-t` command was designed this way to ensure consistency with the previous `delete` person command.","lastModifiedDate":"2023-10-22"},{"lineNumber":313,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":314,"author":{"gitId":"dishenggg"},"content":"### Add Schedule Feature","lastModifiedDate":"2023-10-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"dishenggg"},"content":"#### Implementation Details","lastModifiedDate":"2023-10-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"dishenggg"},"content":"The add schedule feature is facilitated by `AddScheduleCommand`. It extends `Command` with the necessary implementation to add a schedule to a `Model`. Additionally, it implements the following operation:","lastModifiedDate":"2023-10-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"dishenggg"},"content":"* `AddScheduleCommand#execute(Model)` — Adds the schedule to the `Model`.","lastModifiedDate":"2023-10-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"dishenggg"},"content":"This operation is exposed in the abstract `Command` class as an abstract method.","lastModifiedDate":"2023-10-21"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"dishenggg"},"content":"Given below is an example usage scenario and how the add schedule command behaves.","lastModifiedDate":"2023-10-21"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"dishenggg"},"content":"The user executes `add-s 1 s/2023-09-15T09:00:00 e/2023-09-15T11:00:00` command. The `AddScheduleCommandParser` will be initialized to parse the user input to create a `AddScheduleCommand` with a `Index`, `StartTime` and `EndTime` representing the user\u0027s input.","lastModifiedDate":"2023-10-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"dishenggg"},"content":"The `AddScheduleCommand#exceute(Model)` will perform the following checks in this order to ensure that the `Schedule` can be added to the `Model`:","lastModifiedDate":"2023-10-21"},{"lineNumber":329,"author":{"gitId":"dishenggg"},"content":"1. The `Index` is valid.","lastModifiedDate":"2023-10-21"},{"lineNumber":330,"author":{"gitId":"dishenggg"},"content":"2. A valid schedule can be created with the given `Index`, `StartTime` and `EndTime`.","lastModifiedDate":"2023-10-21"},{"lineNumber":331,"author":{"gitId":"dishenggg"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** A `Schedule` is considered valid if its start time is before its end time. This is enforced by the constructor of the `Schedule` class, it throws an `IllegalArgumentException` if it is not valid.","lastModifiedDate":"2023-10-21"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"dishenggg"},"content":"3. Executing this command would not result in a duplicate schedule in the `Model`.","lastModifiedDate":"2023-10-21"},{"lineNumber":335,"author":{"gitId":"dishenggg"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** A `Schedule` is considered a duplicate if it belongs to the same `Person` and have the same `StartTime` and `EndTime` as an existing schedule in the `Model`.","lastModifiedDate":"2023-10-21"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"dishenggg"},"content":"4. Executing this command would not result in a clashing schedule for the tutor specified by `Index` in the `Model`.","lastModifiedDate":"2023-10-21"},{"lineNumber":339,"author":{"gitId":"dishenggg"},"content":"    \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** A `Schedule` is considered a clashing if it belongs to the same `Person` and have overlapping times. This is checked by `Schedule#isClashing(Schedule)`.","lastModifiedDate":"2023-10-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"dishenggg"},"content":"If any of these checks fail a `CommandException` with an appropriate error message will be thrown. Otherwise, it will create a `Schedule` and use `Model#addSchedule` to add the schedule to the `Model`.","lastModifiedDate":"2023-10-21"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"dishenggg"},"content":"The following shows the activity diagram from when a user executes the `add-s` command:","lastModifiedDate":"2023-10-22"},{"lineNumber":346,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":347,"author":{"gitId":"dishenggg"},"content":"![AddScheduleActivityDiagram](images/AddScheduleActivityDiagram.png)","lastModifiedDate":"2023-10-22"},{"lineNumber":348,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":349,"author":{"gitId":"dishenggg"},"content":"The following sequence diagram shows how the operation works:","lastModifiedDate":"2023-10-21"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"dishenggg"},"content":"![AddScheduleSequenceDiagram](images/AddScheduleSequenceDiagram.png)","lastModifiedDate":"2023-10-21"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"dishenggg"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddScheduleCommandParser` and `AddScheduleCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-22"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"dishenggg"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"dishenggg"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-21"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"dishenggg"},"content":"**Aspect: Checking for clashing schedule:**","lastModifiedDate":"2023-10-21"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"dishenggg"},"content":"* **Alternative 1 (current choice):** Perform the check in `AddScheduleCommand`.","lastModifiedDate":"2023-10-21"},{"lineNumber":362,"author":{"gitId":"dishenggg"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-21"},{"lineNumber":363,"author":{"gitId":"dishenggg"},"content":"    * Cons: Have to directly access schedules in the `UniqueScheduleList` creating dependencies.","lastModifiedDate":"2023-10-21"},{"lineNumber":364,"author":{"gitId":"dishenggg"},"content":"    * Cons: Can be inefficient, as we have to iterate over all schedules in the schedule list.","lastModifiedDate":"2023-10-21"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"dishenggg"},"content":"* **Alternative 2:** Perform the check in `UniqueScheduleList`.","lastModifiedDate":"2023-10-21"},{"lineNumber":367,"author":{"gitId":"dishenggg"},"content":"    * Pros: Consistent throughout the system as this check is enforced on all schedules being added to the `UniqueScheduleList` regardless of where it is being added from.","lastModifiedDate":"2023-10-21"},{"lineNumber":368,"author":{"gitId":"dishenggg"},"content":"    * Pros: Can be optimised to use more efficient searching algorithms like binary search if the implementation of the underlying list is sorted.","lastModifiedDate":"2023-10-21"},{"lineNumber":369,"author":{"gitId":"dishenggg"},"content":"    * Cons: Every schedule in the system have to adhere to that. For eg., if we want to allow the user to override such constraints it would not be possible without modifying the functionality of the list.","lastModifiedDate":"2023-10-21"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"dishenggg"},"content":"**Aspect: Checking for valid schedule:**","lastModifiedDate":"2023-10-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"dishenggg"},"content":"* **Alternative 1 (current choice):** Perform the check in `Schedule`.","lastModifiedDate":"2023-10-21"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"dishenggg"},"content":"    * Pros: Consistent throughout the system as it does not make any sense to have a schedule with a `StartTime` after its `EndTime`.","lastModifiedDate":"2023-10-21"},{"lineNumber":376,"author":{"gitId":"dishenggg"},"content":"    * Cons: Have to handle the exception if an invalid schedule is being created.","lastModifiedDate":"2023-10-22"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"dishenggg"},"content":"* **Alternative 2:** Perform the check in `AddScheduleCommand`.","lastModifiedDate":"2023-10-21"},{"lineNumber":379,"author":{"gitId":"dishenggg"},"content":"    * Pros: Allows for flexibility in the constraints.","lastModifiedDate":"2023-10-21"},{"lineNumber":380,"author":{"gitId":"dishenggg"},"content":"    * Cons: Have to repeatedly write logic perform this check everywhere a new `Schedule` is being created.","lastModifiedDate":"2023-10-22"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":383,"author":{"gitId":"saltedfishxx"},"content":"### Delete Schedule Feature","lastModifiedDate":"2023-10-24"},{"lineNumber":384,"author":{"gitId":"saltedfishxx"},"content":"#### Implementation Details","lastModifiedDate":"2023-10-24"},{"lineNumber":385,"author":{"gitId":"saltedfishxx"},"content":"The delete schedule feature is facilitated by `DeleteScheduleCommand`, which extends from `Command` with the necessary implementation to delete a schedule by a given index.","lastModifiedDate":"2023-10-24"},{"lineNumber":386,"author":{"gitId":"saltedfishxx"},"content":"The following operation is exposed in the abstract `Command` class as an abstract method:","lastModifiedDate":"2023-10-24"},{"lineNumber":387,"author":{"gitId":"saltedfishxx"},"content":"* `DeleteScheduleCommand#execute(Model)` - Deletes the schedule from the `Model` using the given index.","lastModifiedDate":"2023-10-24"},{"lineNumber":388,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":389,"author":{"gitId":"saltedfishxx"},"content":"The following shows the activity diagram in which a user executes the `delete-s` command:","lastModifiedDate":"2023-10-24"},{"lineNumber":390,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":391,"author":{"gitId":"saltedfishxx"},"content":"![Activity diagram for delete-s command](images/DeleteScheduleActivityDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":392,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":393,"author":{"gitId":"saltedfishxx"},"content":"Given below is an example scenario on how the delete schedule command behaves:","lastModifiedDate":"2023-10-24"},{"lineNumber":394,"author":{"gitId":"saltedfishxx"},"content":"1. The user has the application launched with at least 1 schedule added.","lastModifiedDate":"2023-10-24"},{"lineNumber":395,"author":{"gitId":"saltedfishxx"},"content":"2. The user executes `list-s` to view the list of schedules.","lastModifiedDate":"2023-10-24"},{"lineNumber":396,"author":{"gitId":"saltedfishxx"},"content":"3. The user executes `delete-s 1` command, which deletes the schedule with index 1 shown in the list of schedules displayed. The command is parsed in the `AddressBookParser`.","lastModifiedDate":"2023-10-24"},{"lineNumber":397,"author":{"gitId":"saltedfishxx"},"content":"4. `DeleteScheduleCommandParser` is initialized to parse the user input to create a `DeleteSchedulecommand` with the given `Index` representing the user\u0027s input.","lastModifiedDate":"2023-10-24"},{"lineNumber":398,"author":{"gitId":"saltedfishxx"},"content":"5. The `DeleteScheduleCommand#execute(Model)` will perform the following checks in this order to ensure that `Schedule` can be safely deleted from the `Model`:","lastModifiedDate":"2023-10-24"},{"lineNumber":399,"author":{"gitId":"saltedfishxx"},"content":"   - The `Index` is a valid integer.","lastModifiedDate":"2023-10-24"},{"lineNumber":400,"author":{"gitId":"saltedfishxx"},"content":"   - The `Index` is not out of bounds.","lastModifiedDate":"2023-10-24"},{"lineNumber":401,"author":{"gitId":"saltedfishxx"},"content":"     \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An `Index` is considered valid if it\u0027s within the range of the schedule list\u0027s size. This is enforced by throwing an `CommandException` if it is not valid.","lastModifiedDate":"2023-10-24"},{"lineNumber":402,"author":{"gitId":"saltedfishxx"},"content":"       \u003c/div\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":403,"author":{"gitId":"saltedfishxx"},"content":"6. The `execute()` will then call `Model::getFilteredScheduleList` and get the specified Schedule using the `Index` given.","lastModifiedDate":"2023-10-24"},{"lineNumber":404,"author":{"gitId":"saltedfishxx"},"content":"7. Once the checks are successful, the method then calls `Model::deleteSchedule` in `ModelManager` to delete the specified `Schedule` in the model.","lastModifiedDate":"2023-10-24"},{"lineNumber":405,"author":{"gitId":"saltedfishxx"},"content":"8. Finally, the `DeleteScheduleCommand` returns the `CommandResult`.","lastModifiedDate":"2023-10-24"},{"lineNumber":406,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":407,"author":{"gitId":"saltedfishxx"},"content":"The following sequence diagram shows how the above steps for delete schedule operation works, taking `execute(\"delete-s 1\")` API call as an example.","lastModifiedDate":"2023-10-24"},{"lineNumber":408,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":409,"author":{"gitId":"saltedfishxx"},"content":"![Sequence diagram for delete-s command](images/DeleteScheduleSequenceDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":410,"author":{"gitId":"saltedfishxx"},"content":"#### Design rationale:","lastModifiedDate":"2023-10-24"},{"lineNumber":411,"author":{"gitId":"saltedfishxx"},"content":"The `delete-s` command was designed this way to ensure consistency with the previous delete person command.","lastModifiedDate":"2023-10-24"},{"lineNumber":412,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":503,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":504,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":505,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":506,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"mfjkri"},"content":"* has a need to manage a significant number of tutors and their schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"mfjkri"},"content":"**Value proposition**: help tuition centre managers easily track, schedule, and notify tutors of their upcoming schedule","lastModifiedDate":"2023-10-04"},{"lineNumber":522,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"mfjkri"},"content":"| Priority \u0026nbsp; | As a …​   | I want to …​                                                                                   | So that I can…​                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":530,"author":{"gitId":"mfjkri"},"content":"|-----------------|-----------|------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------|","lastModifiedDate":"2023-10-04"},{"lineNumber":531,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | add new tutors to the system                                                                   | manage them                                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":532,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | store each tutor\u0027s contact information, including their name, phone number, and email address  | access it later                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":533,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | remove tutors from the system when they are no longer available                                | keep the system up to date                                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":534,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | view a list of all tutors in the system                                                        | have an overview of available tutors                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":535,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | search for a tutor by their name                                                               | quickly find their information                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":536,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | create a schedule for each tutor                                                               | track their schedule                                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":537,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | delete a schedule for a tutor                                                                  | remove an appointment when the tutor is not available                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":538,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | view a summary of all upcoming tutoring sessions                                               | plan accordingly                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":539,"author":{"gitId":"mfjkri"},"content":"| `* * *`         | manager   | save the schedule and tutor’s information                                                      | can access it again in the future                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":540,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | mark sessions as attended or missed                                                            | track the status of tutoring sessions                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":541,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | keep a record of completed tutoring sessions                                                   | maintain a history of successful sessions                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":542,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | keep a record of missed tutoring sessions                                                      | monitor attendance and address any issues                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":543,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | edit the tutor information                                                                     | update their details easily                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":544,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | edit the schedule information                                                                  | reschedule tutoring sessions                                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":545,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | shorter syntax                                                                                 | work faster                                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":546,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | view schedules by tutor                                                                        | easily plan the schedule of that tutor                                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":547,"author":{"gitId":"mfjkri"},"content":"| `* *`           | manager   | have a help function                                                                           | quickly check the command parameters without having to check the User Guide |","lastModifiedDate":"2023-10-04"},{"lineNumber":548,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | export data to an excel file                                                                   | use the data for other purposes                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":549,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | import data from an excel file                                                                 | easily restore and update records                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":550,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | add new students to the system                                                                 | enrol them                                                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":551,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | store each students contact information, including their name, phone number, and email address | access it later                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":552,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | remove students from the system when they are no longer enrolled                               | maintain an accurate student list                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":553,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | view a list of all students in the system                                                      | have an overview of enrolled students                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":554,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | edit the student information                                                                   | keep their details up to date                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":555,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | assign specific tutors to a student                                                            | have personalised tutoring (one tutor to many students)                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":556,"author":{"gitId":"mfjkri"},"content":"| `*`             | manager   | reassign tutors to students                                                                    | adapt to changing needs and preferences                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":557,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"mfjkri"},"content":"**Use case: Delete a tutor**","lastModifiedDate":"2023-10-04"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":570,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":571,"author":{"gitId":"mfjkri"},"content":"3.  User requests to delete a specific tutor in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":572,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect deletes the tutor","lastModifiedDate":"2023-10-04"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":589,"author":{"gitId":"mfjkri"},"content":"**Use case: Add a schedule**","lastModifiedDate":"2023-10-04"},{"lineNumber":590,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":591,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":592,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":593,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":594,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":595,"author":{"gitId":"mfjkri"},"content":"3.  User requests to add a schedule for a specific tutor in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":596,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect adds the schedule and displays a list of schedule","lastModifiedDate":"2023-10-04"},{"lineNumber":597,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":598,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":599,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":600,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":601,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":602,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":603,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":604,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":605,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":606,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":607,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":608,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":609,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":610,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":611,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":612,"author":{"gitId":"mfjkri"},"content":"* 3b. The schedule parameters is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":613,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":614,"author":{"gitId":"mfjkri"},"content":"    * 3b1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":616,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":617,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":618,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":619,"author":{"gitId":"mfjkri"},"content":"**Use case: Delete a schedule**","lastModifiedDate":"2023-10-04"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":621,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":623,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":624,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":625,"author":{"gitId":"mfjkri"},"content":"3.  User requests to delete a specific schedule in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":626,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect deletes the schedule","lastModifiedDate":"2023-10-04"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":630,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":632,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":634,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":638,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":640,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":642,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":643,"author":{"gitId":"mfjkri"},"content":"**Use case: Mark a schedule as completed**","lastModifiedDate":"2023-10-04"},{"lineNumber":644,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":645,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":646,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":647,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":648,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":649,"author":{"gitId":"mfjkri"},"content":"3.  User requests to mark a specific schedule in the list as completed","lastModifiedDate":"2023-10-04"},{"lineNumber":650,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect marks the schedule as completed","lastModifiedDate":"2023-10-04"},{"lineNumber":651,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":652,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":653,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":654,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":655,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":656,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":657,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":658,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":659,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":660,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":661,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":662,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":663,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":664,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":665,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":666,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":667,"author":{"gitId":"mfjkri"},"content":"**Use case: Edit a tutor information**","lastModifiedDate":"2023-10-04"},{"lineNumber":668,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":669,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":670,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":671,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":672,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":673,"author":{"gitId":"mfjkri"},"content":"3.  User requests to edit a specific tutor information in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":674,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect modifies the tutor information","lastModifiedDate":"2023-10-04"},{"lineNumber":675,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":676,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":679,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":680,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":681,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":682,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":683,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":684,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":685,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":686,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":687,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":688,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":689,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":690,"author":{"gitId":"mfjkri"},"content":"* 3b. The tutor information parameters is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":691,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":692,"author":{"gitId":"mfjkri"},"content":"    * 3b1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":693,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":694,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":695,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":696,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":697,"author":{"gitId":"mfjkri"},"content":"**Use case: Edit a schedule information**","lastModifiedDate":"2023-10-04"},{"lineNumber":698,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":699,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":700,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":702,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"mfjkri"},"content":"3.  User requests to edit a specific schedule information in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect modifies the schedule information","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":707,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":708,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":709,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":710,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":711,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":712,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":714,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":716,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":717,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":718,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":719,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":720,"author":{"gitId":"mfjkri"},"content":"* 3b. The schedule information parameters is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":721,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":722,"author":{"gitId":"mfjkri"},"content":"    * 3b1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":723,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":724,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":725,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":726,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":727,"author":{"gitId":"mfjkri"},"content":"**Use case: View schedules by tutor**","lastModifiedDate":"2023-10-04"},{"lineNumber":728,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":729,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":730,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":731,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":732,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":733,"author":{"gitId":"mfjkri"},"content":"3.  User requests to view schedules for a specific tutor in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":734,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect displays a list of schedules for the tutor","lastModifiedDate":"2023-10-04"},{"lineNumber":735,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":736,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":737,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":738,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":739,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":740,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":741,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":742,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":743,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":744,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":745,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":746,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":747,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":748,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":749,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":750,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":751,"author":{"gitId":"mfjkri"},"content":"**Use case: Delete a student**","lastModifiedDate":"2023-10-04"},{"lineNumber":752,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":753,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":754,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":755,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list students","lastModifiedDate":"2023-10-04"},{"lineNumber":756,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of students","lastModifiedDate":"2023-10-04"},{"lineNumber":757,"author":{"gitId":"mfjkri"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":758,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect deletes the student","lastModifiedDate":"2023-10-04"},{"lineNumber":759,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":760,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":761,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":762,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":763,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":764,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":765,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":766,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":767,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":768,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":769,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":770,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":771,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":772,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":773,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":774,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":775,"author":{"gitId":"mfjkri"},"content":"**Use case: Edit a student information**","lastModifiedDate":"2023-10-04"},{"lineNumber":776,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":777,"author":{"gitId":"mfjkri"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":778,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":779,"author":{"gitId":"mfjkri"},"content":"1.  User requests to list students","lastModifiedDate":"2023-10-04"},{"lineNumber":780,"author":{"gitId":"mfjkri"},"content":"2.  TutorConnect shows a list of students","lastModifiedDate":"2023-10-04"},{"lineNumber":781,"author":{"gitId":"mfjkri"},"content":"3.  User requests to edit a specific student information in the list","lastModifiedDate":"2023-10-04"},{"lineNumber":782,"author":{"gitId":"mfjkri"},"content":"4.  TutorConnect modifies the student information","lastModifiedDate":"2023-10-04"},{"lineNumber":783,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":784,"author":{"gitId":"mfjkri"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":785,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":786,"author":{"gitId":"mfjkri"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":787,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":788,"author":{"gitId":"mfjkri"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-04"},{"lineNumber":789,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":790,"author":{"gitId":"mfjkri"},"content":"  Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":791,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":792,"author":{"gitId":"mfjkri"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":793,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":794,"author":{"gitId":"mfjkri"},"content":"    * 3a1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":795,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":796,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":797,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":798,"author":{"gitId":"mfjkri"},"content":"* 3b. The student information parameters is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":799,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":800,"author":{"gitId":"mfjkri"},"content":"    * 3b1. TutorConnect shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":801,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":802,"author":{"gitId":"mfjkri"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":803,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":804,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":805,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"mfjkri"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` installed.","lastModifiedDate":"2023-10-04"},{"lineNumber":810,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"mfjkri"},"content":"4. Should work without requiring an installer","lastModifiedDate":"2023-10-04"},{"lineNumber":813,"author":{"gitId":"mfjkri"},"content":"5. _GUI_ should work well for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2023-10-04"},{"lineNumber":814,"author":{"gitId":"mfjkri"},"content":"6. _GUI_ should be usable for resolutions 1280x720 and higher, and, for screen scales 150%.","lastModifiedDate":"2023-10-04"},{"lineNumber":815,"author":{"gitId":"mfjkri"},"content":"7. Should not require the user to have an internet connection to use.","lastModifiedDate":"2023-10-04"},{"lineNumber":816,"author":{"gitId":"mfjkri"},"content":"8. Should be a single-user application.","lastModifiedDate":"2023-10-04"},{"lineNumber":817,"author":{"gitId":"mfjkri"},"content":"9. Should persistently save data in a human-readable text file between sessions.","lastModifiedDate":"2023-10-04"},{"lineNumber":818,"author":{"gitId":"mfjkri"},"content":"10. Should be able to transfer the data file to another device with no loss of data.","lastModifiedDate":"2023-10-04"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"mfjkri"},"content":"* **Use case**: A description of a set of sequences of actions, including variants, that a system performs to yield an observable result of value to an actor","lastModifiedDate":"2023-10-04"},{"lineNumber":826,"author":{"gitId":"mfjkri"},"content":"* **GUI**: Graphical user interface","lastModifiedDate":"2023-10-04"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ruishanteo":43,"Jweng88":58,"saltedfishxx":30,"dishenggg":41,"-":402,"mfjkri":305}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"## Welcome to Tutor Connect","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"Tutor Connect is an address book made for **tuition centre managers** to easily track and schedule.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"Here’s an overview of what you can do with Tutor Connect:","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"* Store and edit information about your tutors","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"* Create and plan your tutor availability and schedule","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"* View upcoming schedules","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"On top of these functionalities, we believe that tuition centre management must be efficient. Therefore, Tutor Connect is **optimised for users who can type fast** and utilise the Command Line Interface (CLI) to complete tasks using the keyboard faster than using the mouse.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"## Common Notation","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"**:bulb: Tip**\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"`Tips` are used to provide helpful advice, suggestions, or best practices to enhance your experience by making a task easier or more efficient.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"**:warning: Warning**\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"`Warnings` are used to alert you about potential issues, errors, or risks associated with a task or action. They are essential for preventing mistakes and ensuring safety.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"**:information_source: Information**\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"`Information` sections provide additional background knowledge or context to help you understand a topic better.","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"## Quick Start","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"1. Ensure you have Java `11` installed in your Computer. To verify, perform the following steps:","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"    1. Open a terminal. Refer to the following guides on how:","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"        1. [MacOS](https://support.apple.com/en-sg/guide/terminal/apd5265185d-f365-44cb-8b09-71a064a42125/mac#:~:text\u003dTerminal%20for%20me-,Open%20Terminal,%2C%20then%20double%2Dclick%20Terminal)","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"        2. [Windows](https://www.howtogeek.com/235101/10-ways-to-open-the-command-prompt-in-windows-10/#:~:text\u003danywhere%20you%20like.-,Open%20Command%20Prompt%20from%20the%20Run%20Box,open%20an%20administrator%20Command%20Prompt)","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"    2. Type `java -version` and press Enter.","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"    3. If it says a version other than 11 or `command not found`, please install Java 11 by following this [guide](https://www.java.com/en/download/help/download_options.html).","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"2. Download the latest jar file (tutorconnect.jar) from our [Github Releases](https://github.com/AY2324S1-CS2103T-T17-3/tp/releases).","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"3. Move the jar file into a new folder called “Tutor Connect”.","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"4. Double-click the jar file to launch the application.","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"    \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"   **:information_source: Mac Users**\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"   If you are a Mac user, you may encounter a warning that says","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"   the jar file cannot be opened because it is from an unidentified developer. To continue:","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"    1. Right-click on the jar file and select `Open With \u003e JavaLauncher (default)`","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"    2. Press Open when prompted","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"   \u003c/div\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"5. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"**:information_source: Command Format:**\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`)","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"  will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"  lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"### Adding a tutor: `add-t`","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"Adds a tutor to the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"![add tutor](images/addTutor.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"**Format**: `add-t n/NAME p/PHONE NUMBER e/EMAIL`","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"ruishanteo"},"content":"**Example**:","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"ruishanteo"},"content":"* `add-t n/John Doe p/98765432 e/johnd@example.com`","lastModifiedDate":"2023-10-03"},{"lineNumber":113,"author":{"gitId":"ruishanteo"},"content":"* `add-t n/Betsy Crowe p/91234567 e/betsycrowe@example.com`","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"**Acceptable values for each parameter**:","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"* `NAME`: Only contain alphanumeric characters and spaces, and should not be blank","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"* `PHONE NUMBER`: Only contain numbers, and should be at least 3 digits long","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"* `EMAIL`: Of the format local-part@domain","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"**:information_source: Email Format**\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters.","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"The domain name must:","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"* end with a domain label at least 2 characters long","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"* have each domain label start and end with alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"* have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"**Expected output**:","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"* `New tutor John Doe; Phone: 98765432; Email: johnd@example.com has been added.`","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"**Error messages**:","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"* `Invalid command format!`: One or more of the tags `n/`, `p/`, `e/` is missing. ","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"* `Names should only contain alphanumeric characters and spaces, and it should not be blank`: Tutor name input was ","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"  either invalid or blank. ","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"* `Phone numbers should only contain numbers, and it should be at least 3 digits long`: Tutor phone number input was","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"  either invalid or blank.","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"* `Emails should be of the format local-part@domain and adhere to the following constraints:`: Tutor email input was","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"ruishanteo"},"content":"  either invalid or blank.","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"Jweng88"},"content":"### Listing all tutors: `list-t`","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"Jweng88"},"content":"Displays a list of all tutors in the address book in a table format.","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"Jweng88"},"content":"![list tutor](images/listTutor.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"Jweng88"},"content":"**Format**: `list-t`","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"Jweng88"},"content":"**Example**:","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"Jweng88"},"content":"* `list-t`","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"Jweng88"},"content":"**Expected Output**:","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"Jweng88"},"content":"* `Listed all tutors`","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"Jweng88"},"content":"    \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"Jweng88"},"content":"    **:information_source: Information**\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"Jweng88"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"Jweng88"},"content":"    * list-t command does not take in any parameters.","lastModifiedDate":"2023-10-05"},{"lineNumber":165,"author":{"gitId":"Jweng88"},"content":"    * Any extraneous parameters after `list-t` will be ignored.","lastModifiedDate":"2023-10-05"},{"lineNumber":166,"author":{"gitId":"Jweng88"},"content":"      e.g. if the command specifies `list-t 123`, it will be interpreted as `list-t`.","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"Jweng88"},"content":"    * No error messages as anything typed behind is ignored.","lastModifiedDate":"2023-10-05"},{"lineNumber":168,"author":{"gitId":"Jweng88"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"Jweng88"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"mfjkri"},"content":"### Locating tutors by name: `find`","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"Find tutors whose names contain any of the given keywords.","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"mfjkri"},"content":"![find tutor](images/findTutor.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"**Format**: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":180,"author":{"gitId":"mfjkri"},"content":"**Examples**:","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"* `find John` returns `John Smith` and `John Doe`","lastModifiedDate":"2023-10-05"},{"lineNumber":182,"author":{"gitId":"mfjkri"},"content":"* `find Alex David Li` returns `Alex David Li`","lastModifiedDate":"2023-10-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":184,"author":{"gitId":"mfjkri"},"content":"**Acceptable values for each parameter**:","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"mfjkri"},"content":"* `KEYWORD`: Any input accepted","lastModifiedDate":"2023-10-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":187,"author":{"gitId":"mfjkri"},"content":"    \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"mfjkri"},"content":"    **:information_source: Search behaviour**\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":191,"author":{"gitId":"mfjkri"},"content":"    * Search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"mfjkri"},"content":"    * The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"mfjkri"},"content":"    * Only the tutor name is searched.","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"mfjkri"},"content":"    * Only full words will be matched. e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"mfjkri"},"content":"    * Tutors matching at least one keyword will be returned (i.e. OR search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-10-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":197,"author":{"gitId":"mfjkri"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"mfjkri"},"content":"**Expected output**:","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"mfjkri"},"content":"* `2 tutors listed!`","lastModifiedDate":"2023-10-05"},{"lineNumber":201,"author":{"gitId":"mfjkri"},"content":"* `0 tutors listed!`","lastModifiedDate":"2023-10-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":203,"author":{"gitId":"Jweng88"},"content":"**Error messages**:","lastModifiedDate":"2023-10-05"},{"lineNumber":204,"author":{"gitId":"mfjkri"},"content":"* `Invalid command format!`: No search keyword provided.","lastModifiedDate":"2023-10-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"saltedfishxx"},"content":"### Deleting a tutor: `delete-t`","lastModifiedDate":"2023-10-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":208,"author":{"gitId":"saltedfishxx"},"content":"Deletes a tutor in the address book based on their index number in the table.","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":210,"author":{"gitId":"saltedfishxx"},"content":"![delete tutor](images/deleteTutor.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"saltedfishxx"},"content":"**Format**: `delete-t TUTOR_INDEX`","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"saltedfishxx"},"content":"**Examples**:","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"saltedfishxx"},"content":"* `delete-t 5` deletes the tutor that is indexed as 5 in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"saltedfishxx"},"content":"* `list` followed by `delete-t 2` deletes the 2nd person in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"saltedfishxx"},"content":"**Acceptable values for each parameter**:","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"saltedfishxx"},"content":"* `TUTOR_INDEX`: Only accepts numerical value","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":221,"author":{"gitId":"saltedfishxx"},"content":"**Expected output**:","lastModifiedDate":"2023-10-05"},{"lineNumber":222,"author":{"gitId":"saltedfishxx"},"content":"* `Tutor has been deleted: Alex Yeoh; Phone: 87438807;","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"saltedfishxx"},"content":"  Email: alexyeoh@example.com; Address: Blk 30 Geylang Street 29, #06-40`","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"Jweng88"},"content":"**Error messages**:","lastModifiedDate":"2023-10-05"},{"lineNumber":226,"author":{"gitId":"Jweng88"},"content":"* `Invalid command format!`: No tutor index provided.","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"Jweng88"},"content":"* `Index number given is out of range`: Given tutor index is out of range.","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"saltedfishxx"},"content":"* `Invalid parameter given`: Parameter given is not a numerical value.","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":230,"author":{"gitId":"dishenggg"},"content":"### Adding a schedule: `add-s`","lastModifiedDate":"2023-10-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":232,"author":{"gitId":"dishenggg"},"content":"Adds a schedule to a specified tutor.","lastModifiedDate":"2023-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":234,"author":{"gitId":"dishenggg"},"content":"![add schedule](images/addSchedule.png)","lastModifiedDate":"2023-10-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":236,"author":{"gitId":"dishenggg"},"content":"**Format**: `add-s TUTOR_INDEX s/START_TIME e/END_TIME`","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":238,"author":{"gitId":"dishenggg"},"content":"**Examples**:","lastModifiedDate":"2023-10-04"},{"lineNumber":239,"author":{"gitId":"dishenggg"},"content":"* `add-s 1 s/2023-09-15T09:00:00 e/2023-09-15T11:00:00`","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"dishenggg"},"content":"* `add-s 2 s/2023-09-16T17:00:00 e/2023-09-16T19:00:00`","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":242,"author":{"gitId":"dishenggg"},"content":"**Acceptable values for each parameter**:","lastModifiedDate":"2023-10-04"},{"lineNumber":243,"author":{"gitId":"dishenggg"},"content":"* `TUTOR_INDEX`: Only number input accepted, starting from 1 to the last tutor index shown in the list of tutors.","lastModifiedDate":"2023-10-04"},{"lineNumber":244,"author":{"gitId":"dishenggg"},"content":"* `START_TIME`: Only datetime in `yyyy-MM-ddTHH:mm:ss` format is accepted","lastModifiedDate":"2023-10-04"},{"lineNumber":245,"author":{"gitId":"dishenggg"},"content":"* `END_TIME`: Only datetime in `yyyy-MM-ddTHH:mm:ss` format is accepted","lastModifiedDate":"2023-10-04"},{"lineNumber":246,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":247,"author":{"gitId":"dishenggg"},"content":"    \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":249,"author":{"gitId":"dishenggg"},"content":"  **:information_source: Information**\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":250,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":251,"author":{"gitId":"dishenggg"},"content":"    * `yyyy` represents the **year** (e.g., 2023).","lastModifiedDate":"2023-10-04"},{"lineNumber":252,"author":{"gitId":"dishenggg"},"content":"    * `MM` represents the **month** with a leading zero (e.g., 09 for September, 10 for October).","lastModifiedDate":"2023-10-04"},{"lineNumber":253,"author":{"gitId":"dishenggg"},"content":"    * `dd` represents the **day** of the month with a leading zero (e.g., 03, 15).","lastModifiedDate":"2023-10-04"},{"lineNumber":254,"author":{"gitId":"dishenggg"},"content":"    * `T` is a **separator** indicating the start of the time portion.","lastModifiedDate":"2023-10-04"},{"lineNumber":255,"author":{"gitId":"dishenggg"},"content":"    * `HH` represents the **hour** in **24-hour format** with a leading zero (e.g., 09 for 9 AM, 21 for 9 PM).","lastModifiedDate":"2023-10-04"},{"lineNumber":256,"author":{"gitId":"dishenggg"},"content":"    * `mm` represents the **minutes** with a leading zero (e.g., 05).","lastModifiedDate":"2023-10-04"},{"lineNumber":257,"author":{"gitId":"dishenggg"},"content":"    * `ss` represents the **seconds** with a leading zero (e.g., 05).","lastModifiedDate":"2023-10-04"},{"lineNumber":258,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":259,"author":{"gitId":"dishenggg"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":260,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":261,"author":{"gitId":"dishenggg"},"content":"**Expected output**:","lastModifiedDate":"2023-10-04"},{"lineNumber":262,"author":{"gitId":"dishenggg"},"content":"* `New schedule John Doe; Start Time Sep 15 2023 09:00; End Time: Sep 15  2023 11:00 has been added.`","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":264,"author":{"gitId":"dishenggg"},"content":"**Error messages**:","lastModifiedDate":"2023-10-04"},{"lineNumber":265,"author":{"gitId":"dishenggg"},"content":"* `Invalid command format!`: Invalid TUTOR_INDEX or some of the tags `s/`, `e/` is missing.","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"dishenggg"},"content":"* `EndTime should only contain a valid date and time in the format \"yyyy-MM-ddTHH:mm:ss\", and it should not be blank`: ","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"dishenggg"},"content":"  The start time entered is not in the correct datetime format.","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"dishenggg"},"content":"* `StartTime should only contain a valid date and time in the format \"yyyy-MM-ddTHH:mm:ss\", and it should not be blank`: The end time entered is not in the correct datetime format.","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"dishenggg"},"content":"* `Multiple values specified for the following single-valued field(s): s/`: More than 1 s/ was given in the command","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"dishenggg"},"content":"* `Multiple values specified for the following single-valued field(s): e/`: More than 1 e/ was given in the command","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"dishenggg"},"content":"* `This schedule already exists in the address book`: There is a schedule for the same tutor with the same start and end time in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"dishenggg"},"content":"* `This tutor has a clashing schedule in the address book`: There is a schedule for the same tutor with overlapping times in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":274,"author":{"gitId":"ruishanteo"},"content":"### Editing a schedule: `edit-s`","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":276,"author":{"gitId":"ruishanteo"},"content":"Edits an existing schedule in the addressbook.","lastModifiedDate":"2023-10-21"},{"lineNumber":277,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":278,"author":{"gitId":"ruishanteo"},"content":"![edit schedule](images/editSchedule.png)","lastModifiedDate":"2023-10-21"},{"lineNumber":279,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":280,"author":{"gitId":"ruishanteo"},"content":"**Format**: `edit-s SCHEDULE_INDEX s/START_TIME e/END_TIME`","lastModifiedDate":"2023-10-21"},{"lineNumber":281,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":282,"author":{"gitId":"ruishanteo"},"content":"**Examples**:","lastModifiedDate":"2023-10-21"},{"lineNumber":283,"author":{"gitId":"ruishanteo"},"content":"* `edit-s 1 s/2023-09-15T13:00:00`","lastModifiedDate":"2023-10-21"},{"lineNumber":284,"author":{"gitId":"ruishanteo"},"content":"* `edit-s 2 e/2023-09-16T19:00:00`","lastModifiedDate":"2023-10-21"},{"lineNumber":285,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":286,"author":{"gitId":"ruishanteo"},"content":"**Acceptable values for each parameter**:","lastModifiedDate":"2023-10-21"},{"lineNumber":287,"author":{"gitId":"ruishanteo"},"content":"* `SCHEDULE_INDEX`: Only number input accepted, starting from 1 to the last schedule index shown in the list of ","lastModifiedDate":"2023-10-21"},{"lineNumber":288,"author":{"gitId":"ruishanteo"},"content":"  schedules.","lastModifiedDate":"2023-10-21"},{"lineNumber":289,"author":{"gitId":"ruishanteo"},"content":"* `START_TIME`: Only datetime in `yyyy-MM-ddTHH:mm:ss` format is accepted","lastModifiedDate":"2023-10-21"},{"lineNumber":290,"author":{"gitId":"ruishanteo"},"content":"* `END_TIME`: Only datetime in `yyyy-MM-ddTHH:mm:ss` format is accepted","lastModifiedDate":"2023-10-21"},{"lineNumber":291,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":292,"author":{"gitId":"ruishanteo"},"content":"**Expected output**:","lastModifiedDate":"2023-10-21"},{"lineNumber":293,"author":{"gitId":"ruishanteo"},"content":"* `Edited Schedule: Alex Yeoh; Start Time: Sep 15 2023 09:00; End Time: Sep 15 2023 13:00`","lastModifiedDate":"2023-10-21"},{"lineNumber":294,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":295,"author":{"gitId":"ruishanteo"},"content":"**Error messages**:","lastModifiedDate":"2023-10-21"},{"lineNumber":296,"author":{"gitId":"ruishanteo"},"content":"* `Invalid command format!`: Invalid or missing SCHEDULE_INDEX.","lastModifiedDate":"2023-10-21"},{"lineNumber":297,"author":{"gitId":"ruishanteo"},"content":"* `EndTime should only contain a valid date and time in the format \"yyyy-MM-ddTHH:mm:ss\", and it should not be blank`:","lastModifiedDate":"2023-10-21"},{"lineNumber":298,"author":{"gitId":"ruishanteo"},"content":"  The end time entered is not in the correct datetime format.","lastModifiedDate":"2023-10-21"},{"lineNumber":299,"author":{"gitId":"ruishanteo"},"content":"* `StartTime should only contain a valid date and time in the format \"yyyy-MM-ddTHH:mm:ss\", and it should not be ","lastModifiedDate":"2023-10-21"},{"lineNumber":300,"author":{"gitId":"ruishanteo"},"content":"  blank`: The start time entered is not in the correct datetime format.","lastModifiedDate":"2023-10-21"},{"lineNumber":301,"author":{"gitId":"ruishanteo"},"content":"* `Multiple values specified for the following single-valued field(s): s/`: More than 1 `s/` was given in the command","lastModifiedDate":"2023-10-21"},{"lineNumber":302,"author":{"gitId":"ruishanteo"},"content":"* `Multiple values specified for the following single-valued field(s): e/`: More than 1 `e/` was given in the command","lastModifiedDate":"2023-10-21"},{"lineNumber":303,"author":{"gitId":"ruishanteo"},"content":"* `This schedule already exists in the address book`: There is a schedule for the same tutor with the same start and end time in the address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":304,"author":{"gitId":"ruishanteo"},"content":"* `This tutor has a clashing schedule in the address book`: There is a schedule for the same tutor with overlapping times in the address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":305,"author":{"gitId":"ruishanteo"},"content":"* `At least one field to edit must be provided.`: There is no `s/` or `e/` tag provided to edit a field.","lastModifiedDate":"2023-10-21"},{"lineNumber":306,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":307,"author":{"gitId":"saltedfishxx"},"content":"### List all schedules: `list-s`","lastModifiedDate":"2023-10-05"},{"lineNumber":308,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":309,"author":{"gitId":"saltedfishxx"},"content":"Displays a list of all schedules in the address book in a table format.","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":311,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":312,"author":{"gitId":"saltedfishxx"},"content":"![view schedule](images/viewSchedule.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":313,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"saltedfishxx"},"content":"**Format:** `list-s`","lastModifiedDate":"2023-10-05"},{"lineNumber":315,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"saltedfishxx"},"content":"**Example:**","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"saltedfishxx"},"content":"* `list-s` shows all recorded schedules in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":319,"author":{"gitId":"saltedfishxx"},"content":"**Expected output:**","lastModifiedDate":"2023-10-05"},{"lineNumber":320,"author":{"gitId":"saltedfishxx"},"content":"* Displays a table of schedules with columns for List number, Tutor Name, Start Time, and End Time","lastModifiedDate":"2023-10-05"},{"lineNumber":321,"author":{"gitId":"saltedfishxx"},"content":"* If there are no schedules in the address book, displays a message telling the user to add a tutor with `add-s`.","lastModifiedDate":"2023-10-05"},{"lineNumber":322,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":323,"author":{"gitId":"saltedfishxx"},"content":"![empty schedule list](images/emptyScheduleList.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":324,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":325,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":326,"author":{"gitId":"saltedfishxx"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":327,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":328,"author":{"gitId":"saltedfishxx"},"content":"**:information_source: Information**\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"saltedfishxx"},"content":"    ","lastModifiedDate":"2023-10-05"},{"lineNumber":330,"author":{"gitId":"saltedfishxx"},"content":"* list-s command does not take in any parameters.","lastModifiedDate":"2023-10-06"},{"lineNumber":331,"author":{"gitId":"saltedfishxx"},"content":"* Any extraneous parameters after `list-s` will be ignored.","lastModifiedDate":"2023-10-06"},{"lineNumber":332,"author":{"gitId":"saltedfishxx"},"content":"    e.g. if the command specifies `list-s 123`, it will be interpreted as `list-s`.","lastModifiedDate":"2023-10-06"},{"lineNumber":333,"author":{"gitId":"saltedfishxx"},"content":"* No error messages as anything typed behind is ignored.","lastModifiedDate":"2023-10-06"},{"lineNumber":334,"author":{"gitId":"saltedfishxx"},"content":"    ","lastModifiedDate":"2023-10-06"},{"lineNumber":335,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":337,"author":{"gitId":"saltedfishxx"},"content":"### Deleting a schedule: `delete-s`","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":339,"author":{"gitId":"saltedfishxx"},"content":"Deletes a schedule in the address book based on their index number in the table of schedules listed.","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"saltedfishxx"},"content":"![delete schedule](images/deleteSchedule.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":342,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":343,"author":{"gitId":"saltedfishxx"},"content":"**Format:** `delete-s SCHEDULE_INDEX`","lastModifiedDate":"2023-10-05"},{"lineNumber":344,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"saltedfishxx"},"content":"**Example:**","lastModifiedDate":"2023-10-05"},{"lineNumber":346,"author":{"gitId":"saltedfishxx"},"content":"* `delete-s 5` deletes the schedule that is indexed as 5 in the schedule list.","lastModifiedDate":"2023-10-05"},{"lineNumber":347,"author":{"gitId":"saltedfishxx"},"content":"* `list` followed by `delete-s 2` deletes the 2nd schedule in the schedule list.","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"saltedfishxx"},"content":"**Acceptable values for each parameter:**","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"saltedfishxx"},"content":"* `SCHEDULE_INDEX`: Only numerical input that ranges from 1 to the last schedule shown in the list of schedules.","lastModifiedDate":"2023-10-06"},{"lineNumber":351,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":352,"author":{"gitId":"saltedfishxx"},"content":"**Expected output:**","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"saltedfishxx"},"content":"* `Schedule has been deleted: Tutor: John Doe; Start date: Sep 15, 2023 09:00; End date: Sep 15, 2023 11:00;`","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"saltedfishxx"},"content":"**Error messages:**","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"saltedfishxx"},"content":"* `Index number given is out of range`: Given index is out of range.","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"saltedfishxx"},"content":"* `Invalid value in parameter SCHEDULE_INDEX`: Parameter given is not a numerical value.","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"saltedfishxx"},"content":"* `Missing parameter SCHEDULE_INDEX`: A numerical value is not provided when calling the command `delete-s`.","lastModifiedDate":"2023-10-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"saltedfishxx"},"content":"_More details coming soon ..._","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"dishenggg"},"content":"| Action              | Format, Examples                                                                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":380,"author":{"gitId":"saltedfishxx"},"content":"|---------------------|-----------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-05"},{"lineNumber":381,"author":{"gitId":"dishenggg"},"content":"| **Add Tutor**       | `add-t n/NAME p/PHONE NUMBER e/EMAIL` \u003cbr\u003e e.g., `add-t n/John Doe p/98765432 e/johnd@example.com`                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":382,"author":{"gitId":"saltedfishxx"},"content":"| **List Tutor**      | `list-t`                                                                                                                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"saltedfishxx"},"content":"| **Delete Tutor**    | `delete-t TUTOR_INDEX`\u003cbr\u003e e.g., `delete-t 3`                                                                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"dishenggg"},"content":"| **Add Schedule**    | `add-s ti/TUTOR_INDEX s/START_TIME e/END_TIME` \u003cbr\u003e e.g., `add-s ti/1 s/2023-09-15T09:00:00 e/2023-09-15T11:00:00`          |","lastModifiedDate":"2023-10-04"},{"lineNumber":385,"author":{"gitId":"saltedfishxx"},"content":"| **List Schedule**   | `list-s`                                                                                                                    |","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"saltedfishxx"},"content":"| **Delete Schedule** | `delete-s INDEX_NO`\u003cbr\u003e e.g., `delete-s 3`                                                                                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"dishenggg"},"content":"| **Clear**           | `clear`                                                                                                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":388,"author":{"gitId":"dishenggg"},"content":"| **Edit**            | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com` |","lastModifiedDate":"2023-10-04"},{"lineNumber":389,"author":{"gitId":"dishenggg"},"content":"| **Find**            | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                  |","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ruishanteo":118,"Jweng88":33,"saltedfishxx":59,"dishenggg":50,"-":108,"mfjkri":21}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"dishenggg"},"content":"    content: \"Tutor Connect\";","lastModifiedDate":"2023-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"dishenggg":1,"-":294}},{"path":"docs/diagrams/AddScheduleActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"@startuml","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"skin rose","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"start","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":":User executes add-s command;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"if () then ([valid Index])","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    :Get tutor;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"    if () then ([valid StartTime and EndTime for schedule])","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"        :Create new Schedule object;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"        if () then ([schedule does not already exists])","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"            if () then ([schedule does not clash])","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"                    : Add Schedule;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"                else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"                    :Throw Exception;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"                endif","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"        else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"            :Throw  Exception;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        endif","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        :Throw Exception;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    endif","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    :Throw Exception;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"endif","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"stop","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"@enduml","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"dishenggg":31}},{"path":"docs/diagrams/AddScheduleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"@startuml","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"!include style.puml","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"participant \":AddScheduleCommandParser\" as AddScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"participant \"add-s:AddScheduleCommand\" as AddScheduleCommand LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"end box","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"participant \"s:Schedule\" as Schedule MODEL_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"end box","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"[-\u003e LogicManager : execute(String)","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"activate LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(String)","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"create AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"AddressBookParser -\u003e AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"activate AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"deactivate AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"AddressBookParser -\u003e AddScheduleCommandParser : parse(String)","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"activate AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"create AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommandParser -\u003e AddScheduleCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"activate AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"deactivate AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommandParser --\u003e AddressBookParser : add-s","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"deactivate AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"destroy AddScheduleCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"LogicManager -\u003e AddScheduleCommand : execute()","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"activate AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"Model --\u003e AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"create Schedule","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e Schedule","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"activate Schedule","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"Schedule --\u003e AddScheduleCommand : s","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"deactivate Schedule","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e Model : hasSchedule(s)","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"Model --\u003e AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e Model : getAddressBook()","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"Model --\u003e AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"loop number of schedules in model","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"    AddScheduleCommand -\u003e Schedule : isClashing(Schedule)","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"    activate Schedule","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    Schedule --\u003e AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"    deactivate Schedule","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"end","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e Model : addSchedule(s)","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"Model --\u003e AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"create CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -\u003e CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"activate CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"CommandResult --\u003e AddScheduleCommand : result","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"deactivate AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"AddScheduleCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"destroy AddScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"@enduml","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"dishenggg":108}},{"path":"docs/diagrams/AddTutorActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"@startuml","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"skin rose","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"start","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":":User executes command;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"if () then ([all fields present])","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"    if () then ([no repeated fields])","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"         if () then ([valid name])","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"              if () then ([valid phone])","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"                   if () then ([valid email])","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"                        if () then ([non-duplicate tutor])","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"                            :Add tutor to AddressBook;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"                       else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"                            :ErrorDuplicateTutor;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"                       endif","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"                   else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"                        :Error: Emails should be of the format local-part@domain...;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"                   endif","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"              else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"                  :Error: Phone numbers should only contain numbers, ...;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"              endif","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"         else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"             :Error:  Names should only contain alphanumeric characters, ...;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"         endif","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"    else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"     :ErrorDuplicatePrefixes;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"    endif","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":" :ErrorInvalidCommandFormat;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"endif","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"stop","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"@enduml","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":37}},{"path":"docs/diagrams/AddTutorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"@startuml","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"!include style.puml","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"participant \":AddTutorCommandParser\" as AddTutorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"participant \"person:Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"participant \"d:AddTutorCommand\" as AddTutorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"end box","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"end box","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"[-\u003e LogicManager : execute(\"add-t \\n n/John Doe p/98765432 \\n e/johnd@example.com\")","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"activate LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add-t \\n n/John Doe p/98765432 \\n e/johnd@example.com\")","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"create AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"AddressBookParser -\u003e AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"activate AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"deactivate AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"AddressBookParser -\u003e AddTutorCommandParser : parse(\"John Doe\" \\n \"98765432\" \\n \"johnd@example.com\")","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"activate AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"create Person","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommandParser -\u003e Person","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"activate Person","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"Person --\u003e AddTutorCommandParser : person","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"deactivate Person","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"create AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommandParser -\u003e AddTutorCommand : AddTutorCommand(person)","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"activate AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommand --\u003e AddTutorCommandParser : d","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"deactivate AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"deactivate AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"destroy AddTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"LogicManager -\u003e AddTutorCommand : execute()","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"activate AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommand -\u003e Model : addPerson(person)","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"Model --\u003e AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"create CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"activate CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"CommandResult --\u003e AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"AddTutorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"deactivate AddTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"@enduml","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":78}},{"path":"docs/diagrams/DeleteScheduleActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"skin rose","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"start","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":":User executes command;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" \u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"if () then ([have index])","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    if() then ([numeric index])","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"        if () then ([index within range])","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"            :Delete schedule in Addressbook;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"        else ([else])","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"         :ErrorInvalidScheduleDisplayedIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"        endif","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    else ([else])","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"     :ErrorInvalidCommandFormat;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"    endif","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"else ([else])","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":" :ErrorInvalidCommandFormat;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"endif","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"stop","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"saltedfishxx":25}},{"path":"docs/diagrams/DeleteScheduleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"@startuml","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"!include style.puml","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"participant \":DeleteScheduleCommandParser\" as DeleteScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"participant \"d:DeleteScheduleCommand\" as DeleteScheduleCommand LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"end box","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"[-\u003e LogicManager : execute(\"delete-s 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"activate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete-s 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"create DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"AddressBookParser -\u003e DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"activate DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"deactivate DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"AddressBookParser -\u003e DeleteScheduleCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"activate DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"create DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommandParser -\u003e DeleteScheduleCommand : DeleteScheduleCommand(1)","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"activate DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommand --\u003e DeleteScheduleCommandParser : d","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"deactivate DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"deactivate DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"destroy DeleteScheduleCommandParser","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"LogicManager -\u003e DeleteScheduleCommand : execute()","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"activate DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommand -\u003e Model : getFilteredScheduleList()","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"activate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"Model --\u003e DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"deactivate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommand -\u003e Model : deleteSchedule(Schedule)","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"activate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"Model --\u003e DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"deactivate Model","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"create CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommand -\u003e CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"activate CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"CommandResult --\u003e DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"DeleteScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"deactivate DeleteScheduleCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"@enduml","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"saltedfishxx":76}},{"path":"docs/diagrams/DeleteTutorActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"@startuml","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"skin rose","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"start","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":":User executes command;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":" \u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"if () then ([have index])","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    if() then ([numeric index])","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"        if () then ([index within range])","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"            :Delete tutor in Addressbook;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"        else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"         :ErrorInvalidPersonDisplayedIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"        endif","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     :ErrorInvalidCommandFormat;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"    endif","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"else ([else])","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":" :ErrorInvalidCommandFormat;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"endif","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"stop","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"@enduml","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Jweng88":25}},{"path":"docs/diagrams/DeleteTutorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"@startuml","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"!include style.puml","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"participant \":DeleteTutorCommandParser\" as DeleteTutorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"participant \"d:DeleteTutorCommand\" as DeleteTutorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"end box","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"end box","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"[-\u003e LogicManager : execute(\"delete-t 1\")","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"activate LogicManager","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete-t 1\")","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"create DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"AddressBookParser -\u003e DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"activate DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"Jweng88"},"content":"deactivate DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"AddressBookParser -\u003e DeleteTutorCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"activate DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"create DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommandParser -\u003e DeleteTutorCommand : DeleteTutorCommand(1)","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"activate DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommand --\u003e DeleteTutorCommandParser : d","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Jweng88"},"content":"deactivate DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"deactivate DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"Jweng88"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Jweng88"},"content":"destroy DeleteTutorCommandParser","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"Jweng88"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"LogicManager -\u003e DeleteTutorCommand : execute()","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"Jweng88"},"content":"activate DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"Jweng88"},"content":"activate Model","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"Model --\u003e DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"Jweng88"},"content":"deactivate Model","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommand -\u003e Model : deletePerson(person)","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"activate Model","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"Model --\u003e DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"deactivate Model","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"create CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"activate CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"CommandResult --\u003e DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"DeleteTutorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"deactivate DeleteTutorCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"Jweng88"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"@enduml","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Jweng88":76}},{"path":"docs/diagrams/EditTutorActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"@startuml","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"skin rose","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"start","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":":User executes command;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"if () then ([valid index])","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    if () then ([no repeated fields])","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"         if () then ([no invalid field values])","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"            if () then ([non-duplicate tutor])","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"                :Edit tutor in AddressBook;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"            else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"             :ErrorDuplicateTutor;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"            endif","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"        else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"         :ErrorInvalidFieldValue;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        endif","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"    else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"     :ErrorDuplicatePrefixes;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    endif","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"else ([else])","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":" :ErrorInvalidCommandFormat;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"endif","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"stop","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"@enduml","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"mfjkri":29}},{"path":"docs/diagrams/EditTutorSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"@startuml","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"!include style.puml","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"participant \":EditTutorCommandParser\" as EditTutorCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"participant \"e:EditPersonDescriptor\" as EditPersonDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"participant \"d:EditTutorCommand\" as EditTutorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"end box","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"end box","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"[-\u003e LogicManager : execute(\"edit-t 1 n/New Name\")","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"activate LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit-t 1 n/New Name\")","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"create EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"AddressBookParser -\u003e EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"activate EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"EditTutorCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"deactivate EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"AddressBookParser -\u003e EditTutorCommandParser : parse(\"1 n/New Name\")","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"activate EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"create EditPersonDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"EditTutorCommandParser -\u003e EditPersonDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"activate EditPersonDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"EditPersonDescriptor --\u003e EditTutorCommandParser : e","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"deactivate EditPersonDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"create EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"EditTutorCommandParser -\u003e EditTutorCommand : EditTutorCommand(1, e)","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"activate EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand --\u003e EditTutorCommandParser : d","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"mfjkri"},"content":"deactivate EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"mfjkri"},"content":"EditTutorCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"deactivate EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"mfjkri"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"EditTutorCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"destroy EditTutorCommandParser","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"mfjkri"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"mfjkri"},"content":"LogicManager -\u003e EditTutorCommand : execute()","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"mfjkri"},"content":"activate EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"mfjkri"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"Model --\u003e EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand -\u003e EditTutorCommand : createEditedPerson(p, e)","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand -\u003e Person : Person()","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand -\u003e Model : setPerson(p, editedPerson)","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"Model --\u003e EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand -\u003e Model : updateFilteredPersonList()","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"mfjkri"},"content":"activate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"Model --\u003e EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"deactivate Model","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"mfjkri"},"content":"create CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"activate CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"CommandResult --\u003e EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"EditTutorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"deactivate EditTutorCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"@enduml","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"mfjkri":94}},{"path":"docs/team/dishenggg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"### Project: Tutor Connect","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"This is an address book made for tuition centre managers to easily track, schedule, and notify tutors of their upcoming schedule, optimised for users who prefer a CLI.","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"### TO BE ADDED SOON","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddishenggg\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"    *","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"        *","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"        *","lastModifiedDate":"2023-09-28"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2023-09-28"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    *","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"* **Review/ mentoring contributions**:","lastModifiedDate":"2023-09-28"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    *","lastModifiedDate":"2023-09-28"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    *","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"dishenggg":27}},{"path":"docs/team/jweng88.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jweng88"},"content":"### Project: Tutor Connect","lastModifiedDate":"2023-09-29"},{"lineNumber":2,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":3,"author":{"gitId":"Jweng88"},"content":"This is an address book made for tuition centre managers to easily track, schedule, and notify tutors of their upcoming schedule, optimised for users who prefer a CLI.","lastModifiedDate":"2023-09-29"},{"lineNumber":4,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-29"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":7,"author":{"gitId":"Jweng88"},"content":"### TO BE ADDED SOON","lastModifiedDate":"2023-09-29"},{"lineNumber":8,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djweng88\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-29"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-29"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"    * to be added soon","lastModifiedDate":"2023-09-29"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-29"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    * User Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"        * to be added soon","lastModifiedDate":"2023-09-29"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-29"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"        * to be added soon","lastModifiedDate":"2023-09-29"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2023-09-29"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    * to be added soon","lastModifiedDate":"2023-09-29"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"* **Review/ mentoring contributions**:","lastModifiedDate":"2023-09-29"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"    * to be added soon","lastModifiedDate":"2023-09-29"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-09-29"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-09-29"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"    * to be added soon","lastModifiedDate":"2023-09-29"}],"authorContributionMap":{"Jweng88":27}},{"path":"docs/team/mfjkri.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"### Project: Tutor Connect","lastModifiedDate":"2023-09-23"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"This is an address book made for tuition centre managers to easily track, schedule, and notify tutors of their upcoming schedule, optimised for users who prefer a CLI.","lastModifiedDate":"2023-09-23"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-23"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"### TO BE ADDED SOON","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dmfjkri\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-23"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-23"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"    * to be added soon","lastModifiedDate":"2023-09-23"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"    * User Guide:","lastModifiedDate":"2023-09-23"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"        * to be added soon","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        * to be added soon","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"    * to be added soon","lastModifiedDate":"2023-09-23"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"* **Review/ mentoring contributions**:","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    * to be added soon","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"    * to be added soon","lastModifiedDate":"2023-09-23"}],"authorContributionMap":{"mfjkri":27}},{"path":"docs/team/ruishanteo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"### Project: Tutor Connect","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"This is an address book made for tuition centre managers to easily track, schedule, and notify tutors of their upcoming schedule, optimised for users who prefer a CLI.","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"### TO BE ADDED SOON","lastModifiedDate":"2023-09-23"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-23"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003druishanteo\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"    * ","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"    * User Guide:","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"        * ","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"        * ","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"    * ","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"* **Review/ mentoring contributions**:","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"    * ","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"    *","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ruishanteo":27}},{"path":"docs/team/saltedfishxx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"### Project: Tutor Connect","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"This is an address book made for tuition centre managers to easily track, schedule, and notify tutors of their upcoming schedule, optimised for users who prefer a CLI.","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"### TO BE ADDED SOON","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003druishanteo\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"    *","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"        *","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"        *","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    *","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"* **Review/ mentoring contributions**:","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    *","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    *","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"saltedfishxx":27}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":185,"mfjkri":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    ObservableList\u003cSchedule\u003e getFilteredScheduleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dishenggg":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"    public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        return model.getFilteredScheduleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dishenggg":6,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX \u003d \"The schedule index provided is invalid\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d tutors listed!\";","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"                .append(person.getEmail());","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"     * Formats the {@code schedule} for display to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public static String format(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        builder.append(schedule.getTutor().getName())","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"                .append(\"; Start Time: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"                .append(schedule.getStartTime())","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"                .append(\"; End Time: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"                .append(schedule.getEndTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruishanteo":1,"saltedfishxx":1,"dishenggg":11,"-":46,"mfjkri":1}},{"path":"src/main/java/seedu/address/logic/commands/AddScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.model.schedule.Schedule.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":" * Adds a schedule to the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"public class AddScheduleCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public static final String COMMAND_WORD \u003d \"add-s\";","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a schedule to the address book for a tutor \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"            + \"by the index number used in the displayed tutor list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"            + \"TUTOR_INDEX (must be a positive integer)\"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"            + PREFIX_START_TIME + \"START_TIME \"","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"            + PREFIX_END_TIME + \"END_TIME\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"            + \"1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"            + PREFIX_START_TIME + \"2023-09-15T09:00:00 \"","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"            + PREFIX_END_TIME + \"2023-09-15T11:00:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New schedule %1$s has been added.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"This schedule already exists in the address book\";","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_CLASHING_SCHEDULE \u003d \"This tutor has a clashing schedule in the address book\";","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    private final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"    private final StartTime startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    private final EndTime endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"     * Creates an AddScheduleCommand to add the specified {@code Schedule}","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public AddScheduleCommand(Index index, StartTime startTime, EndTime endTime) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        requireAllNonNull(index, startTime, endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        Schedule toAdd;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        Person tutor \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"            toAdd \u003d new Schedule(tutor, startTime, endTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"            throw new CommandException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"        boolean hasScheduleClash \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"                model.getAddressBook().getScheduleList().stream().anyMatch(schedule -\u003e schedule.isClashing(toAdd));","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        if (model.hasSchedule(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        if (hasScheduleClash) {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"            throw new CommandException(MESSAGE_CLASHING_SCHEDULE);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"        model.addSchedule(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"        if (!(other instanceof AddScheduleCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand otherAddScheduleCommand \u003d (AddScheduleCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        return index.equals(otherAddScheduleCommand.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"                \u0026\u0026 startTime.equals(otherAddScheduleCommand.startTime)","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"                \u0026\u0026 endTime.equals(otherAddScheduleCommand.endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"                .add(\"startTime\", startTime)","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"                .add(\"endTime\", endTime)","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"dishenggg":116}},{"path":"src/main/java/seedu/address/logic/commands/AddTutorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"public class AddTutorCommand extends Command {","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"    public static final String COMMAND_WORD \u003d \"add-t\";","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tutor to the address book. \"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_EMAIL + \"johnd@example.com \";","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tutor %1$s has been added.\";","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This tutor already exists in the address book\";","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"     * Creates an AddTutorCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"    public AddTutorCommand(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"        if (!(other instanceof AddTutorCommand)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand otherAddTutorCommand \u003d (AddTutorCommand) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"        return toAdd.equals(otherAddTutorCommand.toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"            .toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"ruishanteo":20,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"public class DeleteScheduleCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public static final String COMMAND_WORD \u003d \"delete-s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"        + \": Deletes the schedule identified by the index number used in the displayed schedule list.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MESSAGE_DELETE_SCHEDULE_SUCCESS \u003d \"Deleted schedule: %1$s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    public DeleteScheduleCommand(Index targetIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        List\u003cSchedule\u003e lastShownList \u003d model.getFilteredScheduleList();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"        Schedule scheduleToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        model.deleteSchedule(scheduleToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SCHEDULE_SUCCESS, Messages.format(scheduleToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"        if (!(other instanceof DeleteScheduleCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand otherDeleteScheduleCommand \u003d (DeleteScheduleCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        return targetIndex.equals(otherDeleteScheduleCommand.targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"            .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"            .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"saltedfishxx":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTutorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Jweng88"},"content":"public class DeleteTutorCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    public static final String COMMAND_WORD \u003d \"delete-t\";","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"            + \": Deletes the tutor identified by the index number used in the displayed tutor list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Tutor: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"    public DeleteTutorCommand(Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"Jweng88"},"content":"        if (!(other instanceof DeleteTutorCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand otherDeleteTutorCommand \u003d (DeleteTutorCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"        return targetIndex.equals(otherDeleteTutorCommand.targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jweng88":8,"-":61}},{"path":"src/main/java/seedu/address/logic/commands/EditScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SCHEDULES;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":" * Edits the details of an existing schedule in the address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"public class EditScheduleCommand extends Command {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"    public static final String COMMAND_WORD \u003d \"edit-s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the schedule identified \"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"        + \"by the index number used in the displayed schedule list. \"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"        + \"SCHEDULE_INDEX (must be a positive integer)\"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_START_TIME + \"START_TIME \"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_END_TIME + \"END_TIME\\n\"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        + \"1 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_START_TIME + \"2023-09-15T09:00:00 \"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"        + PREFIX_END_TIME + \"2023-09-15T11:00:00\";","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_EDIT_SCHEDULE_SUCCESS \u003d \"Edited Schedule: %1$s\";","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"This schedule already exists in the address book\";","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"    public static final String MESSAGE_CLASHING_SCHEDULE \u003d \"This tutor has a clashing schedule in the address book\";","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"    private final Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"    private final EditScheduleDescriptor editScheduleDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"     * @param index                of the schedule in the filtered schedule list to edit","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"     * @param editScheduleDescriptor details to edit the schedule with","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleCommand(Index index, EditScheduleDescriptor editScheduleDescriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(editScheduleDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"        this.editScheduleDescriptor \u003d new EditScheduleDescriptor(editScheduleDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"        List\u003cSchedule\u003e lastShownList \u003d model.getFilteredScheduleList();","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"        Schedule scheduleToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedSchedule \u003d createEditedSchedule(scheduleToEdit, editScheduleDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"        boolean hasScheduleClash \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"            model.getAddressBook().getScheduleList().stream().filter(schedule -\u003e !schedule.equals(scheduleToEdit))","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"                .anyMatch(schedule -\u003e schedule.isClashing(editedSchedule));","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"        if (!scheduleToEdit.equals(editedSchedule) \u0026\u0026 model.hasSchedule(editedSchedule)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"        if (hasScheduleClash) {","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"ruishanteo"},"content":"            throw new CommandException(MESSAGE_CLASHING_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"        model.setSchedule(scheduleToEdit, editedSchedule);","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"        model.updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULES);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SCHEDULE_SUCCESS, Messages.format(editedSchedule)));","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"     * Creates and returns a {@code Schedule} with the details of {@code scheduleToEdit}","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"ruishanteo"},"content":"     * edited with {@code editScheduleDescriptor}.","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"ruishanteo"},"content":"    private static Schedule createEditedSchedule(Schedule scheduleToEdit,","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor editScheduleDescriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"        StartTime updatedStartTime \u003d editScheduleDescriptor.getStartTime().orElse(scheduleToEdit.getStartTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"        EndTime updatedEndTime \u003d editScheduleDescriptor.getEndTime().orElse(scheduleToEdit.getEndTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"        Person tutor \u003d editScheduleDescriptor.getTutor().orElse(scheduleToEdit.getTutor());","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"        return new Schedule(tutor, updatedStartTime, updatedEndTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"ruishanteo"},"content":"        if (!(other instanceof EditScheduleCommand)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"ruishanteo"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand otherEditScheduleCommand \u003d (EditScheduleCommand) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"        return index.equals(otherEditScheduleCommand.index)","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"            \u0026\u0026 editScheduleDescriptor.equals(otherEditScheduleCommand.editScheduleDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"ruishanteo"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"            .add(\"index\", index)","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"            .add(\"editScheduleDescriptor\", editScheduleDescriptor)","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"            .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"     * Stores the details to edit the schedule with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"     * corresponding field value of the schedule.","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"ruishanteo"},"content":"    public static class EditScheduleDescriptor {","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"        private StartTime startTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"        private EndTime endTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"        private Person tutor;","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"        public EditScheduleDescriptor() {","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"        public EditScheduleDescriptor(EditScheduleDescriptor toCopy) {","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"ruishanteo"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"ruishanteo"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"ruishanteo"},"content":"            setTutor(toCopy.tutor);","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"ruishanteo"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"ruishanteo"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"ruishanteo"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"            return CollectionUtil.isAnyNonNull(startTime, endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"ruishanteo"},"content":"        public void setStartTime(StartTime startTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"        public Optional\u003cStartTime\u003e getStartTime() {","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"ruishanteo"},"content":"        public void setEndTime(EndTime endTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"ruishanteo"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"ruishanteo"},"content":"        public Optional\u003cEndTime\u003e getEndTime() {","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"ruishanteo"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"ruishanteo"},"content":"        public void setTutor(Person tutor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"ruishanteo"},"content":"            this.tutor \u003d tutor;","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"ruishanteo"},"content":"        public Optional\u003cPerson\u003e getTutor() {","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"ruishanteo"},"content":"            return Optional.ofNullable(tutor);","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"ruishanteo"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"ruishanteo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"ruishanteo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"ruishanteo"},"content":"                return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"ruishanteo"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"ruishanteo"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"ruishanteo"},"content":"            if (!(other instanceof EditScheduleDescriptor)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"ruishanteo"},"content":"                return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"ruishanteo"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"ruishanteo"},"content":"            EditScheduleDescriptor otherEditScheduleDescriptor \u003d (EditScheduleDescriptor) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"ruishanteo"},"content":"            return Objects.equals(startTime, otherEditScheduleDescriptor.startTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"ruishanteo"},"content":"                \u0026\u0026 Objects.equals(endTime, otherEditScheduleDescriptor.endTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"ruishanteo"},"content":"                \u0026\u0026 Objects.equals(tutor, otherEditScheduleDescriptor.tutor);","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":196,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":197,"author":{"gitId":"ruishanteo"},"content":"        @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":198,"author":{"gitId":"ruishanteo"},"content":"        public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":199,"author":{"gitId":"ruishanteo"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":200,"author":{"gitId":"ruishanteo"},"content":"                .add(\"startTime\", startTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"ruishanteo"},"content":"                .add(\"endTime\", endTime)","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"ruishanteo"},"content":"                .add(\"tutor\", tutor)","lastModifiedDate":"2023-10-21"},{"lineNumber":203,"author":{"gitId":"ruishanteo"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":204,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":206,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":207}},{"path":"src/main/java/seedu/address/logic/commands/EditTutorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"public class EditTutorCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    public static final String COMMAND_WORD \u003d \"edit-t\";","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the tutor identified \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"            + \"by the index number used in the displayed tutor list. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Tutor: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This tutor already exists in the address book.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"mfjkri"},"content":"    public EditTutorCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail);","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"        if (!(other instanceof EditTutorCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand otherEditTutorCommand \u003d (EditTutorCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"mfjkri"},"content":"        return index.equals(otherEditTutorCommand.index)","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"mfjkri"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditTutorCommand.editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email);","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":184,"author":{"gitId":"ruishanteo"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email);","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ruishanteo":3,"-":182,"mfjkri":11}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tutors whose names contain any of \"","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":57,"mfjkri":1}},{"path":"src/main/java/seedu/address/logic/commands/ListScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SCHEDULES;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"public class ListScheduleCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"    public static final String COMMAND_WORD \u003d \"list-s\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all schedules\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"        model.updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULES);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"saltedfishxx":24}},{"path":"src/main/java/seedu/address/logic/commands/ListTutorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Jweng88"},"content":"public class ListTutorCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"    public static final String COMMAND_WORD \u003d \"list-t\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tutors\";","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jweng88":3,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/AddScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":" * Parses input arguments and creates a new AddScheduleCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"public class AddScheduleCommandParser implements Parser\u003cAddScheduleCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"     * Parses the given {@code String} of arguments in the context of the AddScheduleCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * and returns an AddScheduleCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public AddScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        Index tutorIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"            tutorIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_START_TIME, PREFIX_END_TIME)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"        EndTime endTime \u003d ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"        return new AddScheduleCommand(tutorIndex, startTime, endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"dishenggg":56}},{"path":"src/main/java/seedu/address/logic/parser/AddTutorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.AddTutorCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":" * Parses input arguments and creates a new AddTutorCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"public class AddTutorCommandParser implements Parser\u003cAddTutorCommand\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTutorCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"     * and returns an AddTutorCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"    public AddTutorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTutorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"        Person person \u003d new Person(name, phone, email);","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        return new AddTutorCommand(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ruishanteo":12,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.AddTutorCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.DeleteTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.EditScheduleCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.ListScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.ListTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"        case AddTutorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"            return new AddTutorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"        case EditTutorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"mfjkri"},"content":"            return new EditTutorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"        case DeleteTutorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"            return new DeleteTutorCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Jweng88"},"content":"        case ListTutorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Jweng88"},"content":"            return new ListTutorCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        case AddScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"            return new AddScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"        case EditScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"            return new EditScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"        case DeleteScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"            return new DeleteScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"        case ListScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"            return new ListScheduleCommand();","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruishanteo":7,"saltedfishxx":8,"Jweng88":6,"dishenggg":4,"-":74,"mfjkri":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    /* Schedule prefix definitions */","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dishenggg":5,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":" * Parses input arguments and creates a new DeleteTutorCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"public class DeleteScheduleCommandParser implements Parser\u003cDeleteScheduleCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTutorCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"     * and returns a DeleteTutorCommand object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    public DeleteScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"            return new DeleteScheduleCommand(index);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"saltedfishxx":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTutorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.DeleteTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":" * Parses input arguments and creates a new DeleteTutorCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"public class DeleteTutorCommandParser implements Parser\u003cDeleteTutorCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTutorCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":"     * and returns a DeleteTutorCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"    public DeleteTutorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"            return new DeleteTutorCommand(index);","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTutorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Jweng88":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.EditScheduleCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":" * Parses input arguments and creates a new EditScheduleCommand object","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"public class EditScheduleCommandParser implements Parser\u003cEditScheduleCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"     * Parses the given {@code String} of arguments in the context of the EditScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"     * and returns an EditScheduleCommand object for execution.","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"        Index index;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"        try {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"                EditScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand.EditScheduleDescriptor editScheduleDescriptor \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleCommand.EditScheduleDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"            editScheduleDescriptor.setStartTime(ParserUtil","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"                .parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"        if (argMultimap.getValue(PREFIX_END_TIME).isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"            editScheduleDescriptor.setEndTime(ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_END_TIME).get()));","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"        if (!editScheduleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"            throw new ParseException(EditScheduleCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"        return new EditScheduleCommand(index, editScheduleDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":56}},{"path":"src/main/java/seedu/address/logic/parser/EditTutorCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":" * Parses input arguments and creates a new EditTutorCommand object","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"public class EditTutorCommandParser implements Parser\u003cEditTutorCommand\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTutorCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"     * and returns an EditTutorCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"    public EditTutorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTutorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"mfjkri"},"content":"            throw new ParseException(EditTutorCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"mfjkri"},"content":"        return new EditTutorCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ruishanteo":2,"-":45,"mfjkri":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"     * Parses {@code String time} into a {@code StartTime}.","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"    public static StartTime parseStartTime(String time) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        if (!StartTime.isValidStartTime(trimmedTime)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"        return new StartTime(LocalDateTime.parse(trimmedTime));","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"     * Parses {@code String time} into a {@code EndTime}.","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"    public static EndTime parseEndTime(String time) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        if (!EndTime.isValidEndTime(trimmedTime)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"            throw new ParseException(EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"        return new EndTime(LocalDateTime.parse(trimmedTime));","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dishenggg":22,"-":87}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Jweng88"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.UniqueScheduleList;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"    private final UniqueScheduleList schedules;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"Jweng88"},"content":"        schedules \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"     * Replaces the contents of the schedule list with {@code schedules}.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"     * {@code schedules} must not contain duplicate persons.","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Jweng88"},"content":"    public void setSchedules(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"        this.schedules.setSchedules(schedules);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"Jweng88"},"content":"        setSchedules(newData.getScheduleList());","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"Jweng88"},"content":"    //// schedule-level operations","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"Jweng88"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"Jweng88"},"content":"    public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"Jweng88"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"Jweng88"},"content":"        return schedules.contains(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"Jweng88"},"content":"     * Adds a schedule to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"Jweng88"},"content":"     * The schedule must not already exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"Jweng88"},"content":"    public void addSchedule(Schedule s) {","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"Jweng88"},"content":"        schedules.add(s);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"Jweng88"},"content":"     * Replaces the given schedule {@code target} in the list with {@code editedSchedule}.","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"Jweng88"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"Jweng88"},"content":"     * The schedule identity of {@code editedSchedule} must not be the same as another","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"Jweng88"},"content":"     * existing schedule in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"Jweng88"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"Jweng88"},"content":"        requireNonNull(editedSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"Jweng88"},"content":"        schedules.setSchedule(target, editedSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"Jweng88"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"Jweng88"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"Jweng88"},"content":"    public void removeSchedule(Schedule key) {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"Jweng88"},"content":"        schedules.remove(key);","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"Jweng88"},"content":"                .add(\"schedules\", schedules)","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"Jweng88"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"Jweng88"},"content":"    public ObservableList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"Jweng88"},"content":"        return schedules.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"Jweng88"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 schedules.equals(otherAddressBook.schedules);","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"Jweng88"},"content":"        return Objects.hash(persons, schedules);","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jweng88":61,"-":128}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"    Predicate\u003cSchedule\u003e PREDICATE_SHOW_ALL_SCHEDULES \u003d unused -\u003e true;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"     * Returns true if a schedule with the same fields as {@code schedule} exists in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"    boolean hasSchedule(Schedule schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"mfjkri"},"content":"     * Deletes the given schedule.","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"mfjkri"},"content":"     * The schedule must exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"mfjkri"},"content":"    void deleteSchedule(Schedule target);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"     * Deletes the given list of schedules.","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"     * The schedules must exist in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"     * @targets the list of schedules to delete.","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"ruishanteo"},"content":"    void deleteSchedules(ObservableList\u003cSchedule\u003e targets);","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"     * Adds the given schedule.","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"     * {@code schedule} must not already exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"    void addSchedule(Schedule schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"     * Replaces the given schedule {@code target} with {@code editedSchedule}.","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"     * The schedule fields of {@code editedSchedule} must not be the same as another existing schedule in the address","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"     * book.","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"    void setSchedule(Schedule target, Schedule editedSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"    /** Returns an unmodifiable view of the filtered schedule list */","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"    ObservableList\u003cSchedule\u003e getFilteredScheduleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"     * Updates the filter of the filtered schedule list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"    void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"     * Returns the list of schedules associated with given tutor.","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"     * @param tutor the given tutor to find associated schedules.","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"     * @throws PersonNotFoundException if {@code tutor} is null.","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"    ObservableList\u003cSchedule\u003e getSchedulesFromTutor(Person tutor);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ruishanteo":15,"-":87,"mfjkri":37}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    private final FilteredList\u003cSchedule\u003e filteredSchedules;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        filteredSchedules \u003d new FilteredList\u003c\u003e(this.addressBook.getScheduleList());","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"        ObservableList\u003cSchedule\u003e associatedSchedules \u003d this.getSchedulesFromTutor(target);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"        this.deleteSchedules(associatedSchedules);","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"    public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"        return addressBook.hasSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"    public void deleteSchedule(Schedule target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"        addressBook.removeSchedule(target);","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"    public void deleteSchedules(ObservableList\u003cSchedule\u003e targets) {","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"        List\u003cSchedule\u003e copyOfTargets \u003d new ArrayList\u003c\u003e(targets);","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"        for (Schedule target : copyOfTargets) {","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"            this.deleteSchedule(target);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"    public void addSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"        addressBook.addSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"        updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULES);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"mfjkri"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"mfjkri"},"content":"        requireAllNonNull(target, editedSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"mfjkri"},"content":"        addressBook.setSchedule(target, editedSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"mfjkri"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"     * Returns an unmodifiable view of the list of {@code Schedule} backed by the internal list of","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"mfjkri"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"mfjkri"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"    public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"mfjkri"},"content":"        return filteredSchedules;","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"mfjkri"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"mfjkri"},"content":"    public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"mfjkri"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"mfjkri"},"content":"        filteredSchedules.setPredicate(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"ruishanteo"},"content":"    public ObservableList\u003cSchedule\u003e getSchedulesFromTutor(Person tutor) throws PersonNotFoundException {","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"ruishanteo"},"content":"        if (!hasPerson(tutor)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"ruishanteo"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"ruishanteo"},"content":"        ObservableList\u003cSchedule\u003e schedules \u003d this.addressBook.getScheduleList();","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"ruishanteo"},"content":"        return schedules.stream().filter(schedule -\u003e schedule.getTutor().equals(tutor))","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"ruishanteo"},"content":"            .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"dishenggg"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"dishenggg"},"content":"                \u0026\u0026 filteredSchedules.equals(otherModelManager.filteredSchedules);","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ruishanteo":25,"dishenggg":2,"-":147,"mfjkri":42}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"     * Returns an unmodifiable view of the schedule list.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"     * This list will not contain any duplicate schedule.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"    ObservableList\u003cSchedule\u003e getScheduleList();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jweng88":7,"-":17}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"    public Person(Name name, Phone phone, Email email) {","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"        requireAllNonNull(name, phone, email);","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"                \u0026\u0026 email.equals(otherPerson.email);","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        return Objects.hash(name, phone, email);","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruishanteo":4,"-":87}},{"path":"src/main/java/seedu/address/model/schedule/EndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":" * Represents a Schedule\u0027s end time in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEndTime(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class EndTime extends Time {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"            \"EndTime should only contain a valid date and time in the format \" + DATETIME_INPUT_FORMAT","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"                    + \", and it should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * Constructs a {@code EndTime}.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * @param value A valid end time.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    public EndTime(LocalDateTime value) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"        super(value);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * Returns true if a given string is a valid end time.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public static boolean isValidEndTime(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        return isValidTimeString(test);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":29}},{"path":"src/main/java/seedu/address/model/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":" * Represents a Schedule in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"public class Schedule implements Comparable\u003cSchedule\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Schedules start time should be before its end time.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    private final Person tutor;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    private final StartTime startTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    private final EndTime endTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"    public Schedule(Person tutor, StartTime startTime, EndTime endTime) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        requireAllNonNull(tutor, startTime, endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        checkArgument(isValidSchedule(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        this.tutor \u003d tutor;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    private boolean isValidSchedule(StartTime startTime, EndTime endTime) {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        return startTime.getTime().isBefore(endTime.getTime());","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    public Person getTutor() {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        return tutor;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"    public StartTime getStartTime() {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        return startTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    public EndTime getEndTime() {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"        return endTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"     * Checks if this schedule clashes with another schedule.","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"     * Two schedules are considered clashing if they have the same tutor and their time intervals overlap.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"     * @param other The other schedule to compare against.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"     * @return {@code true} if the schedules clash, {@code false} otherwise.","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"    public boolean isClashing(Schedule other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        if (!this.tutor.equals(other.tutor)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        boolean isEndBeforeOrEqualOtherStart \u003d !this.endTime.getTime().isAfter(other.startTime.getTime());","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        boolean isStartAfterOrEqualOtherEnd \u003d !this.startTime.getTime().isBefore(other.endTime.getTime());","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        return !(isEndBeforeOrEqualOtherStart || isStartAfterOrEqualOtherEnd);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"     * Returns true if both schedules have the same tutor index and time fields.","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"     * This defines a stronger notion of equality between two schedules.","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        return tutor.equals(otherSchedule.tutor)","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"                \u0026\u0026 startTime.equals(otherSchedule.startTime)","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"                \u0026\u0026 endTime.equals(otherSchedule.endTime);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"        return Objects.hash(tutor, startTime, endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"                .add(\"tutor\", tutor)","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"                .add(\"startTime\", startTime)","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"                .add(\"endTime\", endTime)","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"     * Compares this schedule with the specified schedule for order based on their start times.","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"     * Schedules from today or later are sorted in ascending order of start time.","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"     * Schedules before today are sorted in descending order of start time.","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"     * @param other the schedule to be compared.","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"     * @return a negative integer, zero, or a positive integer as this schedule","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"     *         is less than, equal to, or greater than the specified schedule.","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"    public int compareTo(Schedule other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"        boolean isThisTodayOrLater \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"        boolean isOtherTodayOrLater \u003d false;","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"        StartTime now \u003d new StartTime(LocalDateTime.now());","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"        if (this.getStartTime().compareDays(now) \u003e\u003d 0) {","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"            isThisTodayOrLater \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"        if (other.getStartTime().compareDays(now) \u003e\u003d 0) {","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"            isOtherTodayOrLater \u003d true;","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"        if (isThisTodayOrLater \u0026\u0026 isOtherTodayOrLater) {","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"            // Ascending order as both schedules is for today or later","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"            return this.getStartTime().compareTo(other.getStartTime());","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"        } else if (!isThisTodayOrLater \u0026\u0026 !isOtherTodayOrLater) {","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"            // Descending order as both schedules is for before today","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"            return other.getStartTime().compareTo(this.getStartTime());","lastModifiedDate":"2023-10-22"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"            // Only one schedule is before today, sort today or later first","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"            return isThisTodayOrLater ? -1 : 1;","lastModifiedDate":"2023-10-22"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":139}},{"path":"src/main/java/seedu/address/model/schedule/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":" * Represents a Schedule\u0027s start time in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStartTime(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"public class StartTime extends Time {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"            \"StartTime should only contain a valid date and time in the format \" + DATETIME_INPUT_FORMAT","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"                    + \", and it should not be blank\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"     * Constructs a {@code StartTime}.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * @param value A valid start time.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    public StartTime(LocalDateTime value) {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"        super(value);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * Returns true if a given string is a valid start time.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public static boolean isValidStartTime(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        return isValidTimeString(test);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":29}},{"path":"src/main/java/seedu/address/model/schedule/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" * Represents an abstract time in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimeString(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"public abstract class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    public static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd\u0027T\u0027HH:mm:ss\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    public static final String DATETIME_OUTPUT_FORMAT \u003d \"MMM d yyyy HH:mm\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * Constructs a {@code EndTime}.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * @param time A valid end time.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    protected Time(LocalDateTime time) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        this.value \u003d time;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     * Returns true if a given string is a valid end time.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    public static boolean isValidTimeString(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"            LocalDateTime.parse(test);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"        if (!(other instanceof Time)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        Time otherTime \u003d (Time) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        return value.equals(otherTime.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        return value.format(DateTimeFormatter.ofPattern(DATETIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"     * Compares this {@code Time} object with another {@code Time} object for order.","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"     * The comparison is based on the {@code LocalDateTime} values of the two {@code Time} objects.","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"     * @param other the {@code Time} object to be compared.","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"     * @return a negative integer if this {@code Time} is before the other {@code Time},","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"     *         zero if they are equal,","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"     *         or a positive integer if this {@code Time} is after the other {@code Time}.","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    public int compareTo(Time other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"        return this.getTime().compareTo(other.getTime());","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"     * Compares this {@code Time} object with another {@code Time} object for order.","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"     * The comparison does not take the time into account as it is based on the {@code LocalDate} values of the two","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"     * {@code Time} objects.","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"     * @param other the {@code Time} object to be compared.","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"     * @return a negative integer if this {@code Time} is before the other {@code Time},","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"     *         zero if they are equal,","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"     *         or a positive integer if this {@code Time} is after the other {@code Time}.","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"    public int compareDays(Time other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"        LocalDate thisTime \u003d this.getTime().toLocalDate();","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        LocalDate otherTime \u003d other.getTime().toLocalDate();","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"        return thisTime.compareTo(otherTime);","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"dishenggg":106}},{"path":"src/main/java/seedu/address/model/schedule/UniqueScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.exceptions.DuplicateScheduleException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.exceptions.ScheduleNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":" * A sorted list of schedules that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":" * A Schedule is considered unique by comparing using {@code Schedule#equals(Object)}. As such, adding and","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":" * updating of schedules uses Schedule#equals(Object) for equality so as to ensure that the schedule being added","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":" * or updated is unique in terms of identity in the UniqueScheduleList. The removal of a schedule uses","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":" * Schedule#equals(Object) so as to ensure that the schedule with exactly the same fields will be removed.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":" *","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":" *","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":" * @see Schedule#equals(Object)","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":" * @see Schedule#compareTo(Schedule)","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"public class UniqueScheduleList implements Iterable\u003cSchedule\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"    private final ObservableList\u003cSchedule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"    private final ObservableList\u003cSchedule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"     * Returns true if the list contains an equivalent schedule as the given argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"    public boolean contains(Schedule toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"     * Adds a schedule to the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"     * The schedule must not already exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"    public void add(Schedule toAdd) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"     * Replaces the schedule {@code target} in the list with {@code editedSchedule}.","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"     * The {@code editedSchedule} must not be the same as another existing schedule in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"        requireAllNonNull(target, editedSchedule);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"            throw new ScheduleNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"        if (!target.equals(editedSchedule) \u0026\u0026 contains(editedSchedule)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"        internalList.set(index, editedSchedule);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"     * Removes the equivalent schedule from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"     * The schedule must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"     * {@code toRemove} is the schedule to remove from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"    public void remove(Schedule toRemove) {","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"            throw new ScheduleNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"     * Replaces the list with {@code replacement}.","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"     * {@code replacement} must be a UniqueScheduleList.","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules(UniqueScheduleList replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"        sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"     * Replaces the contents of this list with {@code schedules}.","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"     * {@code schedules} must not contain duplicate schedules.","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"        requireAllNonNull(schedules);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"        if (!schedulesAreUnique(schedules)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"        internalList.setAll(schedules);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"        sort();","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"     * Sorts the {@code internalList} of schedules based on {@link Schedule#compareTo(Schedule)} method.","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"    public void sort() {","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"        FXCollections.sort(internalList);","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"ruishanteo"},"content":"    public ObservableList\u003cSchedule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"    public Iterator\u003cSchedule\u003e iterator() {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"ruishanteo"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"        if (!(other instanceof UniqueScheduleList)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList otherUniqueScheduleList \u003d (UniqueScheduleList) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"        return internalList.equals(otherUniqueScheduleList.internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ruishanteo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ruishanteo"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ruishanteo"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"ruishanteo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"     * Returns true if {@code schedules} contains only unique schedules.","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"ruishanteo"},"content":"    private boolean schedulesAreUnique(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"        for (int i \u003d 0; i \u003c schedules.size() - 1; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"            for (int j \u003d i + 1; j \u003c schedules.size(); j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"                if (schedules.get(i).equals(schedules.get(j))) {","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"                    return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ruishanteo"},"content":"        return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ruishanteo":153,"dishenggg":13}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/DuplicateScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":" * Signals that the operation will result in duplicate Schedules (Schedules are considered duplicates if they have","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":" * the same tutor and time fields.","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"public class DuplicateScheduleException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"    public DuplicateScheduleException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"        super(\"Operation would result in duplicate schedules\");","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ruishanteo":11}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/ScheduleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":" * Signals that the operation is unable to find the specified schedule.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"public class ScheduleNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ruishanteo":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\")),","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\")),","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\")),","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"))","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ruishanteo":6,"-":27}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"            @JsonProperty(\"email\") String email) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"        return new Person(modelName, modelPhone, modelEmail);","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruishanteo":2,"-":74}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.model.schedule.Time.DATETIME_INPUT_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import com.fasterxml.jackson.annotation.JsonFormat;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":" * Jackson-friendly version of {@link seedu.address.model.schedule.Schedule}.","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"class JsonAdaptedSchedule {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Schedule\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    private final String name;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"    @JsonFormat(shape \u003d JsonFormat.Shape.STRING, pattern \u003d DATETIME_INPUT_FORMAT)","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    private final String startTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    @JsonFormat(shape \u003d JsonFormat.Shape.STRING, pattern \u003d DATETIME_INPUT_FORMAT)","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    private final String endTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"    public JsonAdaptedSchedule(@JsonProperty(\"name\") String name, @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"                               @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"     * Converts a given {@code Schedule} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    public JsonAdaptedSchedule(Schedule source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        name \u003d source.getTutor().getName().fullName;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"        startTime \u003d source.getStartTime().getTime().format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        endTime \u003d source.getEndTime().getTime().format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Schedule} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted schedule.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"    public Schedule toModelType(ReadOnlyAddressBook addressBook) throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"                StartTime.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"        if (!StartTime.isValidStartTime(startTime)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"            throw new IllegalValueException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"        final StartTime modelStartTime \u003d new StartTime(LocalDateTime.parse(startTime, formatter));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, EndTime.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"        if (!EndTime.isValidEndTime(endTime)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"            throw new IllegalValueException(EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"        final EndTime modelEndTime \u003d new EndTime(LocalDateTime.parse(endTime, formatter));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"        return new Schedule(getTutorFromName(modelName, addressBook), modelStartTime, modelEndTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"saltedfishxx"},"content":"     * Helper method to find the tutor object given the name stored in json file.","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"saltedfishxx"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"     * @throws PersonNotFoundException if no matching names were found in the tutors list.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"    private Person getTutorFromName(Name name, ReadOnlyAddressBook addressBook) throws PersonNotFoundException {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"saltedfishxx"},"content":"        ObservableList\u003cPerson\u003e tutors \u003d addressBook.getPersonList();","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"saltedfishxx"},"content":"        return tutors.stream().filter(o -\u003e name.equals(o.getName())).findFirst()","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"saltedfishxx"},"content":"            .orElseThrow(PersonNotFoundException::new);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"saltedfishxx":95,"dishenggg":1,"mfjkri":4}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"Schedules list contains duplicate schedule(s).\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    public static final String MESSAGE_CLASHING_SCHEDULE \u003d \"There are conflicts between schedule(s).\";","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    private final List\u003cJsonAdaptedSchedule\u003e schedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"                                       @JsonProperty(\"schedules\") List\u003cJsonAdaptedSchedule\u003e schedules) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        this.schedules.addAll(schedules);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"        schedules.addAll(source.getScheduleList().stream().map(JsonAdaptedSchedule::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"        for (JsonAdaptedSchedule jsonAdaptedSchedule : schedules) {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"            Schedule schedule \u003d jsonAdaptedSchedule.toModelType(addressBook);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"            if (addressBook.hasSchedule(schedule)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"            for (Schedule existingSchedule : addressBook.getScheduleList()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"                if (schedule.isClashing(existingSchedule)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"                    throw new IllegalValueException(MESSAGE_CLASHING_SCHEDULE);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"            addressBook.addSchedule(schedule);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"saltedfishxx":20,"-":59}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.ListScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.ListTutorCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    private ScheduleListPanel scheduleListPanel;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"        scheduleListPanel \u003d new ScheduleListPanel(logic.getFilteredScheduleList());","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"        listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"     * Displays either the list of schedules or tutors based on the command result","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"    private void handleListDisplay(CommandResult commandResult) {","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"saltedfishxx"},"content":"        if (commandResult.getFeedbackToUser().equals(ListScheduleCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"dishenggg"},"content":"            showSchedules();","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"dishenggg"},"content":"        } else if (commandResult.getFeedbackToUser().equals(ListTutorCommand.MESSAGE_SUCCESS)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"            showPersons();","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"     * Shows list of person cards.","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"dishenggg"},"content":"    void showPersons() {","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"saltedfishxx"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"dishenggg"},"content":"        listPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"dishenggg"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"dishenggg"},"content":"    void showSchedules() {","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"saltedfishxx"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"dishenggg"},"content":"        listPanelPlaceholder.getChildren().add(scheduleListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":202,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"            handleListDisplay(commandResult);","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"saltedfishxx":4,"dishenggg":33,"-":194}},{"path":"src/main/java/seedu/address/ui/ScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":" * An UI component that displays information of a {@code Schedule}.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"public class ScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    private static final String FXML \u003d \"ScheduleListCard.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    public final Schedule schedule;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    private Label name;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    private Label id;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    private Label startTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    private Label endTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"     * Creates a {@code ScheduleCode} with the given {@code Schedule} and index to display.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    public ScheduleCard(Schedule schedule, int displayedIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        name.setText(schedule.getTutor().getName().fullName);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        startTime.setText(schedule.getStartTime().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        endTime.setText(schedule.getEndTime().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"dishenggg":48}},{"path":"src/main/java/seedu/address/ui/ScheduleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":" * Panel containing the list of schedules.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"public class ScheduleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    private static final String FXML \u003d \"ScheduleListPanel.fxml\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ScheduleListPanel.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    private ListView\u003cSchedule\u003e scheduleListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * Creates a {@code ScheduleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public ScheduleListPanel(ObservableList\u003cSchedule\u003e scheduleList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        super(FXML);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        scheduleListView.setItems(scheduleList);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        scheduleListView.setCellFactory(listView -\u003e new ScheduleListViewCell());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Schedule} using a {@code ScheduleCard}.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    class ScheduleListViewCell extends ListCell\u003cSchedule\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        protected void updateItem(Schedule schedule, boolean empty) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"            super.updateItem(schedule, empty);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"            if (empty || schedule \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"                setText(null);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"            } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"                setGraphic(new ScheduleCard(schedule, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"dishenggg":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"dishenggg":1,"-":59}},{"path":"src/main/resources/view/ScheduleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"            \u003cGridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"                \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"                    \u003cColumnConstraints hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"                    \u003cColumnConstraints hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"                \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"                \u003cLabel text\u003d\"From: \" styleClass\u003d\"cell_small_label\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"                \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startTime\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"                       GridPane.rowIndex\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"                \u003cLabel text\u003d\"To: \" styleClass\u003d\"cell_small_label\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"                \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endTime\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"                       GridPane.rowIndex\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"dishenggg":42}},{"path":"src/main/resources/view/ScheduleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"  \u003cListView fx:id\u003d\"scheduleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"dishenggg":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.AddTutorCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.ListTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"Jweng88"},"content":"        String deleteTutorCommand \u003d \"delete-t 9\";","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Jweng88"},"content":"        assertCommandException(deleteTutorCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"        String listTutorCommand \u003d ListTutorCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"        assertCommandSuccess(listTutorCommand, ListTutorCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"    public void getFilteredScheduleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredScheduleList().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"ruishanteo"},"content":"        String addTutorCommand \u003d AddTutorCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"ruishanteo"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"ruishanteo"},"content":"        assertCommandFailure(addTutorCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ruishanteo":4,"Jweng88":5,"dishenggg":5,"-":164}},{"path":"src/test/java/seedu/address/logic/MessagesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"public class MessagesTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"    public void messagesTest_instantiation_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"        Messages messages \u003d new Messages();","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"        assertNotNull(messages);","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"mfjkri":14}},{"path":"src/test/java/seedu/address/logic/commands/AddScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_ONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_TWO;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_ONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_TWO;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_ALICE_FIRST_JAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":" * Contains integration tests (interaction with the Model) and unit tests for AddScheduleCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"class AddScheduleCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        //multiple null params","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddScheduleCommand(null, null, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        // null index","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddScheduleCommand(null, SCHEDULE_ALICE_FIRST_JAN","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"                .getStartTime(), SCHEDULE_ALICE_FIRST_JAN.getEndTime()));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        // null start time","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getStartTime(), null));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        // null end time","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddScheduleCommand(INDEX_FIRST_PERSON, null,","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getEndTime()));","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"    public void execute_validParametersUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).withTutor(firstPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommand \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getStartTime(),","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getEndTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"        String expectedMessage \u003d String.format(AddScheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"                Messages.format(schedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        expectedModel.addSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        assertCommandSuccess(addScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"    public void execute_validParametersFilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).withTutor(firstPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommand \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getStartTime(),","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getEndTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"        String expectedMessage \u003d String.format(AddScheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"                Messages.format(schedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        expectedModel.addSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"        assertCommandSuccess(addScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"    public void execute_duplicateSchedule_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).withTutor(firstPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"        model.addSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommand \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getStartTime(),","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getEndTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"        assertCommandFailure(addScheduleCommand, model, AddScheduleCommand.MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"    public void execute_badSchedule_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommand \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"                new StartTime(SCHEDULE_ALICE_FIRST_JAN.getEndTime().getTime()),","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"                new EndTime(SCHEDULE_ALICE_FIRST_JAN.getStartTime().getTime()));","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"        assertCommandFailure(addScheduleCommand, model, Schedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"    public void execute_clashingSchedule_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"        Schedule baseSchedule \u003d new ScheduleBuilder().withTutor(firstPerson).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime baseScheduleStartTime \u003d baseSchedule.getStartTime().getTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime baseScheduleEndTime \u003d baseSchedule.getEndTime().getTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"        model.addSchedule(baseSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"        // ends 1 second after the base schedule starts","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addSchedule1 \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"                new StartTime(baseScheduleStartTime.minusHours(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"                new EndTime(baseScheduleStartTime.plusSeconds(1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"        // starts 1 second before the base schedule starts","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addSchedule2 \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"                new StartTime(baseScheduleEndTime.minusSeconds(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"                new EndTime(baseScheduleEndTime.plusHours(1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"        // starts and ends in the middle of the base schedule","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addSchedule3 \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"                new StartTime(baseScheduleStartTime.plusSeconds(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"dishenggg"},"content":"                new EndTime(baseScheduleEndTime.minusSeconds(1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"dishenggg"},"content":"        assertCommandFailure(addSchedule1, model, AddScheduleCommand.MESSAGE_CLASHING_SCHEDULE);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"        assertCommandFailure(addSchedule2, model, AddScheduleCommand.MESSAGE_CLASHING_SCHEDULE);","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"        assertCommandFailure(addSchedule3, model, AddScheduleCommand.MESSAGE_CLASHING_SCHEDULE);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"dishenggg"},"content":"    public void execute_nonClashingSchedule_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"        Person firstTutor \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"        Schedule baseSchedule \u003d new ScheduleBuilder().withTutor(firstTutor).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime baseScheduleStartTime \u003d baseSchedule.getStartTime().getTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime baseScheduleEndTime \u003d baseSchedule.getEndTime().getTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"dishenggg"},"content":"        model.addSchedule(baseSchedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"dishenggg"},"content":"        // ends immediately as base schedule starts","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addSchedule \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"dishenggg"},"content":"                new StartTime(baseScheduleStartTime.minusHours(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"dishenggg"},"content":"                new EndTime(baseScheduleStartTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withTutor(firstTutor).withStartTime(baseScheduleStartTime.minusHours(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"                        .withEndTime(baseScheduleStartTime).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"        String expectedMessage \u003d String.format(AddScheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"dishenggg"},"content":"                Messages.format(schedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"dishenggg"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"        expectedModel.addSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"        assertCommandSuccess(addSchedule, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"dishenggg"},"content":"        // Next day schedule","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addSchedule2 \u003d new AddScheduleCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"                new StartTime(baseScheduleStartTime.plusDays(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"                new EndTime(baseScheduleEndTime.plusDays(1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule2 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withTutor(firstTutor).withStartTime(baseScheduleStartTime.plusDays(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"dishenggg"},"content":"                        .withEndTime(baseScheduleEndTime.plusDays(1)).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"dishenggg"},"content":"        String expectedMessage2 \u003d String.format(AddScheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"dishenggg"},"content":"                Messages.format(schedule2));","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"dishenggg"},"content":"        expectedModel.addSchedule(schedule2);","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"dishenggg"},"content":"        assertCommandSuccess(addSchedule2, model, expectedMessage2, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"dishenggg"},"content":"        // Other tutor same time","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"dishenggg"},"content":"        Person secondTutor \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addSchedule3 \u003d new AddScheduleCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"dishenggg"},"content":"                new StartTime(baseScheduleStartTime),","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"dishenggg"},"content":"                new EndTime(baseScheduleEndTime));","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule3 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withTutor(secondTutor).withStartTime(baseScheduleStartTime)","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"dishenggg"},"content":"                        .withEndTime(baseScheduleEndTime).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"dishenggg"},"content":"        String expectedMessage3 \u003d String.format(AddScheduleCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"dishenggg"},"content":"                Messages.format(schedule3));","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"dishenggg"},"content":"        expectedModel.addSchedule(schedule3);","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"dishenggg"},"content":"        assertCommandSuccess(addSchedule3, model, expectedMessage3, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"dishenggg"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"dishenggg"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommand \u003d new AddScheduleCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getStartTime(),","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"                SCHEDULE_ALICE_FIRST_JAN.getEndTime());","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"dishenggg"},"content":"        assertCommandFailure(addScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":226,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":228,"author":{"gitId":"dishenggg"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":229,"author":{"gitId":"dishenggg"},"content":"        final StartTime standardStartTime \u003d new StartTime(LocalDateTime.parse(VALID_START_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":230,"author":{"gitId":"dishenggg"},"content":"        final EndTime standardEndTime \u003d new EndTime(LocalDateTime.parse(VALID_END_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"dishenggg"},"content":"        final AddScheduleCommand standardCommand \u003d new AddScheduleCommand(INDEX_FIRST_PERSON, standardStartTime,","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"dishenggg"},"content":"                standardEndTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"dishenggg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"dishenggg"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":236,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"dishenggg"},"content":"        StartTime copyStartTime \u003d new StartTime(LocalDateTime.parse(VALID_START_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"dishenggg"},"content":"        EndTime copyEndTime \u003d new EndTime(LocalDateTime.parse(VALID_END_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommandCopy \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"dishenggg"},"content":"                new AddScheduleCommand(INDEX_FIRST_PERSON, copyStartTime, copyEndTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"dishenggg"},"content":"        assertTrue(standardCommand.equals(addScheduleCommandCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"dishenggg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"dishenggg"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-13"},{"lineNumber":246,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"dishenggg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"dishenggg"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"dishenggg"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"dishenggg"},"content":"        StartTime differentStartTime \u003d new StartTime(LocalDateTime.parse(VALID_START_TIME_TWO));","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"dishenggg"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"dishenggg"},"content":"                new AddScheduleCommand(INDEX_FIRST_PERSON, differentStartTime, standardEndTime)));","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"dishenggg"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"dishenggg"},"content":"        EndTime differentEndTime \u003d new EndTime(LocalDateTime.parse(VALID_END_TIME_TWO));","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"dishenggg"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"dishenggg"},"content":"                new AddScheduleCommand(INDEX_FIRST_PERSON, standardStartTime, differentEndTime)));","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":260,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"dishenggg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"dishenggg"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.parse(VALID_START_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":265,"author":{"gitId":"dishenggg"},"content":"        EndTime endTime \u003d new EndTime(LocalDateTime.parse(VALID_END_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand addScheduleCommand \u003d new AddScheduleCommand(index, startTime, endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"dishenggg"},"content":"        String expected \u003d AddScheduleCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", startTime\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"dishenggg"},"content":"                + startTime + \", endTime\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"dishenggg"},"content":"                + endTime + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expected, addScheduleCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":274,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":275,"author":{"gitId":"dishenggg"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-10-16"},{"lineNumber":276,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":277,"author":{"gitId":"dishenggg"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-16"},{"lineNumber":278,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":279,"author":{"gitId":"dishenggg"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-16"},{"lineNumber":280,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":281,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":282,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":283,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":284,"author":{"gitId":"dishenggg"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-16"},{"lineNumber":285,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":286,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":287,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":288,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":289,"author":{"gitId":"dishenggg"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-16"},{"lineNumber":290,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":291,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":292,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":293,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":294,"author":{"gitId":"dishenggg"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-16"},{"lineNumber":295,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":296,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":297,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":298,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":299,"author":{"gitId":"dishenggg"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-16"},{"lineNumber":300,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":301,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":302,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":303,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":304,"author":{"gitId":"dishenggg"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-16"},{"lineNumber":305,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":306,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":307,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":308,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":309,"author":{"gitId":"dishenggg"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":310,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":311,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":312,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":313,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":314,"author":{"gitId":"dishenggg"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-16"},{"lineNumber":315,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":316,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":317,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":318,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":319,"author":{"gitId":"dishenggg"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":320,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":321,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":322,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":323,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":324,"author":{"gitId":"dishenggg"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-16"},{"lineNumber":325,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":326,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":327,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":328,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":329,"author":{"gitId":"dishenggg"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":330,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":331,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":332,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":333,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":334,"author":{"gitId":"dishenggg"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-16"},{"lineNumber":335,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":336,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":337,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":338,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":339,"author":{"gitId":"dishenggg"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":340,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":341,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":342,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":343,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":344,"author":{"gitId":"dishenggg"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":345,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":346,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":347,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":348,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":349,"author":{"gitId":"dishenggg"},"content":"        public void addSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":350,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":351,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":352,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":353,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":354,"author":{"gitId":"dishenggg"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":355,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":356,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":357,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":358,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":359,"author":{"gitId":"dishenggg"},"content":"        public void deleteSchedule(Schedule target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":360,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":361,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":362,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":363,"author":{"gitId":"ruishanteo"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"ruishanteo"},"content":"        public void deleteSchedules(ObservableList\u003cSchedule\u003e targets) {","lastModifiedDate":"2023-10-18"},{"lineNumber":365,"author":{"gitId":"ruishanteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":366,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":367,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":368,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":369,"author":{"gitId":"dishenggg"},"content":"        public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":370,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":371,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":372,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":373,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":374,"author":{"gitId":"dishenggg"},"content":"        public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":375,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":376,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":377,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":378,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":379,"author":{"gitId":"dishenggg"},"content":"        public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":380,"author":{"gitId":"dishenggg"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":381,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":382,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":383,"author":{"gitId":"ruishanteo"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":384,"author":{"gitId":"ruishanteo"},"content":"        public ObservableList\u003cSchedule\u003e getSchedulesFromTutor(Person tutor) throws PersonNotFoundException {","lastModifiedDate":"2023-10-18"},{"lineNumber":385,"author":{"gitId":"ruishanteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":386,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":387,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":388,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":389,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":390,"author":{"gitId":"dishenggg"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-10-16"},{"lineNumber":391,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":392,"author":{"gitId":"dishenggg"},"content":"    private class ModelStubWithSchedule extends AddScheduleCommandTest.ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":393,"author":{"gitId":"dishenggg"},"content":"        private final Schedule schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":394,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":395,"author":{"gitId":"dishenggg"},"content":"        ModelStubWithSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":396,"author":{"gitId":"dishenggg"},"content":"            requireNonNull(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":397,"author":{"gitId":"dishenggg"},"content":"            this.schedule \u003d schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":398,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":399,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":400,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":401,"author":{"gitId":"dishenggg"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":402,"author":{"gitId":"dishenggg"},"content":"            requireNonNull(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":403,"author":{"gitId":"dishenggg"},"content":"            return this.schedule.equals(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":404,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":405,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":406,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":407,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":408,"author":{"gitId":"dishenggg"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-10-16"},{"lineNumber":409,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":410,"author":{"gitId":"dishenggg"},"content":"    private class ModelStubAcceptingScheduleAdded extends AddScheduleCommandTest.ModelStub {","lastModifiedDate":"2023-10-16"},{"lineNumber":411,"author":{"gitId":"dishenggg"},"content":"        final ArrayList\u003cSchedule\u003e schedulesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":412,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":413,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":414,"author":{"gitId":"dishenggg"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":415,"author":{"gitId":"dishenggg"},"content":"            requireNonNull(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":416,"author":{"gitId":"dishenggg"},"content":"            return schedulesAdded.stream().anyMatch(schedule::equals);","lastModifiedDate":"2023-10-16"},{"lineNumber":417,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":418,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":419,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":420,"author":{"gitId":"dishenggg"},"content":"        public void addSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":421,"author":{"gitId":"dishenggg"},"content":"            requireNonNull(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":422,"author":{"gitId":"dishenggg"},"content":"            schedulesAdded.add(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":423,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":424,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":425,"author":{"gitId":"dishenggg"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":426,"author":{"gitId":"dishenggg"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":427,"author":{"gitId":"dishenggg"},"content":"            return new AddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":428,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":429,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":430,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ruishanteo":11,"dishenggg":419}},{"path":"src/test/java/seedu/address/logic/commands/AddTutorCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":" * Contains integration tests (interaction with the Model) for {@code AddTutorCommand}.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"public class AddTutorCommandIntegrationTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        assertCommandSuccess(new AddTutorCommand(validPerson), model,","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"                String.format(AddTutorCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"        assertCommandFailure(new AddTutorCommand(personInList), model,","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"            AddTutorCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ruishanteo":6,"-":42}},{"path":"src/test/java/seedu/address/logic/commands/AddTutorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":" * Contains tests for {@code AddTutorCommand}.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"public class AddTutorCommandTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTutorCommand(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"        CommandResult commandResult \u003d new AddTutorCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(String.format(AddTutorCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand addTutorCommand \u003d new AddTutorCommand(validPerson);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(CommandException.class, AddTutorCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addTutorCommand","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"            .execute(modelStub));","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand addAliceCommand \u003d new AddTutorCommand(alice);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand addBobCommand \u003d new AddTutorCommand(bob);","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand addAliceCommandCopy \u003d new AddTutorCommand(alice);","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand addTutorCommand \u003d new AddTutorCommand(ALICE);","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"        String expected \u003d AddTutorCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expected, addTutorCommand.toString());","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"mfjkri"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"mfjkri"},"content":"        public void addSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"mfjkri"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"mfjkri"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"mfjkri"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"mfjkri"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"        public void deleteSchedule(Schedule target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"mfjkri"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"ruishanteo"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"ruishanteo"},"content":"        public void deleteSchedules(ObservableList\u003cSchedule\u003e targets) {","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"ruishanteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"mfjkri"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"mfjkri"},"content":"        public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"mfjkri"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"mfjkri"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"mfjkri"},"content":"        public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"mfjkri"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"mfjkri"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"mfjkri"},"content":"        public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"mfjkri"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"ruishanteo"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"ruishanteo"},"content":"        public ObservableList\u003cSchedule\u003e getSchedulesFromTutor(Person tutor) throws PersonNotFoundException {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"ruishanteo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"ruishanteo"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ruishanteo":27,"-":192,"mfjkri":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.EditScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    /* Tutor related */","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    /* Schedule related */","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"    public static final String VALID_TUTOR_INDEX_ONE \u003d \"1\";","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"    public static final String VALID_TUTOR_INDEX_TWO \u003d \"2\";","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    public static final String VALID_START_TIME_ONE \u003d \"2023-01-01T09:00:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"    public static final String VALID_START_TIME_TWO \u003d \"2023-01-02T20:00:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    public static final String VALID_END_TIME_ONE \u003d \"2023-01-01T11:00:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"    public static final String VALID_END_TIME_TWO \u003d \"2023-01-02T22:00:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"    public static final String TUTOR_INDEX_DESC_ONE \u003d VALID_TUTOR_INDEX_ONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    public static final String TUTOR_INDEX_DESC_TWO \u003d VALID_TUTOR_INDEX_TWO;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"    public static final String START_TIME_DESC_ONE \u003d \" \" + PREFIX_START_TIME + VALID_START_TIME_ONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    public static final String START_TIME_DESC_TWO \u003d \" \" + PREFIX_START_TIME + VALID_START_TIME_TWO;","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    public static final String END_TIME_DESC_ONE \u003d \" \" + PREFIX_END_TIME + VALID_END_TIME_ONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"    public static final String END_TIME_DESC_TWO \u003d \" \" + PREFIX_END_TIME + VALID_END_TIME_TWO;","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"    public static final String INVALID_TUTOR_INDEX \u003d \"a\";","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"    public static final String INVALID_START_TIME \u003d \" \" + PREFIX_START_TIME + \"2023-01-01 09:00\"; // missing \u0027T\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"    public static final String INVALID_END_TIME \u003d \" \" + PREFIX_END_TIME + \"2023-01-01T1100\"; // missing \u0027:\u0027","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"    /* Others */","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"mfjkri"},"content":"    public static final EditTutorCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"mfjkri"},"content":"    public static final EditTutorCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"    public static final EditScheduleCommand.EditScheduleDescriptor DESC_SCHEDULE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"    public static final EditScheduleCommand.EditScheduleDescriptor DESC_SCHEDULE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"    static {","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"        DESC_SCHEDULE_AMY \u003d new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_ONE)","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"            .withEndTime(VALID_END_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"        DESC_SCHEDULE_BOB \u003d new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_TWO)","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"            .withEndTime(VALID_END_TIME_TWO).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"ruishanteo"},"content":"     * Updates {@code model}\u0027s filtered list to show only the schedule at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"ruishanteo"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"    public static void showScheduleAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredScheduleList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"        Schedule schedule \u003d model.getFilteredScheduleList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"        model.updateFilteredScheduleList(currSchedule -\u003e currSchedule.equals(schedule));","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(1, model.getFilteredScheduleList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ruishanteo":24,"dishenggg":24,"-":113,"mfjkri":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.testutil.TypicalSchedules;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":" * {@code DeleteTutorCommand}.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"public class DeleteScheduleCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    private Model model \u003d new ModelManager(TypicalSchedules.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"        Schedule scheduleToDelete \u003d model.getFilteredScheduleList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand deleteScheduleCommand \u003d new DeleteScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d String.format(DeleteScheduleCommand.MESSAGE_DELETE_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"                Messages.format(scheduleToDelete));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        expectedModel.deleteSchedule(scheduleToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"        assertCommandSuccess(deleteScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredScheduleList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand deleteScheduleCommand \u003d new DeleteScheduleCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"        assertCommandFailure(deleteScheduleCommand, model, Messages.MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand deleteFirstCommand \u003d new DeleteScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand deleteSecondCommand \u003d new DeleteScheduleCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand deleteFirstCommandCopy \u003d new DeleteScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"        // different tutor -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand deleteScheduleCommand \u003d new DeleteScheduleCommand(targetIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"        String expected \u003d DeleteScheduleCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(expected, deleteScheduleCommand.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"    private void showNoSchedule(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"        model.updateFilteredScheduleList(p -\u003e false);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"saltedfishxx"},"content":"        assertTrue(model.getFilteredScheduleList().isEmpty());","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"saltedfishxx":89}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTutorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":" * {@code DeleteTutorCommand}.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"public class DeleteTutorCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteTutorCommand \u003d new DeleteTutorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Jweng88"},"content":"        String expectedMessage \u003d String.format(DeleteTutorCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"Jweng88"},"content":"        assertCommandSuccess(deleteTutorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteTutorCommand \u003d new DeleteTutorCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"Jweng88"},"content":"        assertCommandFailure(deleteTutorCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteTutorCommand \u003d new DeleteTutorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"        String expectedMessage \u003d String.format(DeleteTutorCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"Jweng88"},"content":"        assertCommandSuccess(deleteTutorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteTutorCommand \u003d new DeleteTutorCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"        assertCommandFailure(deleteTutorCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteFirstCommand \u003d new DeleteTutorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteSecondCommand \u003d new DeleteTutorCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteFirstCommandCopy \u003d new DeleteTutorCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"Jweng88"},"content":"        // different tutor -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"Jweng88"},"content":"        DeleteTutorCommand deleteTutorCommand \u003d new DeleteTutorCommand(targetIndex);","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"Jweng88"},"content":"        String expected \u003d DeleteTutorCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"Jweng88"},"content":"        assertEquals(expected, deleteTutorCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Jweng88":19,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ruishanteo":1,"-":57,"mfjkri":1}},{"path":"src/test/java/seedu/address/logic/commands/EditScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SCHEDULE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SCHEDULE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showScheduleAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalSchedules.getTypicalAddressBook;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.EditScheduleCommand.EditScheduleDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.EditScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTutorCommand.","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"public class EditScheduleCommandTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedSchedule \u003d new ScheduleBuilder().build();","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d new EditScheduleDescriptorBuilder(editedSchedule).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(INDEX_FIRST_SCHEDULE, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"        String expectedMessage \u003d String.format(EditScheduleCommand.MESSAGE_EDIT_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"            Messages.format(editedSchedule));","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"        expectedModel.setSchedule(model.getFilteredScheduleList().get(0), editedSchedule);","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"        assertCommandSuccess(editScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"        Index indexLastSchedule \u003d Index.fromOneBased(model.getFilteredScheduleList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"        Schedule lastSchedule \u003d model.getFilteredScheduleList().get(indexLastSchedule.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"        ScheduleBuilder scheduleInList \u003d new ScheduleBuilder(lastSchedule);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedSchedule \u003d scheduleInList.withStartTime(LocalDateTime.parse(VALID_START_TIME_ONE))","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"            .withEndTime(LocalDateTime.parse(VALID_END_TIME_ONE)).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_ONE)","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"            .withEndTime(VALID_END_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(indexLastSchedule, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"        String expectedMessage \u003d String.format(EditScheduleCommand.MESSAGE_EDIT_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"            Messages.format(editedSchedule));","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"        expectedModel.setSchedule(lastSchedule, editedSchedule);","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"        assertCommandSuccess(editScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(INDEX_FIRST_SCHEDULE,","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleDescriptor());","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedSchedule \u003d model.getFilteredScheduleList().get(INDEX_FIRST_SCHEDULE.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"        String expectedMessage \u003d String.format(EditScheduleCommand.MESSAGE_EDIT_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"ruishanteo"},"content":"            Messages.format(editedSchedule));","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"        assertCommandSuccess(editScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"ruishanteo"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"ruishanteo"},"content":"        showScheduleAtIndex(model, INDEX_FIRST_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"        Schedule scheduleInFilteredList \u003d model.getFilteredScheduleList().get(INDEX_FIRST_SCHEDULE.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedSchedule \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"            new ScheduleBuilder(scheduleInFilteredList)","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"                .withStartTime(LocalDateTime.parse(VALID_START_TIME_ONE)).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(INDEX_FIRST_SCHEDULE,","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_ONE).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"        String expectedMessage \u003d String.format(EditScheduleCommand.MESSAGE_EDIT_SCHEDULE_SUCCESS,","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"            Messages.format(editedSchedule));","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"        expectedModel.setSchedule(model.getFilteredScheduleList().get(0), editedSchedule);","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"ruishanteo"},"content":"        assertCommandSuccess(editScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"ruishanteo"},"content":"    public void execute_duplicateScheduleUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"ruishanteo"},"content":"        Schedule firstSchedule \u003d model.getFilteredScheduleList().get(INDEX_FIRST_SCHEDULE.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d new EditScheduleDescriptorBuilder(firstSchedule).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(INDEX_SECOND_SCHEDULE, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"        assertCommandFailure(editScheduleCommand, model, EditScheduleCommand.MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"ruishanteo"},"content":"    public void execute_duplicateScheduleFilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"        showScheduleAtIndex(model, INDEX_FIRST_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"        // edit schedule in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"        Schedule scheduleInList \u003d model.getAddressBook().getScheduleList().get(INDEX_SECOND_SCHEDULE.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(INDEX_FIRST_SCHEDULE,","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleDescriptorBuilder(scheduleInList).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"        assertCommandFailure(editScheduleCommand, model, EditScheduleCommand.MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"    public void execute_invalidScheduleIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredScheduleList().size() + 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d new EditScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"            .withStartTime(VALID_START_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"        assertCommandFailure(editScheduleCommand, model, Messages.MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"ruishanteo"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"ruishanteo"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"ruishanteo"},"content":"    public void execute_invalidScheduleIndexFilteredList_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":149,"author":{"gitId":"ruishanteo"},"content":"        showScheduleAtIndex(model, INDEX_FIRST_SCHEDULE);","lastModifiedDate":"2023-10-21"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":151,"author":{"gitId":"ruishanteo"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getScheduleList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_ONE).build());","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"        assertCommandFailure(editScheduleCommand, model, Messages.MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"        final EditScheduleCommand standardCommand \u003d new EditScheduleCommand(INDEX_FIRST_SCHEDULE, DESC_SCHEDULE_AMY);","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"ruishanteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor copyDescriptor \u003d new EditScheduleDescriptor(DESC_SCHEDULE_AMY);","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand commandWithSameValues \u003d new EditScheduleCommand(INDEX_FIRST_SCHEDULE, copyDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"ruishanteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"ruishanteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"ruishanteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":176,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"ruishanteo"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(standardCommand.equals(new EditScheduleCommand(INDEX_SECOND_SCHEDULE, DESC_SCHEDULE_AMY)));","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"ruishanteo"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":182,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(standardCommand.equals(new EditScheduleCommand(INDEX_FIRST_SCHEDULE, DESC_SCHEDULE_BOB)));","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":184,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":186,"author":{"gitId":"ruishanteo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":187,"author":{"gitId":"ruishanteo"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":188,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor editScheduleDescriptor \u003d new EditScheduleDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":189,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand editScheduleCommand \u003d new EditScheduleCommand(index, editScheduleDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":190,"author":{"gitId":"ruishanteo"},"content":"        String expected \u003d EditScheduleCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editScheduleDescriptor\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":191,"author":{"gitId":"ruishanteo"},"content":"            + editScheduleDescriptor + \"}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":192,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expected, editScheduleCommand.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":193,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":194,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":195,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":195}},{"path":"src/test/java/seedu/address/logic/commands/EditScheduleDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SCHEDULE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SCHEDULE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.EditScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"public class EditScheduleDescriptorTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand.EditScheduleDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"            new EditScheduleCommand.EditScheduleDescriptor(DESC_SCHEDULE_AMY);","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(DESC_SCHEDULE_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(DESC_SCHEDULE_AMY.equals(DESC_SCHEDULE_AMY));","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(DESC_SCHEDULE_AMY.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(DESC_SCHEDULE_AMY.equals(5));","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(DESC_SCHEDULE_AMY.equals(DESC_SCHEDULE_BOB));","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"        // different startTime -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand.EditScheduleDescriptor","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"            editedAmy \u003d new EditScheduleDescriptorBuilder(DESC_SCHEDULE_AMY)","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"            .withStartTime(VALID_START_TIME_TWO).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(DESC_SCHEDULE_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"        // different endTime -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"        editedAmy \u003d new EditScheduleDescriptorBuilder(DESC_SCHEDULE_AMY).withEndTime(VALID_END_TIME_TWO).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(DESC_SCHEDULE_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand.EditScheduleDescriptor editScheduleDescriptor \u003d new EditScheduleCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"            .EditScheduleDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"        String expected \u003d EditScheduleCommand.EditScheduleDescriptor.class.getCanonicalName() + \"{startTime\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"            + editScheduleDescriptor.getStartTime().orElse(null) + \", endTime\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"            + editScheduleDescriptor.getEndTime().orElse(null) + \", tutor\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"            + editScheduleDescriptor.getTutor().orElse(null) + \"}\";","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expected, editScheduleDescriptor.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":57}},{"path":"src/test/java/seedu/address/logic/commands/EditTutorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTutorCommand.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"public class EditTutorCommandTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"mfjkri"},"content":"        String expectedMessage \u003d String.format(EditTutorCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"mfjkri"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"mfjkri"},"content":"        assertCommandSuccess(editTutorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"mfjkri"},"content":"        String expectedMessage \u003d String.format(EditTutorCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"mfjkri"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"mfjkri"},"content":"        assertCommandSuccess(editTutorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"mfjkri"},"content":"        String expectedMessage \u003d String.format(EditTutorCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"mfjkri"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"        assertCommandSuccess(editTutorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"saltedfishxx"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"saltedfishxx"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build());","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"        String expectedMessage \u003d String.format(EditTutorCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"mfjkri"},"content":"            Messages.format(editedPerson));","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"        assertCommandSuccess(editTutorCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"        assertCommandFailure(editTutorCommand, model, EditTutorCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"        assertCommandFailure(editTutorCommand, model, EditTutorCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"        assertCommandFailure(editTutorCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"mfjkri"},"content":"        assertCommandFailure(editTutorCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"mfjkri"},"content":"        final EditTutorCommand standardCommand \u003d new EditTutorCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand commandWithSameValues \u003d new EditTutorCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"mfjkri"},"content":"        assertFalse(standardCommand.equals(new EditTutorCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"mfjkri"},"content":"        assertFalse(standardCommand.equals(new EditTutorCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand editTutorCommand \u003d new EditTutorCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"mfjkri"},"content":"        String expected \u003d EditTutorCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"mfjkri"},"content":"        assertEquals(expected, editTutorCommand.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ruishanteo":2,"saltedfishxx":3,"-":148,"mfjkri":34}},{"path":"src/test/java/seedu/address/logic/commands/ListScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTutorCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"public class ListScheduleCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"    private Model model;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"        assertCommandSuccess(new ListScheduleCommand(), model, ListScheduleCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"saltedfishxx":31}},{"path":"src/test/java/seedu/address/logic/commands/ListTutorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"Jweng88"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTutorCommand.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Jweng88"},"content":"public class ListTutorCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"        assertCommandSuccess(new ListTutorCommand(), model, ListTutorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"Jweng88"},"content":"        assertCommandSuccess(new ListTutorCommand(), model, ListTutorCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jweng88":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_TWO;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TUTOR_INDEX;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_ONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_TWO;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TUTOR_INDEX_DESC_TWO;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_ONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_ONE;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"public class AddScheduleCommandParserTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    private AddScheduleCommandParser parser \u003d new AddScheduleCommandParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.parse(VALID_START_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        EndTime endTime \u003d new EndTime(LocalDateTime.parse(VALID_END_TIME_ONE));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        String userInput \u003d INDEX_FIRST_PERSON.getOneBased() + START_TIME_DESC_ONE + END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        System.out.println(userInput);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"                INDEX_FIRST_PERSON.getOneBased() + START_TIME_DESC_ONE + END_TIME_DESC_ONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"                new AddScheduleCommand(INDEX_FIRST_PERSON, startTime, endTime));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        // no index specified","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, START_TIME_DESC_ONE + END_TIME_DESC_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        // no field specified","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        // negative index","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        // zero index","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"        String validExpectedScheduleString \u003d START_TIME_DESC_ONE + END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"        // multiple start times","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"                INDEX_FIRST_PERSON.getOneBased() + START_TIME_DESC_TWO + validExpectedScheduleString,","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        // multiple end times","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + END_TIME_DESC_TWO + validExpectedScheduleString,","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END_TIME));","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        // invalid start time","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + INVALID_START_TIME + validExpectedScheduleString,","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"        // invalid end time","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + INVALID_END_TIME + validExpectedScheduleString,","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END_TIME));","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        // invalid start time","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + validExpectedScheduleString + INVALID_START_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"        // invalid end time","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + validExpectedScheduleString + INVALID_END_TIME,","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END_TIME));","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"        // missing start time prefix","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + VALID_START_TIME_ONE + END_TIME_DESC_ONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"        // missing end time prefix","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + START_TIME_DESC_ONE + VALID_END_TIME_ONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + VALID_START_TIME_ONE + VALID_END_TIME_ONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"        // invalid tutor index","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INVALID_TUTOR_INDEX + START_TIME_DESC_ONE + END_TIME_DESC_ONE,","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"        // invalid start time","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, TUTOR_INDEX_DESC_TWO + INVALID_START_TIME + END_TIME_DESC_ONE,","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"                StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"        // invalid end time","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, TUTOR_INDEX_DESC_TWO + START_TIME_DESC_ONE + INVALID_END_TIME,","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"                EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, INVALID_TUTOR_INDEX + START_TIME_DESC_ONE + INVALID_END_TIME,","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TUTOR_INDEX_DESC_TWO + START_TIME_DESC_ONE","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"                + END_TIME_DESC_ONE, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"                AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"dishenggg":150}},{"path":"src/test/java/seedu/address/logic/parser/AddTutorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.AddTutorCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"public class AddTutorCommandParserTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"    private AddTutorCommandParser parser \u003d new AddTutorCommandParser();","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"            new AddTutorCommand(expectedPerson));","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"        // multiple names","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"        // multiple phones","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"        // multiple emails","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"            validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"        // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"        // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"ruishanteo"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"ruishanteo"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"        // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"ruishanteo"},"content":"        // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTutorCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"        // missing phone prefix","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"        // missing email prefix","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"ruishanteo"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"        // invalid name","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"        // invalid phone","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"        // invalid email","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_EMAIL_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"ruishanteo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTutorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"ruishanteo":133}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.AddTutorCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.DeleteTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.ListScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.ListTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"import seedu.address.testutil.ScheduleUtil;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"        AddTutorCommand command \u003d (AddTutorCommand) parser.parseCommand(PersonUtil.getAddTutorCommand(person));","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(new AddTutorCommand(person), command);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        DeleteTutorCommand command \u003d (DeleteTutorCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Jweng88"},"content":"                DeleteTutorCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Jweng88"},"content":"        assertEquals(new DeleteTutorCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        EditTutorCommand command \u003d (EditTutorCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"                EditTutorCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"                        + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"mfjkri"},"content":"        assertEquals(new EditTutorCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"Jweng88"},"content":"        assertTrue(parser.parseCommand(ListTutorCommand.COMMAND_WORD) instanceof ListTutorCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Jweng88"},"content":"        assertTrue(parser.parseCommand(ListTutorCommand.COMMAND_WORD + \" 3\") instanceof ListTutorCommand);","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"    public void parseCommand_addSchedule() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule \u003d new ScheduleBuilder().build();","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        AddScheduleCommand command \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"                (AddScheduleCommand) parser.parseCommand(ScheduleUtil.getAddScheduleCommand(schedule));","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"        assertEquals(new AddScheduleCommand(INDEX_FIRST_PERSON, schedule.getStartTime(), schedule.getEndTime()),","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"                command);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"saltedfishxx"},"content":"    public void parseCommand_listSchedule() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"saltedfishxx"},"content":"        assertTrue(parser.parseCommand(ListScheduleCommand.COMMAND_WORD) instanceof ListScheduleCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"saltedfishxx"},"content":"    public void parseCommand_deleteSchedule() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"saltedfishxx"},"content":"        DeleteScheduleCommand command \u003d (DeleteScheduleCommand) parser.parseCommand(","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"saltedfishxx"},"content":"            DeleteScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(new DeleteScheduleCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"                        -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ruishanteo":3,"saltedfishxx":12,"Jweng88":6,"dishenggg":18,"-":87,"mfjkri":3}},{"path":"src/test/java/seedu/address/logic/parser/DeleteScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":" * outside of the DeleteTutorCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":" * same path through the DeleteTutorCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"public class DeleteScheduleCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"    private DeleteScheduleCommandParser parser \u003d new DeleteScheduleCommandParser();","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    public void parse_validArgs_returnsDeleteScheduleCommand() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"        assertParseSuccess(parser, \"1\", new DeleteScheduleCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"saltedfishxx":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTutorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"import seedu.address.logic.commands.DeleteTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"Jweng88"},"content":" * outside of the DeleteTutorCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Jweng88"},"content":" * same path through the DeleteTutorCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"Jweng88"},"content":"public class DeleteTutorCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Jweng88"},"content":"    private DeleteTutorCommandParser parser \u003d new DeleteTutorCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTutorCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Jweng88"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Jweng88"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTutorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Jweng88":8,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/EditScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.EditScheduleCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.EditScheduleCommand.EditScheduleDescriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.EditScheduleDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"public class EditScheduleCommandParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditScheduleCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"    private EditScheduleCommandParser parser \u003d new EditScheduleCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"        // no index specified","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, VALID_START_TIME_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"        // no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1\", EditScheduleCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"        // negative index","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"-5\" + VALID_START_TIME_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"        // zero index","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"0\" + VALID_START_TIME_ONE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME, StartTime.MESSAGE_CONSTRAINTS); // invalid start time","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_END_TIME, EndTime.MESSAGE_CONSTRAINTS); // invalid end time","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"        // invalid start time followed by valid end time","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME + END_TIME_DESC_ONE, StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME + INVALID_END_TIME, StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"        Index targetIndex \u003d INDEX_SECOND_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_ONE + END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_ONE)","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"ruishanteo"},"content":"            .withEndTime(VALID_END_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand expectedCommand \u003d new EditScheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"        Index targetIndex \u003d INDEX_FIRST_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_ONE + END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d new EditScheduleDescriptorBuilder().withStartTime(VALID_START_TIME_ONE)","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"ruishanteo"},"content":"            .withEndTime(VALID_END_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand expectedCommand \u003d new EditScheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"        // start time","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"        Index targetIndex \u003d INDEX_THIRD_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleDescriptor descriptor \u003d new EditScheduleDescriptorBuilder()","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"            .withStartTime(VALID_START_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"        EditScheduleCommand expectedCommand \u003d new EditScheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"ruishanteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"ruishanteo"},"content":"        // end time","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"ruishanteo"},"content":"        userInput \u003d targetIndex.getOneBased() + END_TIME_DESC_ONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"ruishanteo"},"content":"        descriptor \u003d new EditScheduleDescriptorBuilder().withEndTime(VALID_END_TIME_ONE).build();","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"ruishanteo"},"content":"        expectedCommand \u003d new EditScheduleCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"ruishanteo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"ruishanteo"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"        Index targetIndex \u003d INDEX_FIRST_SCHEDULE;","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_START_TIME + START_TIME_DESC_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2023-10-21"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"        userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_TWO + INVALID_START_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"        userInput \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"            targetIndex.getOneBased() + START_TIME_DESC_ONE + END_TIME_DESC_ONE + START_TIME_DESC_TWO","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"                + END_TIME_DESC_ONE + START_TIME_DESC_ONE + END_TIME_DESC_TWO;","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME, PREFIX_END_TIME));","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_START_TIME + INVALID_END_TIME + INVALID_START_TIME","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"            + INVALID_END_TIME;","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"ruishanteo"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME, PREFIX_END_TIME));","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":148}},{"path":"src/test/java/seedu/address/logic/parser/EditTutorCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"public class EditTutorCommandParserTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTutorCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"    private EditTutorCommandParser parser \u003d new EditTutorCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"mfjkri"},"content":"        assertParseFailure(parser, \"1\", EditTutorCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand expectedCommand \u003d new EditTutorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand expectedCommand \u003d new EditTutorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"        EditTutorCommand expectedCommand \u003d new EditTutorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"        expectedCommand \u003d new EditTutorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"        expectedCommand \u003d new EditTutorCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"ruishanteo"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"ruishanteo"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"            + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"            + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"ruishanteo":10,"-":138,"mfjkri":11}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    /* Tutor related */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"    /* Schedule related */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_TUTOR_INDEX_STRING_1 \u003d \"-1\";","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_TUTOR_INDEX_STRING_2 \u003d \"0\";","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_TIME_STRING_1 \u003d \"2023-12-12T44:44\";","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_TIME_STRING_2 \u003d \"2023-12-12 10:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"    private static final String INVALID_TIME_STRING_3 \u003d \"2023-15-12T10:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    private static final String VALID_TUTOR_INDEX_STRING \u003d \"1\";","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    private static final Integer VALID_TUTOR_INDEX_VALUE \u003d 1;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    private static final String VALID_TIME_STRING \u003d \"2023-09-15T11:00:00\";","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    private static final LocalDateTime VALID_TIME_VALUE \u003d LocalDateTime.of(2023, 9, 15, 11, 0, 0);","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"    /* Others */","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"    public void parserUtil_instantiation_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"        ParserUtil parserUtil \u003d new ParserUtil();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"        assertNotNull(parserUtil);","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"    public void parseStartTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStartTime(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"    public void parseStartTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStartTime(INVALID_TIME_STRING_1));","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStartTime(INVALID_TIME_STRING_2));","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStartTime(INVALID_TIME_STRING_3));","lastModifiedDate":"2023-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"    public void parseStartTime_validValueWithoutWhitespace_returnsStartTime() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"        StartTime expectedStartTime \u003d new StartTime(VALID_TIME_VALUE);","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedStartTime, ParserUtil.parseStartTime(VALID_TIME_STRING));","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"    public void parseStartTime_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"        String startTimeWithWhitespace \u003d WHITESPACE + VALID_TIME_STRING + WHITESPACE;","lastModifiedDate":"2023-10-10"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"        StartTime expectedStartTime \u003d new StartTime(VALID_TIME_VALUE);","lastModifiedDate":"2023-10-10"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedStartTime, ParserUtil.parseStartTime(startTimeWithWhitespace));","lastModifiedDate":"2023-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"    public void parseEndTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"    public void parseEndTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEndTime(INVALID_TIME_STRING_1));","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEndTime(INVALID_TIME_STRING_2));","lastModifiedDate":"2023-10-10"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEndTime(INVALID_TIME_STRING_3));","lastModifiedDate":"2023-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"    public void parseEndTime_validValueWithoutWhitespace_returnsEndTime() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"        EndTime expectedEndTime \u003d new EndTime(VALID_TIME_VALUE);","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedEndTime, ParserUtil.parseEndTime(VALID_TIME_STRING));","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"    public void parseEndTime_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"        String endTimeWithWhitespace \u003d WHITESPACE + VALID_TIME_STRING + WHITESPACE;","lastModifiedDate":"2023-10-10"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"        EndTime expectedEndTime \u003d new EndTime(VALID_TIME_VALUE);","lastModifiedDate":"2023-10-10"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedEndTime, ParserUtil.parseEndTime(endTimeWithWhitespace));","lastModifiedDate":"2023-10-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"dishenggg":46,"-":140,"mfjkri":4}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"Jweng88"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_ALICE_FIRST_JAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Jweng88"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_BOB_SECOND_JAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"Jweng88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Jweng88"},"content":"import seedu.address.model.schedule.exceptions.DuplicateScheduleException;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Jweng88"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Jweng88"},"content":"    public void hasSchedule_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"Jweng88"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasSchedule(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"Jweng88"},"content":"    public void hasSchedule_scheduleNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"Jweng88"},"content":"        assertFalse(addressBook.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"Jweng88"},"content":"    public void hasSchedule_scheduleInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"Jweng88"},"content":"        addressBook.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"Jweng88"},"content":"        assertTrue(addressBook.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"Jweng88"},"content":"    public void hasSchedule_scheduleWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"Jweng88"},"content":"        addressBook.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"Jweng88"},"content":"        Schedule editedSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Jweng88"},"content":"        assertTrue(addressBook.hasSchedule(editedSchedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Jweng88"},"content":"    public void addSchedule_duplicateSchedule_throwsDuplicateScheduleException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"Jweng88"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.of(2023, 1,","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"Jweng88"},"content":"                1, 0, 0, 0));","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"Jweng88"},"content":"        EndTime endTime \u003d new EndTime(LocalDateTime.of(2023, 1,","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"Jweng88"},"content":"                1, 1, 0, 0));","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"Jweng88"},"content":"        Schedule schedule \u003d new Schedule(ALICE, startTime, endTime);","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"Jweng88"},"content":"        addressBook.addSchedule(schedule);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"Jweng88"},"content":"        assertThrows(DuplicateScheduleException.class, () -\u003e addressBook.addSchedule(schedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"Jweng88"},"content":"    public void setSchedule_scheduleInAddressBook_updatesSchedule() {","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"Jweng88"},"content":"        addressBook.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"Jweng88"},"content":"        addressBook.setSchedule(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"Jweng88"},"content":"        assertTrue(addressBook.hasSchedule(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"Jweng88"},"content":"        assertFalse(addressBook.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"Jweng88"},"content":"    public void removeSchedule_scheduleInAddressBook_removesSchedule() {","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"Jweng88"},"content":"        addressBook.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"Jweng88"},"content":"        addressBook.removeSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"Jweng88"},"content":"        assertFalse(addressBook.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"Jweng88"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"Jweng88"},"content":"    public void getScheduleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"Jweng88"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getScheduleList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"Jweng88"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"Jweng88"},"content":"        String expected \u003d AddressBook.class.getCanonicalName()","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"Jweng88"},"content":"                + \"{persons\u003d\" + addressBook.getPersonList() + \", schedules\u003d\" + addressBook.getScheduleList() + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"Jweng88"},"content":"        private final ObservableList\u003cSchedule\u003e schedules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":168,"author":{"gitId":"Jweng88"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"Jweng88"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"Jweng88"},"content":"        public ObservableList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"Jweng88"},"content":"            return schedules;","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"Jweng88"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ruishanteo":2,"Jweng88":72,"-":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_ALICE_FIRST_JAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_BOB_SECOND_JAN;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"    public void deletePerson_personWithSchedulesDeleted_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"        modelManager.deletePerson(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"mfjkri"},"content":"    public void hasSchedule_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"mfjkri"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasSchedule(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"mfjkri"},"content":"    public void hasSchedule_scheduleNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"mfjkri"},"content":"        assertFalse(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"mfjkri"},"content":"    public void hasSchedule_scheduleInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"mfjkri"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"mfjkri"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"mfjkri"},"content":"    public void setSchedule_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"mfjkri"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSchedule(null, null));","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"mfjkri"},"content":"    public void setSchedule_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"mfjkri"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"mfjkri"},"content":"        modelManager.setSchedule(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"mfjkri"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"mfjkri"},"content":"    public void removeSchedule_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"mfjkri"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"mfjkri"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"mfjkri"},"content":"        modelManager.deleteSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"mfjkri"},"content":"        assertFalse(modelManager.hasSchedule(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"ruishanteo"},"content":"    public void removeSchedules_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addSchedule(SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"        modelManager.deleteSchedules(modelManager.getAddressBook().getScheduleList());","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(modelManager.hasSchedule(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"    public void getFilteredScheduleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredScheduleList().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"ruishanteo"},"content":"    public void getSchedulesFromTutor_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"ruishanteo"},"content":"        ObservableList\u003cSchedule\u003e foundSchedules \u003d modelManager.getSchedulesFromTutor(ALICE);","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(foundSchedules.contains(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"ruishanteo"},"content":"    public void getSchedulesFromTutor_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"ruishanteo"},"content":"        modelManager.addSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(modelManager.hasSchedule(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e modelManager.getSchedulesFromTutor(ALICE));","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"                .withPerson(ALICE)","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"dishenggg"},"content":"                .withPerson(BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"                .withSchedule(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"                .withSchedule(SCHEDULE_BOB_SECOND_JAN)","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"dishenggg"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":219,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"dishenggg"},"content":"        // different Schedule List -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"dishenggg"},"content":"        modelManager.deleteSchedule(modelManager.getFilteredScheduleList().get(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ruishanteo":44,"dishenggg":12,"-":129,"mfjkri":39}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ruishanteo":1,"-":84}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \"}\";","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"mfjkri"},"content":"    public void hashCode_validTutor_returnsHashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"mfjkri"},"content":"        Person tutor \u003d new Person(","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"mfjkri"},"content":"            new Name(\"John Doe\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"mfjkri"},"content":"            new Phone(\"12345678\"),","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"mfjkri"},"content":"            new Email(\"johndoe@example.com\")","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"mfjkri"},"content":"        );","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"mfjkri"},"content":"        int expectedHashCode \u003d Objects.hash(tutor.getName(),","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"mfjkri"},"content":"            tutor.getPhone(),","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"mfjkri"},"content":"            tutor.getEmail());","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"mfjkri"},"content":"        assertEquals(expectedHashCode, tutor.hashCode());","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ruishanteo":2,"-":79,"mfjkri":16}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ruishanteo":2,"-":169}},{"path":"src/test/java/seedu/address/model/schedule/EndTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"class EndTimeTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EndTime(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    public void isValidEndTime() {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"        // null","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e EndTime.isValidEndTime(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        // invalid EndTimes","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"12313\")); // positive numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"-91\")); // negative numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"EndTime\")); // alphabets","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"End Time\")); // spaces within alphabets","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"2024-31-12T00:00:00\")); // bad month","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"2024-01-32T00:00:00\")); // bad day","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"2024-01-01T25:00:00\")); // bad hour","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"2024-01-01T00:61:00\")); // bad min","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"2024-01-01T00:00:61\")); // bad sec","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        assertFalse(EndTime.isValidEndTime(\"2023-02-29T01:00:00\")); // non leap year","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        // valid EndTimes","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        assertTrue(EndTime.isValidEndTime(\"2024-02-29T01:00:00\")); // leap year","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        assertTrue(EndTime.isValidEndTime(\"2024-01-01T00:00:00\")); // first second of a year","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        assertTrue(EndTime.isValidEndTime(\"2023-12-31T23:59:59\")); // last second of a year","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        assertTrue(EndTime.isValidEndTime(\"2099-01-01T00:00:00\")); // Long time in the future","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        assertTrue(EndTime.isValidEndTime(\"1899-01-01T00:00:00\")); // Long time in the past","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        assertTrue(EndTime.isValidEndTime(\"2023-10-17T18:15:33\")); // random date","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        EndTime endTime \u003d new EndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        assertTrue(endTime.equals(new EndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        assertTrue(endTime.equals(endTime));","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"        // same StartTime -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        assertTrue(endTime.equals(new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        assertFalse(endTime.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        assertFalse(endTime.equals(\"String\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        assertFalse(endTime.equals(new EndTime(LocalDateTime.of(2024, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        // different StartTime -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        assertFalse(endTime.equals(new StartTime(LocalDateTime.of(2024, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        EndTime endTime \u003d new EndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"        assertEquals(endTime.hashCode(), new EndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0)).hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        // different value -\u003e returns different hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        assertNotEquals(endTime.hashCode(), new EndTime(LocalDateTime.of(2024, 1, 1, 0, 0, 0)).hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"        EndTime endTime \u003d new EndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        String expectedString \u003d \"Jan 1 2023 00:00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedString, endTime.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":92}},{"path":"src/test/java/seedu/address/model/schedule/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_ALICE_FIRST_JAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_BOB_SECOND_JAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"class ScheduleTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"                .withTutor(null)","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"                .build());","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(null)","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"                .build());","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(null)","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"                .build());","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    public void constructor_startTimeAfterEndTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ScheduleBuilder()","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(LocalDateTime.of(2023, 1, 2, 0, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"                .build());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"    public void constructor_startTimeEqualsEndTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ScheduleBuilder()","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"                .build());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    public void testIsClashing() {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"        final LocalDateTime aliceStartDateTime \u003d SCHEDULE_ALICE_FIRST_JAN.getStartTime().getTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        final LocalDateTime aliceEndDateTime \u003d SCHEDULE_ALICE_FIRST_JAN.getEndTime().getTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        // null -\u003e throws NullPointerException","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e SCHEDULE_ALICE_FIRST_JAN.isClashing((Schedule) null));","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        Schedule scheduleCopy \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.isClashing(scheduleCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        assertTrue(scheduleCopy.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        // same schedule -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        // different tutor, same times -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        Schedule bobSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).withTutor(TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(bobSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        assertFalse(bobSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        // different tutor, different times -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        // same tutor, non-clashing schedules -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        Schedule beforeSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceStartDateTime.minusHours(2))","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceStartDateTime.minusHours(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(beforeSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        assertFalse(beforeSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        Schedule afterSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceEndDateTime.plusHours(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceEndDateTime.plusHours(2))","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(afterSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"        assertFalse(afterSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"        Schedule nextDaySchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceStartDateTime.plusDays(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceEndDateTime.plusDays(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(nextDaySchedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        assertFalse(nextDaySchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"        // same tutor, adjacent times -\u003e return false","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"        beforeSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceStartDateTime.minusHours(2))","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceStartDateTime)","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(beforeSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"        assertFalse(beforeSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"        afterSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceEndDateTime)","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceEndDateTime.plusHours(2))","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.isClashing(afterSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"dishenggg"},"content":"        assertFalse(afterSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"dishenggg"},"content":"        // same tutor, end time overlapping -\u003e return true","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"dishenggg"},"content":"        Schedule otherSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceStartDateTime.minusHours(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceStartDateTime.plusSeconds(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.isClashing(otherSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"dishenggg"},"content":"        assertTrue(otherSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"dishenggg"},"content":"        // same tutor, start time overlapping -\u003e return true","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"dishenggg"},"content":"        otherSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceEndDateTime.minusSeconds(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceEndDateTime.plusHours(2))","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.isClashing(otherSchedule));","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"dishenggg"},"content":"        assertTrue(otherSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"dishenggg"},"content":"        // same tutor, both times overlapping -\u003e return true","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"dishenggg"},"content":"        otherSchedule \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(aliceStartDateTime.plusSeconds(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(aliceEndDateTime.minusSeconds(1))","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.isClashing(otherSchedule));","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"dishenggg"},"content":"        assertTrue(otherSchedule.isClashing(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"dishenggg"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"dishenggg"},"content":"        Schedule defaultCopy \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.equals(defaultCopy));","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"dishenggg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"dishenggg"},"content":"        assertTrue(SCHEDULE_ALICE_FIRST_JAN.equals(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"dishenggg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"dishenggg"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.equals(5));","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"dishenggg"},"content":"        // different schedule -\u003e returns false","lastModifiedDate":"2023-10-10"},{"lineNumber":150,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.equals(SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"dishenggg"},"content":"        // different tutor index -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"dishenggg"},"content":"        Schedule editedOne \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).withTutor(TypicalPersons.BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.equals(editedOne));","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"dishenggg"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"dishenggg"},"content":"        editedOne \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"dishenggg"},"content":"                .withStartTime(LocalDateTime.of(2022, 12, 31, 10, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.equals(editedOne));","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"dishenggg"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"dishenggg"},"content":"        editedOne \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN)","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"dishenggg"},"content":"                .withEndTime(LocalDateTime.of(2023, 1, 2, 10, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"dishenggg"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"dishenggg"},"content":"        assertFalse(SCHEDULE_ALICE_FIRST_JAN.equals(editedOne));","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"dishenggg"},"content":"    void testCompareTo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime today \u003d LocalDateTime.now().withHour(0).withMinute(0).withSecond(0).withNano(0);","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime tomorrow \u003d today.plusDays(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"dishenggg"},"content":"        LocalDateTime yesterday \u003d today.minusDays(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"dishenggg"},"content":"        // Same schedule","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"dishenggg"},"content":"        Schedule schedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(today).withEndTime(today.withHour(1)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"dishenggg"},"content":"        assertTrue(schedule.compareTo(schedule) \u003d\u003d 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"dishenggg"},"content":"        Schedule copy \u003d new ScheduleBuilder(schedule).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"dishenggg"},"content":"        assertTrue(schedule.compareTo(copy) \u003d\u003d 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"dishenggg"},"content":"        // Both schedules before today","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"dishenggg"},"content":"        Schedule ealierSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(yesterday.withHour(9)).withEndTime(yesterday.withHour(11)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"dishenggg"},"content":"        Schedule laterSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(yesterday.withHour(11)).withEndTime(yesterday.withHour(13)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(laterSchedule) \u003e 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"dishenggg"},"content":"        assertTrue(laterSchedule.compareTo(ealierSchedule) \u003c 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"dishenggg"},"content":"        copy \u003d new ScheduleBuilder(ealierSchedule).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(copy) \u003d\u003d 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"dishenggg"},"content":"        // Both schedules from today","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"dishenggg"},"content":"        ealierSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(today.withHour(9)).withEndTime(today.withHour(11)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"dishenggg"},"content":"        laterSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(today.withHour(11)).withEndTime(today.withHour(13)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(laterSchedule) \u003c 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"dishenggg"},"content":"        assertTrue(laterSchedule.compareTo(ealierSchedule) \u003e 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"dishenggg"},"content":"        copy \u003d new ScheduleBuilder(ealierSchedule).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(copy) \u003d\u003d 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"dishenggg"},"content":"        // Both schedules after today","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"dishenggg"},"content":"        ealierSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(tomorrow.withHour(9)).withEndTime(tomorrow.withHour(11)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"dishenggg"},"content":"        laterSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(tomorrow.withHour(11)).withEndTime(tomorrow.withHour(13)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(laterSchedule) \u003c 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"dishenggg"},"content":"        assertTrue(laterSchedule.compareTo(ealierSchedule) \u003e 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"dishenggg"},"content":"        copy \u003d new ScheduleBuilder(ealierSchedule).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":226,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(copy) \u003d\u003d 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"dishenggg"},"content":"        // One before, one after","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"dishenggg"},"content":"        ealierSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(yesterday.withHour(9)).withEndTime(yesterday.withHour(11)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"dishenggg"},"content":"        laterSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(tomorrow.withHour(11)).withEndTime(tomorrow.withHour(13)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(laterSchedule) \u003e 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"dishenggg"},"content":"        assertTrue(laterSchedule.compareTo(ealierSchedule) \u003c 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"dishenggg"},"content":"        // One on, one after","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"dishenggg"},"content":"        ealierSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(today.withHour(9)).withEndTime(today.withHour(11)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"dishenggg"},"content":"        laterSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(tomorrow.withHour(11)).withEndTime(tomorrow.withHour(13)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(laterSchedule) \u003c 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"dishenggg"},"content":"        assertTrue(laterSchedule.compareTo(ealierSchedule) \u003e 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"dishenggg"},"content":"        // One on, one before","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"dishenggg"},"content":"        ealierSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(yesterday.withHour(9)).withEndTime(yesterday.withHour(11)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":256,"author":{"gitId":"dishenggg"},"content":"        laterSchedule \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"dishenggg"},"content":"                new ScheduleBuilder().withStartTime(today.withHour(11)).withEndTime(today.withHour(13)).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":259,"author":{"gitId":"dishenggg"},"content":"        assertTrue(ealierSchedule.compareTo(laterSchedule) \u003e 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":260,"author":{"gitId":"dishenggg"},"content":"        assertTrue(laterSchedule.compareTo(ealierSchedule) \u003c 0);","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":264,"author":{"gitId":"dishenggg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":265,"author":{"gitId":"dishenggg"},"content":"        String expected \u003d Schedule.class.getCanonicalName() + \"{tutor\u003d\" + SCHEDULE_ALICE_FIRST_JAN.getTutor()","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"dishenggg"},"content":"                + \", startTime\u003d\" + SCHEDULE_ALICE_FIRST_JAN.getStartTime()","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"dishenggg"},"content":"                + \", endTime\u003d\" + SCHEDULE_ALICE_FIRST_JAN.getEndTime() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":268,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expected, SCHEDULE_ALICE_FIRST_JAN.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":269,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":270,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":270}},{"path":"src/test/java/seedu/address/model/schedule/StartTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"class StartTimeTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StartTime(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    void isValidStartTime() {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"        // null","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e StartTime.isValidStartTime(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        // invalid StartTimes","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"12313\")); // positive numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"-91\")); // negative numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"StartTime\")); // alphabets","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"Start Time\")); // spaces within alphabets","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"2024-31-12T00:00:00\")); // bad month","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"2024-01-32T00:00:00\")); // bad day","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"2024-01-01T25:00:00\")); // bad hour","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"2024-01-01T00:61:00\")); // bad min","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"2024-01-01T00:00:61\")); // bad sec","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        assertFalse(StartTime.isValidStartTime(\"2023-02-29T01:00:00\")); // non leap year","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        // valid StartTimes","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        assertTrue(StartTime.isValidStartTime(\"2024-02-29T01:00:00\")); // leap year","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"        assertTrue(StartTime.isValidStartTime(\"2024-01-01T00:00:00\")); // first second of a year","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        assertTrue(StartTime.isValidStartTime(\"2023-12-31T23:59:59\")); // last second of a year","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        assertTrue(StartTime.isValidStartTime(\"2099-01-01T00:00:00\")); // Long time in the future","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"        assertTrue(StartTime.isValidStartTime(\"1899-01-01T00:00:00\")); // Long time in the past","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        assertTrue(StartTime.isValidStartTime(\"2023-10-17T18:15:33\")); // random date","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        assertTrue(startTime.equals(new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        assertTrue(startTime.equals(startTime));","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"        // same EndTime -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        assertTrue(startTime.equals(new EndTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"        assertFalse(startTime.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        assertFalse(startTime.equals(\"String\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"        assertFalse(startTime.equals(new StartTime(LocalDateTime.of(2024, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"        // different EndTime -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"        assertFalse(startTime.equals(new EndTime(LocalDateTime.of(2024, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"        assertEquals(startTime.hashCode(), new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0)).hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"        // different value -\u003e returns different hashcode","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"        assertNotEquals(startTime.hashCode(), new StartTime(LocalDateTime.of(2024, 1, 1, 0, 0, 0)).hashCode());","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        String expectedString \u003d \"Jan 1 2023 00:00\";","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedString, startTime.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":92}},{"path":"src/test/java/seedu/address/model/schedule/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"class TimeTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    void isValidTimeString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"        // null","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTimeString(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"        // invalid StartTimes","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"\")); // empty string","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\" \")); // spaces only","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"12313\")); // positive numbers","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"-91\")); // negative numbers","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"StartTime\")); // alphabets","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"Start Time\")); // spaces within alphabets","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"2024-31-12T00:00:00\")); // bad month","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"2024-01-32T00:00:00\")); // bad day","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"2024-01-01T25:00:00\")); // bad hour","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"2024-01-01T00:61:00\")); // bad min","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"2024-01-01T00:00:61\")); // bad sec","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"        assertFalse(Time.isValidTimeString(\"2023-02-29T01:00:00\")); // non leap year","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        // valid StartTimes","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        assertTrue(Time.isValidTimeString(\"2024-02-29T01:00:00\")); // leap year","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        assertTrue(Time.isValidTimeString(\"2024-01-01T00:00:00\")); // first second of a year","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        assertTrue(Time.isValidTimeString(\"2023-12-31T23:59:59\")); // last second of a year","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"        assertTrue(Time.isValidTimeString(\"2099-01-01T00:00:00\")); // Long time in the future","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"        assertTrue(Time.isValidTimeString(\"1899-01-01T00:00:00\")); // Long time in the past","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"        assertTrue(Time.isValidTimeString(\"2023-10-17T18:15:33\")); // random date","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    void testEquals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        TimeStub time \u003d new TimeStub(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time.equals(new TimeStub(LocalDateTime.of(2023, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time.equals(time));","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"        assertFalse(time.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"        assertFalse(time.equals(\"String\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"        assertFalse(time.equals(new TimeStub(LocalDateTime.of(2024, 1, 1, 0, 0, 0))));","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"    void testToString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"        StartTime startTime \u003d new StartTime(LocalDateTime.of(2023, 1, 1, 0, 0, 0));","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"dishenggg"},"content":"        String expectedString \u003d \"Jan 1 2023 00:00\";","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"dishenggg"},"content":"        assertEquals(expectedString, startTime.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"dishenggg"},"content":"    void compareTo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"dishenggg"},"content":"        TimeStub time1 \u003d new TimeStub(LocalDateTime.of(2023, 1, 1, 11, 59));","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"dishenggg"},"content":"        TimeStub time2 \u003d new TimeStub(LocalDateTime.of(2023, 1, 1, 12, 0));","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"dishenggg"},"content":"        TimeStub time3 \u003d new TimeStub(LocalDateTime.of(2023, 1, 1, 12, 59));","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time2.compareTo(time2) \u003d\u003d 0); // testing comparison with itself","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time2.compareTo(time1) \u003e 0); // testing comparison with a time before","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time2.compareTo(time3) \u003c 0); // testing comparison with a time after","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"dishenggg"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"dishenggg"},"content":"    void compareDays() {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"dishenggg"},"content":"        TimeStub time1 \u003d new TimeStub(LocalDateTime.of(2023, 1, 1, 12, 0));","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"dishenggg"},"content":"        TimeStub time2 \u003d new TimeStub(LocalDateTime.of(2023, 1, 2, 12, 0));","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"dishenggg"},"content":"        TimeStub time3 \u003d new TimeStub(LocalDateTime.of(2023, 1, 3, 12, 0));","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time2.compareDays(time2) \u003d\u003d 0); // testing comparison with itself","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time2.compareDays(time1) \u003e 0); // testing comparison with a day before","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"dishenggg"},"content":"        assertTrue(time2.compareDays(time3) \u003c 0); // testing comparison with a day after","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"dishenggg"},"content":"    // Stub used to test methods in Time","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"dishenggg"},"content":"    private class TimeStub extends Time {","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"dishenggg"},"content":"        protected TimeStub(LocalDateTime time) {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"dishenggg"},"content":"            super(time);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"dishenggg"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"dishenggg":102}},{"path":"src/test/java/seedu/address/model/schedule/UniqueScheduleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_ALICE_FIRST_JAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_BOB_SECOND_JAN;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.exceptions.DuplicateScheduleException;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.exceptions.ScheduleNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"public class UniqueScheduleListTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"    private final UniqueScheduleList uniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"    public void contains_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList.contains(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"    public void contains_scheduleNotInList_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"        assertFalse(uniqueScheduleList.contains(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"    public void contains_scheduleInList_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(uniqueScheduleList.contains(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"    public void contains_scheduleWithSameFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedAlice \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"        assertTrue(uniqueScheduleList.contains(editedAlice));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"    public void add_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList.add(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"    public void add_duplicateSchedule_throwsDuplicateScheduleException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(DuplicateScheduleException.class, () -\u003e uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_nullTargetSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"ruishanteo"},"content":"            .setSchedule(null, SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_nullEditedSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"ruishanteo"},"content":"            .setSchedule(SCHEDULE_ALICE_FIRST_JAN, null));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_targetScheduleNotInList_throwsScheduleNotFoundException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(ScheduleNotFoundException.class, () -\u003e uniqueScheduleList.setSchedule(SCHEDULE_ALICE_FIRST_JAN,","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"ruishanteo"},"content":"            SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_editedScheduleIsSameSchedule_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.setSchedule(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList expectedUniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"ruishanteo"},"content":"        expectedUniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expectedUniqueScheduleList, uniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_editedScheduleHasSameFields_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"ruishanteo"},"content":"        Schedule editedAlice \u003d new ScheduleBuilder(SCHEDULE_ALICE_FIRST_JAN).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.setSchedule(SCHEDULE_ALICE_FIRST_JAN, editedAlice);","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList expectedUniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"ruishanteo"},"content":"        expectedUniqueScheduleList.add(editedAlice);","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expectedUniqueScheduleList, uniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_editedScheduleHasDifferentFields_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.setSchedule(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList expectedUniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"ruishanteo"},"content":"        expectedUniqueScheduleList.add(SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expectedUniqueScheduleList, uniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedule_editedScheduleHasNonUniqueFields_throwsDuplicateScheduleException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(DuplicateScheduleException.class, () -\u003e uniqueScheduleList","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"ruishanteo"},"content":"            .setSchedule(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"ruishanteo"},"content":"    public void remove_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList.remove(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"ruishanteo"},"content":"    public void remove_scheduleDoesNotExist_throwsScheduleNotFoundException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(ScheduleNotFoundException.class, () -\u003e uniqueScheduleList.remove(SCHEDULE_ALICE_FIRST_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"ruishanteo"},"content":"    public void remove_existingSchedule_removesSchedule() {","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.remove(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList expectedUniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expectedUniqueScheduleList, uniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules_nullUniqueScheduleList_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList.setSchedules((UniqueScheduleList) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules_uniqueScheduleList_replacesOwnListWithProvidedUniqueScheduleList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList expectedUniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"ruishanteo"},"content":"        expectedUniqueScheduleList.add(SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.setSchedules(expectedUniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expectedUniqueScheduleList, uniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueScheduleList.setSchedules((List\u003cSchedule\u003e) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.add(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"ruishanteo"},"content":"        List\u003cSchedule\u003e scheduleList \u003d Collections.singletonList(SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"ruishanteo"},"content":"        uniqueScheduleList.setSchedules(scheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"ruishanteo"},"content":"        UniqueScheduleList expectedUniqueScheduleList \u003d new UniqueScheduleList();","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"ruishanteo"},"content":"        expectedUniqueScheduleList.add(SCHEDULE_BOB_SECOND_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(expectedUniqueScheduleList, uniqueScheduleList);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"ruishanteo"},"content":"    public void setSchedules_listWithDuplicateSchedules_throwsDuplicateScheduleException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"ruishanteo"},"content":"        List\u003cSchedule\u003e listWithDuplicateSchedules \u003d Arrays.asList(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(DuplicateScheduleException.class, () -\u003e uniqueScheduleList","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"ruishanteo"},"content":"            .setSchedules(listWithDuplicateSchedules));","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":165,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"ruishanteo"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"ruishanteo"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"ruishanteo"},"content":"            -\u003e uniqueScheduleList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"ruishanteo"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"ruishanteo"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"ruishanteo"},"content":"        assertEquals(uniqueScheduleList.asUnmodifiableObservableList().toString(), uniqueScheduleList.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"ruishanteo":175}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mfjkri"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"mfjkri"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"mfjkri"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"mfjkri"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"mfjkri"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"mfjkri"},"content":"    public void getSamplePersons_validData_returnsArrayOfPersons() {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"mfjkri"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"mfjkri"},"content":"        assertNotNull(samplePersons);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"mfjkri"},"content":"        assertEquals(6, samplePersons.length);","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"mfjkri"},"content":"        for (Person person : samplePersons) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"mfjkri"},"content":"            assertNotNull(person);","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"            assertEquals(Name.class, person.getName().getClass());","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            assertEquals(Phone.class, person.getPhone().getClass());","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"mfjkri"},"content":"            assertEquals(Email.class, person.getEmail().getClass());","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"mfjkri"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"mfjkri"},"content":"    public void getSampleAddressBook_validData_returnsAddressBookWithSamplePersons() {","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"mfjkri"},"content":"        ReadOnlyAddressBook addressBook \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"mfjkri"},"content":"        assertNotNull(addressBook);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"mfjkri"},"content":"        assertEquals(6, addressBook.getPersonList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"mfjkri"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"mfjkri"},"content":"        Person[] samplePersons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"mfjkri"},"content":"        for (int i \u003d 0; i \u003c samplePersons.length; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"mfjkri"},"content":"            assertEquals(samplePersons[i], addressBook.getPersonList().get(i));","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"mfjkri"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"mfjkri"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"mfjkri"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"mfjkri":43}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ruishanteo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ruishanteo"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ruishanteo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ruishanteo":6,"-":69}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"saltedfishxx"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"saltedfishxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.model.schedule.Time.DATETIME_INPUT_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.storage.JsonAdaptedSchedule.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"saltedfishxx"},"content":"import static seedu.address.testutil.TypicalSchedules.SCHEDULE_ALICE_FIRST_JAN;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"saltedfishxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.testutil.TypicalSchedules;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"saltedfishxx"},"content":"public class JsonAdaptedScheduleTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    private static final String INVALID_STARTTIME \u003d \"15/02/2023 6pm\";","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"saltedfishxx"},"content":"    private static final String INVALID_ENDTIME \u003d \"14/02/2023 6pm\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"saltedfishxx"},"content":"    private static final String VALID_NAME \u003d SCHEDULE_ALICE_FIRST_JAN.getTutor().getName().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"saltedfishxx"},"content":"    private static final String VALID_STARTTIME \u003d SCHEDULE_ALICE_FIRST_JAN.getStartTime().getTime().format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"saltedfishxx"},"content":"    private static final String VALID_ENDTIME \u003d SCHEDULE_ALICE_FIRST_JAN.getEndTime().getTime().format(formatter);","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    private static final AddressBook original \u003d TypicalSchedules.getTypicalAddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_validScheduleDetails_returnsSchedule() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d new JsonAdaptedSchedule(SCHEDULE_ALICE_FIRST_JAN);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"        assertEquals(SCHEDULE_ALICE_FIRST_JAN, schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"                new JsonAdaptedSchedule(INVALID_NAME, VALID_STARTTIME, VALID_ENDTIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d new JsonAdaptedSchedule(null, VALID_STARTTIME, VALID_ENDTIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"                new JsonAdaptedSchedule(VALID_NAME, INVALID_STARTTIME, INVALID_ENDTIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d StartTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d new JsonAdaptedSchedule(VALID_NAME, null, VALID_ENDTIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StartTime.class.getSimpleName());","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"saltedfishxx"},"content":"                new JsonAdaptedSchedule(VALID_NAME, VALID_STARTTIME, INVALID_ENDTIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d EndTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"saltedfishxx"},"content":"        JsonAdaptedSchedule schedule \u003d new JsonAdaptedSchedule(VALID_NAME, VALID_STARTTIME, null);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"saltedfishxx"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EndTime.class.getSimpleName());","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e schedule.toModelType(original));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"saltedfishxx"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"saltedfishxx":83,"dishenggg":2}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"saltedfishxx"},"content":"    private static final Path CLASHING_SCHEDULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"clashingScheduleAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"saltedfishxx"},"content":"    private static final Path INVALID_SCHEDULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidScheduleAddressBook.json\");","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"saltedfishxx"},"content":"    private static final String MESSAGE_CONSTRAINTS \u003d \"Schedules start time should be before its end time.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_clashingSchedules_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"saltedfishxx"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(CLASHING_SCHEDULE_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"saltedfishxx"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_CLASHING_SCHEDULE,","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"saltedfishxx"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"saltedfishxx"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"saltedfishxx"},"content":"    public void toModelType_invalidScheduleFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"saltedfishxx"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_SCHEDULE_FILE,","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"saltedfishxx"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"saltedfishxx"},"content":"        assertThrows(IllegalArgumentException.class, MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"saltedfishxx"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"saltedfishxx":19,"-":47}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"     * Adds a new {@code Schedule} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"    public AddressBookBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        addressBook.addSchedule(schedule);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dishenggg":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":60,"mfjkri":1}},{"path":"src/test/java/seedu/address/testutil/EditScheduleDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruishanteo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"ruishanteo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.EditScheduleCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ruishanteo"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ruishanteo"},"content":" * A utility class to help with building EditScheduleDescriptor objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"public class EditScheduleDescriptorBuilder {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"    private EditScheduleCommand.EditScheduleDescriptor descriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleDescriptorBuilder() {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"        descriptor \u003d new EditScheduleCommand.EditScheduleDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleDescriptorBuilder(EditScheduleCommand.EditScheduleDescriptor descriptor) {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"ruishanteo"},"content":"        this.descriptor \u003d new EditScheduleCommand.EditScheduleDescriptor(descriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"     * Returns an {@code EditScheduleDescriptor} with fields containing {@code schedule}\u0027s details","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleDescriptorBuilder(Schedule schedule) {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"ruishanteo"},"content":"        descriptor \u003d new EditScheduleCommand.EditScheduleDescriptor();","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"        descriptor.setStartTime(schedule.getStartTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ruishanteo"},"content":"        descriptor.setEndTime(schedule.getEndTime());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"        descriptor.setTutor(schedule.getTutor());","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"     * Sets the {@code StartTime} of the {@code EditScheduleDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleDescriptorBuilder withStartTime(String startTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"ruishanteo"},"content":"        descriptor.setStartTime(new StartTime(LocalDateTime.parse(startTime)));","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"ruishanteo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ruishanteo"},"content":"     * Sets the {@code EndTime} of the {@code EditScheduleDescriptor} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"ruishanteo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleDescriptorBuilder withEndTime(String endTime) {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"ruishanteo"},"content":"        descriptor.setEndTime(new EndTime(LocalDateTime.parse(endTime)));","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"ruishanteo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"ruishanteo"},"content":"    public EditScheduleCommand.EditScheduleDescriptor build() {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"ruishanteo"},"content":"        return descriptor;","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"ruishanteo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"ruishanteo"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"ruishanteo":53}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"ruishanteo"},"content":"        return new Person(name, phone, email);","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ruishanteo":1,"-":66}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"ruishanteo"},"content":"import seedu.address.logic.commands.AddTutorCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"mfjkri"},"content":"import seedu.address.logic.commands.EditTutorCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"ruishanteo"},"content":"     * Returns an add tutor command string for adding the {@code person}.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"ruishanteo"},"content":"    public static String getAddTutorCommand(Person person) {","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"ruishanteo"},"content":"        return AddTutorCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ruishanteo":4,"-":39,"mfjkri":1}},{"path":"src/test/java/seedu/address/testutil/ScheduleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":" * A utility class to help with building Schedule objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"public class ScheduleBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"    public static final Person DEFAULT_TUTOR \u003d TypicalPersons.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"    public static final LocalDateTime DEFAULT_START_TIME \u003d LocalDateTime.of(2023, 1, 1, 0, 0, 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"    public static final LocalDateTime DEFAULT_END_TIME \u003d LocalDateTime.of(2023, 1, 1, 1, 0, 0);","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    private Person tutor;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    private StartTime startTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"    private EndTime endTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"     * Creates a {@code ScheduleBuilder} with the default details.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"    public ScheduleBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"        tutor \u003d DEFAULT_TUTOR;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"        startTime \u003d new StartTime(DEFAULT_START_TIME);","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        endTime \u003d new EndTime(DEFAULT_END_TIME);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"     * Initializes the ScheduleBuilder with the data of {@code scheduleToCopy}.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    public ScheduleBuilder(Schedule scheduleToCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        tutor \u003d scheduleToCopy.getTutor();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        startTime \u003d scheduleToCopy.getStartTime();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        endTime \u003d scheduleToCopy.getEndTime();","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"     * Sets the {@code Person} of the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"dishenggg"},"content":"    public ScheduleBuilder withTutor(Person tutor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"dishenggg"},"content":"        this.tutor \u003d tutor;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"dishenggg"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"     * Sets the {@code StartTime} of the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"dishenggg"},"content":"    public ScheduleBuilder withStartTime(LocalDateTime startTime) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"dishenggg"},"content":"        this.startTime \u003d new StartTime(startTime);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"dishenggg"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"dishenggg"},"content":"     * Sets the {@code EndTime} of the {@code Schedule} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"dishenggg"},"content":"    public ScheduleBuilder withEndTime(LocalDateTime endTime) {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"dishenggg"},"content":"        this.endTime \u003d new EndTime(endTime);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"dishenggg"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"dishenggg"},"content":"    public Schedule build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"dishenggg"},"content":"        return new Schedule(tutor, startTime, endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"dishenggg":66}},{"path":"src/test/java/seedu/address/testutil/ScheduleUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"dishenggg"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.EndTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.StartTime;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":" * A utility class for Schedule.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"public class ScheduleUtil {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"    private static final DateTimeFormatter startTimeFormatter \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"            DateTimeFormatter.ofPattern(StartTime.DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"    private static final DateTimeFormatter endTimeFormatter \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"            DateTimeFormatter.ofPattern(EndTime.DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"     * Returns an add schedule command string for adding the {@code schedule}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"dishenggg"},"content":"    public static String getAddScheduleCommand(Schedule schedule) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"        return AddScheduleCommand.COMMAND_WORD + \" \" + getScheduleDetails(schedule);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"dishenggg"},"content":"     * Returns the part of command string for the given {@code schedule}\u0027s details.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"dishenggg"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"dishenggg"},"content":"    public static String getScheduleDetails(Schedule schedule) {","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"dishenggg"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"dishenggg"},"content":"        sb.append(INDEX_FIRST_PERSON.getOneBased() + \" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"dishenggg"},"content":"        sb.append(PREFIX_START_TIME + schedule.getStartTime().value.format(startTimeFormatter) + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"dishenggg"},"content":"        sb.append(PREFIX_END_TIME + schedule.getEndTime().value.format(endTimeFormatter) + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"dishenggg"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"dishenggg":40}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"ruishanteo"},"content":"    public static final Index INDEX_FIRST_SCHEDULE \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ruishanteo"},"content":"    public static final Index INDEX_SECOND_SCHEDULE \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ruishanteo"},"content":"    public static final Index INDEX_THIRD_SCHEDULE \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"ruishanteo":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"ruishanteo"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"ruishanteo"},"content":"            .withPhone(\"94351253\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"ruishanteo"},"content":"            .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"saltedfishxx"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, BOB));","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ruishanteo":12,"saltedfishxx":1,"-":54}},{"path":"src/test/java/seedu/address/testutil/TypicalSchedules.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dishenggg"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"dishenggg"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"dishenggg"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"dishenggg"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"dishenggg"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"saltedfishxx"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"dishenggg"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"dishenggg"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"dishenggg"},"content":" * A utility class containing a list of {@code Schedule} objects to be used in tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"dishenggg"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"dishenggg"},"content":"// Schedule objects are named in the format: SCHEDULE_{TUTOR}_{DAY}_{MONTH}","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"dishenggg"},"content":"public class TypicalSchedules {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"dishenggg"},"content":"    public static final Schedule SCHEDULE_ALICE_FIRST_JAN \u003d new ScheduleBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"dishenggg"},"content":"            .withTutor(TypicalPersons.ALICE)","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"dishenggg"},"content":"            .withStartTime(LocalDateTime.of(2023, 1, 1, 9, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"dishenggg"},"content":"            .withEndTime(LocalDateTime.of(2023, 1, 1, 11, 0, 0))","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"dishenggg"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"dishenggg"},"content":"    public static final Schedule SCHEDULE_BOB_SECOND_JAN \u003d new ScheduleBuilder()","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"dishenggg"},"content":"            .withTutor(TypicalPersons.BOB)","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"mfjkri"},"content":"            .withStartTime(LocalDateTime.of(2023, 1, 2, 20, 0, 0))","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"mfjkri"},"content":"            .withEndTime(LocalDateTime.of(2023, 1, 2, 22, 0, 0))","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"dishenggg"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"dishenggg"},"content":"    private TypicalSchedules() {} // prevents instantiation","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"dishenggg"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"saltedfishxx"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"saltedfishxx"},"content":"     * Returns an {@code AddressBook} with all the typical schedules and associated persons.","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"saltedfishxx"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"saltedfishxx"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"saltedfishxx"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"saltedfishxx"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"saltedfishxx"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"saltedfishxx"},"content":"        for (Schedule schedule : getTypicalSchedules()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"saltedfishxx"},"content":"            ab.addSchedule(schedule);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"saltedfishxx"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"saltedfishxx"},"content":"        return ab;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"saltedfishxx"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"saltedfishxx"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"dishenggg"},"content":"    public static List\u003cSchedule\u003e getTypicalSchedules() {","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"dishenggg"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SCHEDULE_ALICE_FIRST_JAN, SCHEDULE_BOB_SECOND_JAN));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"dishenggg"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"dishenggg"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"saltedfishxx":16,"dishenggg":30,"mfjkri":2}}]

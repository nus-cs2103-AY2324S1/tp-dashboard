[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W13-3/tp/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-W13-3/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"# Tran$act","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"Tran$act is a simple and easy to use transaction recorder and tracker built in Java and based on the **[Address Book Project](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"## Features","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"- CLI Input","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"- Overview Dashboard","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"- Transaction Recording","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"- Exporting data to other file formats","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"- And much more...","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"For the detailed documentation of this project, see the **[Tran$act Product Website](https://ay2324s1-cs2103t-w13-3.github.io/tp/)**.","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"cxo05":14,"-":5,"Bombbird2001":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"mainClassName \u003d \u0027transact.Main\u0027","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    String jUnitVersion \u003d \u00275.10.0\u0027","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"AlainS87"},"content":"    implementation group: \u0027com.opencsv\u0027, name: \u0027opencsv\u0027, version: \u00275.4\u0027","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"    // Year Month Picker","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"    implementation group: \u0027se.alipsa\u0027, name: \u0027fx-yearmonth-picker\u0027, version: \u00271.1.0\u0027","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"    archiveFileName \u003d \u0027tran$act.jar\u0027","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AlainS87":1,"cxo05":7,"-":71}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"180\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-07-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cxo05":1,"-":433}},{"path":"config/checkstyle/suppressions.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE suppressions PUBLIC","lastModifiedDate":"2017-08-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/suppressions_1_2.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003csuppressions\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"  \u003csuppress checks\u003d\"SeparatorWrap\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/suppressions\u003e","lastModifiedDate":"2017-08-20"}],"authorContributionMap":{"cxo05":1,"-":10}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"### Su Shenyi","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"\u003cimg src\u003d\"images/alains87.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"[[github](https://github.com/AlainS87)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"[[portfolio](team/alains87.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"* Role: Developer Documentation","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"### Mikhil Anand","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"\u003cimg src\u003d\"images/sasmik23.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"[[github](http://github.com/sasmik23)]","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"[[portfolio](team/sasmik23.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"- Role: Developer","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"- Responsibilities: User Documentation","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"### Wong Joon Hung","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"\u003cimg src\u003d\"images/petrichorprecipice.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"[[github](https://github.com/PetrichorPrecipice)]","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"[[portfolio](team/petrichorprecipice.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"- Role: Testing","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"### Ku Shang Yi","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"\u003cimg src\u003d\"images/bombbird2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"[[github](http://github.com/bombbird2001)] [[portfolio](team/bombbird2001.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"- Role: Team Lead, Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"- Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"### Xavier Oh","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"\u003cimg src\u003d\"images/cxo05.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"[[github](http://github.com/cxo05)]","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"[[portfolio](team/cxo05.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"- Role: Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"- Responsibilities: UI","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"AlainS87":5,"cxo05":6,"Sasmik23":6,"-":29,"PetrichorPrecipice":5,"Bombbird2001":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"- Table of Contents","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"- **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"- **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, _if the current file is outdated_.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"- **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"- **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"- **`test`**: Runs all tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"  - `./gradlew test` — Runs all tests","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"  - `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"- Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"- Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"  - SEVERITY is either ERROR or WARN.","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"  - FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"  - LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"- Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/MainApp.java).","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"cxo05":18,"-":59,"Bombbird2001":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"- Table of Contents","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delstaff 1`. Note that both the address book and transaction book are saved.","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/ui/Ui.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/logic/Logic.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delstaff 1\")` API call as an example.","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"![Interactions Inside the Logic Component for the `delstaff 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteStaffCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteStaffCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteStaffCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddStaffCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddStaffCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"- All `XYZCommandParser` classes (e.g., `AddStaffCommandParser`, `DeleteStaffCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/model/Model.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-W13-3/tp/tree/master/src/main/java/transact/storage/Storage.java)","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"Classes used by multiple components are in the `transact.commons` package.","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"cxo05"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":233,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":234,"author":{"gitId":"cxo05"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-10-06"},{"lineNumber":235,"author":{"gitId":"cxo05"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"cxo05"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"cxo05"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-06"},{"lineNumber":240,"author":{"gitId":"cxo05"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"cxo05"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":253,"author":{"gitId":"cxo05"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":254,"author":{"gitId":"cxo05"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":255,"author":{"gitId":"cxo05"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":256,"author":{"gitId":"cxo05"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-06"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"AlainS87"},"content":"# Developer Guide","lastModifiedDate":"2023-10-07"},{"lineNumber":263,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":264,"author":{"gitId":"AlainS87"},"content":"## Introduction","lastModifiedDate":"2023-10-07"},{"lineNumber":265,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":266,"author":{"gitId":"AlainS87"},"content":"Welcome to the development guide for **Tran$act**, a command-line interface (CLI) application designed to help accountants in small businesses efficiently manage their financial transactions and related data. This guide provides detailed instructions for developers on how to build and maintain Tran$act, ensuring it meets the needs and expectations of our target users.","lastModifiedDate":"2023-10-07"},{"lineNumber":267,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":268,"author":{"gitId":"AlainS87"},"content":"## Target User Profile","lastModifiedDate":"2023-10-07"},{"lineNumber":269,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":270,"author":{"gitId":"AlainS87"},"content":"Tran$act is specifically tailored for accountants and finance professionals in small businesses who have the following characteristics:","lastModifiedDate":"2023-10-07"},{"lineNumber":271,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":272,"author":{"gitId":"AlainS87"},"content":"- **Need to manage a significant number of transactions**: Tran$act is designed to handle a high volume of financial transactions efficiently.","lastModifiedDate":"2023-10-07"},{"lineNumber":273,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":274,"author":{"gitId":"AlainS87"},"content":"- **Fast typists**: Users are expected to be proficient in typing, as the application primarily relies on keyboard inputs for data entry and interaction.","lastModifiedDate":"2023-10-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"AlainS87"},"content":"- **Prefer CLI interactions**: Our users prefer command-line interactions over graphical user interfaces, as it allows for quicker data entry and navigation.","lastModifiedDate":"2023-10-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"AlainS87"},"content":"- **Reasonably comfortable with CLI apps**: Users should have a basic understanding of using command-line applications.","lastModifiedDate":"2023-10-07"},{"lineNumber":279,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":280,"author":{"gitId":"PetrichorPrecipice"},"content":"- **Required to produce financial reports**: Tran$act can automatically produce financial reports given the transactions that have been entered.","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"PetrichorPrecipice"},"content":"- ","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"AlainS87"},"content":"## User Stories","lastModifiedDate":"2023-10-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| Priority                 | As a …​                                           | I want to …​                                               | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"cxo05"},"content":"| ------------------------ | ------------------------------------------------- | ---------------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2023-10-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *`                  | new user                                          | see usage instructions                                     | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"| `* * *`                  | user                                              | add a new person                                           |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `* * *`                  | user                                              | delete a person                                            | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* * *`                  | user                                              | find a person by name                                      | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* *`                    | user                                              | hide private contact details                               | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `*`                      | user with many persons in the address book        | sort persons by name                                       | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"cxo05"},"content":"| Transaction Recording    |","lastModifiedDate":"2023-10-06"},{"lineNumber":292,"author":{"gitId":"cxo05"},"content":"| `* * *`                  | user                                  | add a new transaction                                      |                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":293,"author":{"gitId":"cxo05"},"content":"| `* * *`                  | user                                  | remove a transaction                                       |                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"cxo05"},"content":"| `* * *`                  | user                                  | view all transactions                                      |                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":295,"author":{"gitId":"PetrichorPrecipice"},"content":"| `* *`                    | user                                  | edit transactions through the software                     |                                                                        |","lastModifiedDate":"2023-10-09"},{"lineNumber":296,"author":{"gitId":"PetrichorPrecipice"},"content":"| `* *`                    | user                                  | edit transactions without opening the software             |                                                                        |","lastModifiedDate":"2023-10-09"},{"lineNumber":297,"author":{"gitId":"cxo05"},"content":"| Financial Reporting      |","lastModifiedDate":"2023-10-06"},{"lineNumber":298,"author":{"gitId":"cxo05"},"content":"| `*`                      | user who needs to analyze transactions | have a variety of financial reports                        |                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":299,"author":{"gitId":"cxo05"},"content":"| `*`                      | user who needs to share data with others | generate reports downloadable in common formats (PDF, CSV) |                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":300,"author":{"gitId":"cxo05"},"content":"| `*`                      | user                                  | restore from a backup                                      | undo large changes                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":301,"author":{"gitId":"cxo05"},"content":"| Data Security and Backup |","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"cxo05"},"content":"| `*`                      | user who needs to keep sensitive data confidental | encrypt the data                                           | ensure the security and privacy of financial data                      |","lastModifiedDate":"2023-10-06"},{"lineNumber":303,"author":{"gitId":"cxo05"},"content":"| `*`                      | user who does not have reliable hardware | have automated backups                                     | prevent unnessary data loss                                            |","lastModifiedDate":"2023-10-06"},{"lineNumber":304,"author":{"gitId":"cxo05"},"content":"| `*`                      | user                                  | restore from a backup                                      | undo large changes                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":305,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":306,"author":{"gitId":"AlainS87"},"content":"### Transaction Recording","lastModifiedDate":"2023-10-07"},{"lineNumber":307,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":308,"author":{"gitId":"AlainS87"},"content":"1. **Adding a Transaction**","lastModifiedDate":"2023-10-07"},{"lineNumber":309,"author":{"gitId":"AlainS87"},"content":"    - As an accountant, I want to add a new financial transaction quickly.","lastModifiedDate":"2023-10-07"},{"lineNumber":310,"author":{"gitId":"cxo05"},"content":"    - I should be able to specify the amount, type (revenue or expense), date, and optionally, the associated person for the transaction.","lastModifiedDate":"2023-10-16"},{"lineNumber":311,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":312,"author":{"gitId":"AlainS87"},"content":"2. **Removing a Transaction**","lastModifiedDate":"2023-10-07"},{"lineNumber":313,"author":{"gitId":"AlainS87"},"content":"    - As an accountant, I want to delete a transaction when necessary.","lastModifiedDate":"2023-10-07"},{"lineNumber":314,"author":{"gitId":"AlainS87"},"content":"    - I should be able to remove a transaction from the records to correct mistakes or manage data.","lastModifiedDate":"2023-10-07"},{"lineNumber":315,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":316,"author":{"gitId":"AlainS87"},"content":"3. **Viewing All Transactions**","lastModifiedDate":"2023-10-07"},{"lineNumber":317,"author":{"gitId":"AlainS87"},"content":"    - As an accountant, I want to see a list of all recorded transactions for reference.","lastModifiedDate":"2023-10-07"},{"lineNumber":318,"author":{"gitId":"AlainS87"},"content":"    - This list will provide an overview of all financial activities in one place.","lastModifiedDate":"2023-10-07"},{"lineNumber":319,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":320,"author":{"gitId":"AlainS87"},"content":"4. **Editing a Transaction**","lastModifiedDate":"2023-10-07"},{"lineNumber":321,"author":{"gitId":"AlainS87"},"content":"    - As an accountant, I need the ability to edit transaction details.","lastModifiedDate":"2023-10-07"},{"lineNumber":322,"author":{"gitId":"AlainS87"},"content":"    - I should be able to make corrections or updates to transaction records as needed.","lastModifiedDate":"2023-10-07"},{"lineNumber":323,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":324,"author":{"gitId":"AlainS87"},"content":"5. **Restoring Deleted Transactions**","lastModifiedDate":"2023-10-07"},{"lineNumber":325,"author":{"gitId":"AlainS87"},"content":"    - As an accountant, I want a safety net for accidental deletions.","lastModifiedDate":"2023-10-07"},{"lineNumber":326,"author":{"gitId":"AlainS87"},"content":"    - I should be able to retrieve transactions I have mistakenly deleted from a \"bin\" or archive.","lastModifiedDate":"2023-10-07"},{"lineNumber":327,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":328,"author":{"gitId":"AlainS87"},"content":"6. **Fast Data Entry**","lastModifiedDate":"2023-10-07"},{"lineNumber":329,"author":{"gitId":"AlainS87"},"content":"    - As a fast typist, I want shortcuts and efficient data entry methods.","lastModifiedDate":"2023-10-07"},{"lineNumber":330,"author":{"gitId":"AlainS87"},"content":"    - This will enable me to record transactions, including income and expenses, quickly via the CLI.","lastModifiedDate":"2023-10-07"},{"lineNumber":331,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":332,"author":{"gitId":"AlainS87"},"content":"### Dashboard Overview","lastModifiedDate":"2023-10-07"},{"lineNumber":333,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":334,"author":{"gitId":"AlainS87"},"content":"1. **Dashboard Display**","lastModifiedDate":"2023-10-07"},{"lineNumber":335,"author":{"gitId":"AlainS87"},"content":"    - As an accountant, I want to see a clear and concise dashboard upon opening the app.","lastModifiedDate":"2023-10-07"},{"lineNumber":336,"author":{"gitId":"AlainS87"},"content":"    - The dashboard should display total income, total expenses, net profit for the selected period (usually monthly), and a breakdown of expenses by sector to improve cost efficiency.","lastModifiedDate":"2023-10-07"},{"lineNumber":337,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":338,"author":{"gitId":"AlainS87"},"content":"### Financial Reporting","lastModifiedDate":"2023-10-07"},{"lineNumber":339,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":340,"author":{"gitId":"AlainS87"},"content":"1. **Access to Financial Reports**","lastModifiedDate":"2023-10-07"},{"lineNumber":341,"author":{"gitId":"AlainS87"},"content":"    - As an accountant who analyzes transactions, I need access to various financial reports.","lastModifiedDate":"2023-10-07"},{"lineNumber":342,"author":{"gitId":"AlainS87"},"content":"    - I should be able to generate income statements, balance sheets, and cash flow statements.","lastModifiedDate":"2023-10-07"},{"lineNumber":343,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":344,"author":{"gitId":"AlainS87"},"content":"2. **Customizable Reports**","lastModifiedDate":"2023-10-07"},{"lineNumber":345,"author":{"gitId":"AlainS87"},"content":"    - As an accountant who shares data with stakeholders, I want to generate customizable reports.","lastModifiedDate":"2023-10-07"},{"lineNumber":346,"author":{"gitId":"AlainS87"},"content":"    - I should be able to create reports in common formats (PDF, CSV, Excel) to share with others.","lastModifiedDate":"2023-10-07"},{"lineNumber":347,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":348,"author":{"gitId":"AlainS87"},"content":"### Data Security and Backup","lastModifiedDate":"2023-10-07"},{"lineNumber":349,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":350,"author":{"gitId":"AlainS87"},"content":"1. **Data Security**","lastModifiedDate":"2023-10-07"},{"lineNumber":351,"author":{"gitId":"AlainS87"},"content":"    - As a user who values data privacy, I expect the app to secure financial data.","lastModifiedDate":"2023-10-07"},{"lineNumber":352,"author":{"gitId":"AlainS87"},"content":"    - The app should implement security measures, potentially including encryption, to protect sensitive information.","lastModifiedDate":"2023-10-07"},{"lineNumber":353,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":354,"author":{"gitId":"AlainS87"},"content":"2. **Automated Backups**","lastModifiedDate":"2023-10-07"},{"lineNumber":355,"author":{"gitId":"AlainS87"},"content":"    - As a user concerned about data loss, I want the option for automated backups.","lastModifiedDate":"2023-10-07"},{"lineNumber":356,"author":{"gitId":"AlainS87"},"content":"    - The app should allow me to set up automated backups to prevent data loss due to hardware issues.","lastModifiedDate":"2023-10-07"},{"lineNumber":357,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":358,"author":{"gitId":"AlainS87"},"content":"3. **Undo and Restore**","lastModifiedDate":"2023-10-07"},{"lineNumber":359,"author":{"gitId":"AlainS87"},"content":"    - As a user prone to mistakes, I need the ability to undo actions or restore from backups.","lastModifiedDate":"2023-10-07"},{"lineNumber":360,"author":{"gitId":"AlainS87"},"content":"    - This feature will help me recover from errors or data corruption.","lastModifiedDate":"2023-10-07"},{"lineNumber":361,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":362,"author":{"gitId":"AlainS87"},"content":"### Address Book","lastModifiedDate":"2023-10-07"},{"lineNumber":363,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":364,"author":{"gitId":"AlainS87"},"content":"1. **Importing Staff List**","lastModifiedDate":"2023-10-07"},{"lineNumber":365,"author":{"gitId":"AlainS87"},"content":"    - As a user who needs efficiency, I want to import a staff list into the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":366,"author":{"gitId":"AlainS87"},"content":"    - This will help me quickly access contact information for employees and associates.","lastModifiedDate":"2023-10-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":368,"author":{"gitId":"AlainS87"},"content":"2. **Adding and Editing People**","lastModifiedDate":"2023-10-07"},{"lineNumber":369,"author":{"gitId":"AlainS87"},"content":"    - As a user who manages relationships, I need to add, edit, and remove people from the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":370,"author":{"gitId":"AlainS87"},"content":"    - This allows me to keep the address book up to date and accurate.","lastModifiedDate":"2023-10-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":372,"author":{"gitId":"AlainS87"},"content":"3. **Viewing Address Book**","lastModifiedDate":"2023-10-07"},{"lineNumber":373,"author":{"gitId":"AlainS87"},"content":"    - As a user who relies on contact information, I want to view the entire address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":374,"author":{"gitId":"AlainS87"},"content":"    - This provides easy access to contact details for individuals in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":376,"author":{"gitId":"AlainS87"},"content":"## Use Cases","lastModifiedDate":"2023-10-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":378,"author":{"gitId":"AlainS87"},"content":"### Use Case 1: Adding a Transaction","lastModifiedDate":"2023-10-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":380,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":382,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":384,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":385,"author":{"gitId":"cxo05"},"content":"1. The accountant specifies the transaction details, including the amount, type (revenue or expense), date, and optionally, the associated person.","lastModifiedDate":"2023-10-16"},{"lineNumber":386,"author":{"gitId":"AlainS87"},"content":"2. The system validates the input data.","lastModifiedDate":"2023-10-07"},{"lineNumber":387,"author":{"gitId":"AlainS87"},"content":"3. The system records the transaction in the database.","lastModifiedDate":"2023-10-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":389,"author":{"gitId":"AlainS87"},"content":"**Extensions:**","lastModifiedDate":"2023-10-07"},{"lineNumber":390,"author":{"gitId":"AlainS87"},"content":"- If the input data is invalid, the system displays an error message.","lastModifiedDate":"2023-10-07"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":392,"author":{"gitId":"AlainS87"},"content":"### Use Case 2: Removing a Transaction","lastModifiedDate":"2023-10-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":394,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":396,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":398,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":399,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects a transaction to remove from the records.","lastModifiedDate":"2023-10-07"},{"lineNumber":400,"author":{"gitId":"AlainS87"},"content":"2. The system confirms the removal with the accountant.","lastModifiedDate":"2023-10-07"},{"lineNumber":401,"author":{"gitId":"AlainS87"},"content":"3. The system removes the transaction from the database.","lastModifiedDate":"2023-10-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":403,"author":{"gitId":"AlainS87"},"content":"### Use Case 3: Viewing All Transactions","lastModifiedDate":"2023-10-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":405,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":407,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":409,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":410,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects the option to view all transactions.","lastModifiedDate":"2023-10-07"},{"lineNumber":411,"author":{"gitId":"AlainS87"},"content":"2. The system retrieves and displays a list of all recorded transactions.","lastModifiedDate":"2023-10-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":413,"author":{"gitId":"AlainS87"},"content":"### Use Case 4: Editing a Transaction","lastModifiedDate":"2023-10-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":415,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":417,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":419,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":420,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects a transaction to edit.","lastModifiedDate":"2023-10-07"},{"lineNumber":421,"author":{"gitId":"AlainS87"},"content":"2. The system allows the accountant to modify the transaction details.","lastModifiedDate":"2023-10-07"},{"lineNumber":422,"author":{"gitId":"AlainS87"},"content":"3. The system saves the updated transaction in the database.","lastModifiedDate":"2023-10-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":424,"author":{"gitId":"AlainS87"},"content":"**Extensions:**","lastModifiedDate":"2023-10-07"},{"lineNumber":425,"author":{"gitId":"AlainS87"},"content":"- If the input data is invalid, the system displays an error message.","lastModifiedDate":"2023-10-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":427,"author":{"gitId":"AlainS87"},"content":"### Use Case 5: Restoring Deleted Transactions","lastModifiedDate":"2023-10-07"},{"lineNumber":428,"author":{"gitId":"AlainS87"},"content":"**Value proposition**: Quickly add company inflow and outflow via the CLI. Easily keep track of company profits and expenses associated with staff and visualize them.","lastModifiedDate":"2023-10-07"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":435,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects the option to restore deleted transactions.","lastModifiedDate":"2023-10-07"},{"lineNumber":436,"author":{"gitId":"AlainS87"},"content":"2. The system presents a list of previously deleted transactions.","lastModifiedDate":"2023-10-07"},{"lineNumber":437,"author":{"gitId":"AlainS87"},"content":"3. The accountant selects a transaction to restore.","lastModifiedDate":"2023-10-07"},{"lineNumber":438,"author":{"gitId":"AlainS87"},"content":"4. The system restores the selected transaction to the active records.","lastModifiedDate":"2023-10-07"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"AlainS87"},"content":"### Use Case 6: Dashboard Display","lastModifiedDate":"2023-10-07"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":447,"author":{"gitId":"AlainS87"},"content":"1. Upon opening the app, the system displays a dashboard.","lastModifiedDate":"2023-10-07"},{"lineNumber":448,"author":{"gitId":"AlainS87"},"content":"2. The dashboard shows total income, total expenses, net profit for the selected period (usually monthly), and a breakdown of expenses by sector.","lastModifiedDate":"2023-10-07"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"AlainS87"},"content":"### Use Case 7: Access to Financial Reports","lastModifiedDate":"2023-10-25"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":457,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects the option to access financial reports.","lastModifiedDate":"2023-10-07"},{"lineNumber":458,"author":{"gitId":"AlainS87"},"content":"2. The system generates and displays financial reports, including income statements, balance sheets, and cash flow statements.","lastModifiedDate":"2023-10-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"PetrichorPrecipice"},"content":"### Use Case 8: Customizable Reports","lastModifiedDate":"2023-10-18"},{"lineNumber":462,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":463,"author":{"gitId":"PetrichorPrecipice"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-18"},{"lineNumber":464,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":465,"author":{"gitId":"PetrichorPrecipice"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-18"},{"lineNumber":466,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":467,"author":{"gitId":"PetrichorPrecipice"},"content":"**Description:**","lastModifiedDate":"2023-10-18"},{"lineNumber":468,"author":{"gitId":"PetrichorPrecipice"},"content":"1. The accountant selects the option to generate customizable reports.","lastModifiedDate":"2023-10-18"},{"lineNumber":469,"author":{"gitId":"PetrichorPrecipice"},"content":"2. The system provides tools for the accountant to customize the report parameters.","lastModifiedDate":"2023-10-18"},{"lineNumber":470,"author":{"gitId":"PetrichorPrecipice"},"content":"3. The system generates and displays the customized report in common formats (PDF, CSV, Excel).","lastModifiedDate":"2023-10-18"},{"lineNumber":471,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":472,"author":{"gitId":"AlainS87"},"content":"### Use Case 9: Deleting All Transactions","lastModifiedDate":"2023-10-25"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-07"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-07"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-07"},{"lineNumber":479,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects the option to delete all transactions.","lastModifiedDate":"2023-10-25"},{"lineNumber":480,"author":{"gitId":"AlainS87"},"content":"2. The system permanently deletes all recorded transactions from the database.","lastModifiedDate":"2023-10-25"},{"lineNumber":481,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":482,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":483,"author":{"gitId":"AlainS87"},"content":"### Use Case 10: Adding a Staff Member to Address Book","lastModifiedDate":"2023-10-25"},{"lineNumber":484,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":485,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-25"},{"lineNumber":486,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":487,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-25"},{"lineNumber":488,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":489,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-25"},{"lineNumber":490,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects the option to add a new staff member to the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":491,"author":{"gitId":"AlainS87"},"content":"2. The system presents a form for entering staff member details, such as name, contact information, and role.","lastModifiedDate":"2023-10-25"},{"lineNumber":492,"author":{"gitId":"AlainS87"},"content":"3. The accountant enters the required information.","lastModifiedDate":"2023-10-25"},{"lineNumber":493,"author":{"gitId":"AlainS87"},"content":"4. The system validates the input data.","lastModifiedDate":"2023-10-25"},{"lineNumber":494,"author":{"gitId":"AlainS87"},"content":"5. The system adds the new staff member to the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":495,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":496,"author":{"gitId":"AlainS87"},"content":"**Extensions:**","lastModifiedDate":"2023-10-25"},{"lineNumber":497,"author":{"gitId":"AlainS87"},"content":"- If the input data is invalid or incomplete, the system displays an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":498,"author":{"gitId":"AlainS87"},"content":"- The system may provide an option to associate the new staff member with transactions during this process.","lastModifiedDate":"2023-10-25"},{"lineNumber":499,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":500,"author":{"gitId":"AlainS87"},"content":"### Use Case 11: Removing a Staff Member from Address Book","lastModifiedDate":"2023-10-25"},{"lineNumber":501,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":502,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-25"},{"lineNumber":503,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":504,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-25"},{"lineNumber":505,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":506,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-25"},{"lineNumber":507,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects a staff member from the address book to remove.","lastModifiedDate":"2023-10-25"},{"lineNumber":508,"author":{"gitId":"AlainS87"},"content":"2. The system confirms the removal with the accountant.","lastModifiedDate":"2023-10-25"},{"lineNumber":509,"author":{"gitId":"AlainS87"},"content":"3. The accountant confirms the action.","lastModifiedDate":"2023-10-25"},{"lineNumber":510,"author":{"gitId":"AlainS87"},"content":"4. The system removes the selected staff member from the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":511,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":512,"author":{"gitId":"AlainS87"},"content":"**Extensions:**","lastModifiedDate":"2023-10-25"},{"lineNumber":513,"author":{"gitId":"AlainS87"},"content":"- If the accountant cancels the operation at the confirmation step, no staff members are removed.","lastModifiedDate":"2023-10-25"},{"lineNumber":514,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":515,"author":{"gitId":"AlainS87"},"content":"### Use Case 12: Editing Staff Member Information in Address Book","lastModifiedDate":"2023-10-25"},{"lineNumber":516,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":517,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-25"},{"lineNumber":518,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":519,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-25"},{"lineNumber":520,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":521,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-25"},{"lineNumber":522,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects a staff member from the address book to edit.","lastModifiedDate":"2023-10-25"},{"lineNumber":523,"author":{"gitId":"AlainS87"},"content":"2. The system presents a form populated with the staff member\u0027s existing information.","lastModifiedDate":"2023-10-25"},{"lineNumber":524,"author":{"gitId":"AlainS87"},"content":"3. The accountant modifies the staff member\u0027s details as needed.","lastModifiedDate":"2023-10-25"},{"lineNumber":525,"author":{"gitId":"AlainS87"},"content":"4. The system validates the updated information.","lastModifiedDate":"2023-10-25"},{"lineNumber":526,"author":{"gitId":"AlainS87"},"content":"5. The system saves the updated staff member information in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":527,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":528,"author":{"gitId":"AlainS87"},"content":"**Extensions:**","lastModifiedDate":"2023-10-25"},{"lineNumber":529,"author":{"gitId":"AlainS87"},"content":"- If the input data is invalid or incomplete, the system displays an error message.","lastModifiedDate":"2023-10-25"},{"lineNumber":530,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":531,"author":{"gitId":"AlainS87"},"content":"### Use Case 13: Deleting All Address Book Contacts","lastModifiedDate":"2023-10-25"},{"lineNumber":532,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":533,"author":{"gitId":"AlainS87"},"content":"**Actor:** Accountant","lastModifiedDate":"2023-10-25"},{"lineNumber":534,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":535,"author":{"gitId":"AlainS87"},"content":"**Preconditions:** The accountant is logged into the Tran$act application.","lastModifiedDate":"2023-10-25"},{"lineNumber":536,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":537,"author":{"gitId":"AlainS87"},"content":"**Description:**","lastModifiedDate":"2023-10-25"},{"lineNumber":538,"author":{"gitId":"AlainS87"},"content":"1. The accountant selects the option to delete all address book contacts.","lastModifiedDate":"2023-10-25"},{"lineNumber":539,"author":{"gitId":"AlainS87"},"content":"2. The system permanently deletes all contacts from the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":540,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"AlainS87"},"content":"## Non-functional Requirements (NFR)","lastModifiedDate":"2023-10-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"AlainS87"},"content":"- Tran$act should support the storage of at least 1000 transactions per month to accommodate the needs of small businesses.","lastModifiedDate":"2023-10-07"},{"lineNumber":545,"author":{"gitId":"AlainS87"},"content":"-  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-10-07"},{"lineNumber":546,"author":{"gitId":"AlainS87"},"content":"-  Should be able to hold up to 1000 transactions without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-07"},{"lineNumber":547,"author":{"gitId":"AlainS87"},"content":"-  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-07"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"AlainS87"},"content":"## Glossary","lastModifiedDate":"2023-10-07"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"PetrichorPrecipice"},"content":"- **Accountant**: A professional who is responsible for managing a company/institution\u0027s financial records. ","lastModifiedDate":"2023-10-18"},{"lineNumber":552,"author":{"gitId":"PetrichorPrecipice"},"content":"- **Expense**: Costs incurred, including staff salaries and product costs.","lastModifiedDate":"2023-10-18"},{"lineNumber":553,"author":{"gitId":"PetrichorPrecipice"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2023-10-18"},{"lineNumber":554,"author":{"gitId":"PetrichorPrecipice"},"content":"- **Revenue**: Money received, such as sales revenue.","lastModifiedDate":"2023-10-18"},{"lineNumber":555,"author":{"gitId":"AlainS87"},"content":"- **Transaction**: An exchange of money, which includes buying and selling activities.","lastModifiedDate":"2023-10-07"},{"lineNumber":556,"author":{"gitId":"AlainS87"},"content":"- **Transactor/Party**: The person or entity that carried out the transaction or is related to it.","lastModifiedDate":"2023-10-07"},{"lineNumber":557,"author":{"gitId":"PetrichorPrecipice"},"content":"- **Transactor/Party**: Person or group that carried out the transaction or is related to the transaction.","lastModifiedDate":"2023-10-18"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-06"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"Bombbird2001"},"content":"   1. Test case: `delstaff 1`\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":594,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AlainS87":210,"cxo05":65,"-":299,"Bombbird2001":16,"PetrichorPrecipice":20}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"- Table of Contents","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"   1. Run the `transact.Main` and try a few commands.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"   - [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"   - [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"   - [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"-":47}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"- Table of Contents","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"- **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"  - To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"  - To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"- **Method 2: Using Gradle**","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"  - Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"1. _Unit tests_ targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"   e.g. `transact.commons.StringUtilTest`","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"1. _Integration tests_ that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"   e.g. `transact.storage.StorageManagerTest`","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"   e.g. `transact.logic.LogicManagerTest`","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":13,"-":23}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"# Tran$act User Guide","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"Welcome to **Tran$act**, your solution for effortless transaction recording and management.","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"Tran$act is a desktop application designed to cater the needs of startup or small scale","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"retailers looking for a cheap and efficient way to record daily transactions.","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"Here\u0027s an overview of our main features:","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"- **Transaction Management** : Add, Edit and Delete Income and Expenses","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"- **Comprehensive Dashboard**: An instant snapshot of your monthly financial situation","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"- **Data Integration**: Export/Import financial statements in CSV format","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"- **Staff List**: Add people to your staff list and link them to transactions","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"In addition, Tran$act\u0027s **Command Line Interface (CLI)** functionality will allow you to unlock","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"greater efficiency as you type faster, while still having the benefits of a Graphical User Interface (GUI)","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"This user guide will walk you through how to get started with our app and dive into our features","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"to help you streamline your accounting","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"2. Download the latest `transact.jar` from [here](https://github.com/AY2324S1-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Tran$act.","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"4. Double click `transact.jar` to start the app. The GUI below should appear in a few seconds.","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"   ![Ui](images/Ui-Overview.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"\u003e **❗If the above does not work, try this method:**","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"\u003e Open a command terminal, `cd` into the folder you put the jar file in, type `java -jar transact.jar` and press Enter to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"5. The app contains some sample data. Type `view s` to switch to the _staff list_.","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"\u003e Alternatively, you can click on the Staff List/Transaction tab at the top of the window to switch to the staff/transaction","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"\u003e view respectively.","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"6. Let\u0027s add a new staff member: type `addstaff n/Isaac p/92345678 e/isaac@gmail.com a/Blk 456, Pasir Ris St 32 t/marketing`","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"   and press Enter.","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"   This creates a new staff member called Isaac with the respective phone number, email and address, and adds an","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"   optional tag with the name \u0027marketing\u0027.","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"7. Let\u0027s add a new transaction: type `add ty/E d/Flyer printing amt/100 on/23/10/23 s/7` and press Enter.","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"   Notice that the app automatically switches to the _transaction list_, and your newly added transaction appears","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"   at the bottom of the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"\u003e **Wondering where the _s/7_ came from?**","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"\u003e In step 6, we added a new staff member Isaac, and the app automatically assigned them with an ID of 7, which you can","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"\u003e see in the staff list.","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"8. Congratulations, you have successfully added a staff member and a transaction! Refer to the [Features](#features)","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"   below for the full details of each command. Enjoy transacting with Tran$act!","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"AlainS87"},"content":"Tran$act offers a range of features designed to make transaction recording and management a seamless process. These features are tailored to the needs of accountants and finance professionals in small businesses, allowing for efficient data entry and financial reporting. Here\u0027s an overview of the key features:","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"AlainS87"},"content":"**1. Adding Transactions**","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"Tran$act allows you to add transactions with ease. Specify the transaction type, description, amount, date, and optionally, the associated person. The system validates your input data and records the transaction in the database.","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"AlainS87"},"content":"**2. Removing Transactions**","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"AlainS87"},"content":"Remove transactions from your records with ease. Simply select the transaction you wish to delete, and the system will confirm the removal before removing it from the database.","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"AlainS87"},"content":"**3. Viewing All Transactions**","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"AlainS87"},"content":"View a comprehensive list of all recorded transactions for reference. This list provides an overview of all financial activities in one place.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"AlainS87"},"content":"**4. Editing Transactions**","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"AlainS87"},"content":"Need to make corrections or updates to transaction records? Tran$act allows you to edit transaction details, ensuring your records are accurate.","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"**5. Filtering, Sorting Transactions**","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"Need to find transactions meeting a specific criteria, and order them? Tran$act allows you to filter transactions by date, amount and person, and sort transactions by date and amount.","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"AlainS87"},"content":"**5. Dashboard Display**","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"AlainS87"},"content":"Upon opening the app, you\u0027ll be greeted with a clear and concise dashboard. The dashboard displays essential financial information, including total income, total expenses, net profit for the selected period.","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"AlainS87"},"content":"**6. Export of transactions in csv format**","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"AlainS87"},"content":"For those who need to share data with stakeholders, Tran$act allows you to generate CSV report.","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"**7. Staff List**","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"Import staff lists for quick access to contact information. You can also add, edit, and remove people from the staff list as needed.","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"AlainS87"},"content":"---","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AlainS87"},"content":"## Usage","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"|                | **Notes about the command format**                                             |","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"| -------------- | ------------------------------------------------------------------------------ |","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"| [ ]            | Optional field                                                                 |","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"| \\\u003cdescription\u003e | Any string                                                                     |","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"| \\\u003ctype\u003e        | R (for Revenue), or E (for Expense)                                            |","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"| \\\u003camount\u003e      | Any non-negative number (Large numbers past ~16 digits are not well supported) |","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"| \\\u003cdate\u003e        | In dd/mm/yy format (Can be in the future)                                      |","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"| \\\u003cstaff ID\u003e    | ID of staff, an integer                                                        |","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"| \\\u003csort type\u003e   | asc (ascending) or desc (descending)                                           |","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"| ...            | Multiple entries allowed, separated by a space                                 |","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Sasmik23"},"content":"### Adding transaction : `add`","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"Format: `add ty/\u003ctype\u003e d/\u003cdescription\u003e amt/\u003camount\u003e on/\u003cdate\u003e [s/\u003cstaff ID\u003e]`","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"- `add ty/R d/Sold 1 Mug amt/10 on/10/10/23 s/1`","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"- `add ty/E d/Paid Manufacturer amt/100 on/10/11/23`","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Sasmik23"},"content":"Success/Fail Output:","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"- Added revenue","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"- Added expenditure","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"- Error: \u003cError Message\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"Sasmik23"},"content":"### Removing transaction: `del`","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"Sasmik23"},"content":"Format: `del \u003cid\u003e`","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Sasmik23"},"content":"Example:`del 1`","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Sasmik23"},"content":"Success/Fail Output:","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"- Removed transaction","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"- Error: \u003cError Message\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"### Sorting transactions : `sort`","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"Format: `sort [date/\u003csort type\u003e] [amt/\u003csort type\u003e]`","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"- At least one parameter must be present","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"- If both parameters are present, the order matters","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"  - Transactions will be sorted by the first parameter; if there are ties, the second parameter is used to tiebreak","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"Bombbird2001"},"content":"### Filtering transactions : `filter`","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Bombbird2001"},"content":"Format: `filter [ty/\u003ctype\u003e] [has/\u003ckeywords...\u003e] [after/\u003cdate\u003e] [before/\u003cdate\u003e] [more/\u003camount\u003e] [less/\u003camount\u003e] [by/\u003cstaff ID\u003e]`","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"cxo05"},"content":"- At least one parameter must be present","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"cxo05"},"content":"- If multiple parameters are present, only transactions matching all parameters will be shown","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"- The order of parameters does not matter","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"- `ty` will match transactions of the given type","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"  - `R` will match revenue","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"  - `E` will match expense","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"- `has` will match descriptions containing the keyword(s)","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"  - The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"  - The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"  - Only the description is searched.","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"  - Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"- `after` will match dates on or after the given date","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"- `before` will match dates on or before the given date","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"cxo05"},"content":"- `more` will match amounts greater than or equal to the given amount","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"- `less` will match amounts less than or equal to the given amount","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"- `by` will match transactions with the given staff ID","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Sasmik23"},"content":"### Viewing transactions : `view t`","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"Bombbird2001"},"content":"Switches UI to transaction tab, which shows the full list of transactions","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"Sasmik23"},"content":"Format: `view t` or `view transaction`","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Bombbird2001"},"content":"### Adding staff : `addstaff`","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"Bombbird2001"},"content":"Format: `addstaff n/\u003cname\u003e p/\u003cphone no\u003e e/\u003cemail\u003e a/\u003caddress\u003e [t/\u003ctag\u003e...]`","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Sasmik23"},"content":"Success/Fail Output:","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"Bombbird2001"},"content":"- Added staff","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Bombbird2001"},"content":"- Error: \u003cError Message\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Sasmik23"},"content":"### Removing staff: `delstaff`","lastModifiedDate":"2023-10-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"Sasmik23"},"content":"Format: `delstaff \u003cstaff id\u003e`","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Sasmik23"},"content":"Example: `delstaff 1`","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Sasmik23"},"content":"Success/Fail Output:","lastModifiedDate":"2023-10-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Bombbird2001"},"content":"- Removed staff","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"Bombbird2001"},"content":"- Error: \u003cError Message\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Bombbird2001"},"content":"### Locating staff by name: `find`","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Bombbird2001"},"content":"Format: `find keyword [keywords...]`","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"cxo05"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"cxo05"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"cxo05"},"content":"- Only the name is searched.","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"cxo05"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"cxo05"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"cxo05"},"content":"- `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"cxo05"},"content":"- `find alex david` returns `Alex Yeoh`, `David Li`","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Sasmik23"},"content":"### Viewing staff : `view s`","lastModifiedDate":"2023-10-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"Bombbird2001"},"content":"Switches UI to staff tab, which shows the full list of staff","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"Sasmik23"},"content":"Format: `view s` or `view staff`","lastModifiedDate":"2023-10-03"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"Bombbird2001"},"content":"### Viewing overview : `view o`","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Bombbird2001"},"content":"Switches UI to overview tab, which shows the overview of transactions","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"Bombbird2001"},"content":"Format: `view o` or `view overview`","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"Bombbird2001"},"content":"### Clearing the output : `clear`","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"Bombbird2001"},"content":"Clears the output of the previous command.","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"AlainS87"},"content":"### Clearing staff: `clearstaff`","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"AlainS87"},"content":"Format: `clearstaff`","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"cxo05"},"content":"Removes all entries in the staff list","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"AlainS87"},"content":"### Clearing transactions: `cleartransaction`","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"AlainS87"},"content":"Format: `cleartransaction`","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"cxo05"},"content":"Removes all entries in the transaction list","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"AlainS87"},"content":"### Edit: `edit`","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"cxo05"},"content":"Format: `edit \u003cID\u003e [ty/\u003cTYPE\u003e] [d/\u003cDESCRIPTION\u003e] [amt/\u003cAMOUNT\u003e] [on/\u003cDATE\u003e] [s/\u003cSTAFF_ID\u003e]...`","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"cxo05"},"content":"Edited Transaction: \u003cID\u003e; TransactionType: \u003cTYPE\u003e; Description: \u003cDESCRIPTION\u003e; Amount: \u003cAMOUNT\u003e; Date: \u003cDATE\u003e; StaffId: \u003cSTAFF_ID\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"AlainS87"},"content":"Error: \u003cInvalid command format! \u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"AlainS87"},"content":"**Note:** At least one field to edit must be provided in the command.","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"AlainS87"},"content":"Example:","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"AlainS87"},"content":"- `edit 1 ty/Income amt/5000`","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"cxo05"},"content":"- `edit 2 d/NewDescription on/03/10/23`","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"AlainS87"},"content":"In the success output, the edited transaction details will be displayed with the modified values. Existing values will be overwritten by the new input values.","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"AlainS87"},"content":"### Edit Staff: `editstaff`","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"AlainS87"},"content":"Format: `editstaff \u003cID\u003e [n/\u003cNAME\u003e] [p/\u003cPHONE\u003e] [e/\u003cEMAIL\u003e] [a/\u003cADDRESS\u003e] [t/\u003cTAG\u003e]...`","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"AlainS87"},"content":"Edited Staff: \u003cID\u003e; Name: \u003cNAME\u003e; Phone: \u003cPHONE\u003e; Email: \u003cEMAIL\u003e; Address: \u003cADDRESS\u003e; Tag: \u003cTAG\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"AlainS87"},"content":"Error: \u003cInvalid command format! \u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"AlainS87"},"content":"**Note:** At least one field to edit must be provided in the command. The ID must be a non-negative integer.","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"AlainS87"},"content":"Example:","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"AlainS87"},"content":"- `editstaff 1 p/91234567 e/johndoe@example.com`","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"AlainS87"},"content":"- `editstaff 2 n/NewName t/Manager`","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"AlainS87"},"content":"### Help: `help`","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"AlainS87"},"content":"Format: `help`","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"cxo05"},"content":"Opens your browser to show the user guide.","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"Bombbird2001"},"content":"Tran$act\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":298,"author":{"gitId":"PetrichorPrecipice"},"content":"## Navigating the GUI","lastModifiedDate":"2023-10-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"PetrichorPrecipice"},"content":"Tran$act\u0027s GUI is simple and gives you access to all of its features with just one click.","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":302,"author":{"gitId":"Bombbird2001"},"content":"This should be what you see when you open Tran$act for the first time:","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"Bombbird2001"},"content":"![Ui](images/Ui-Overview.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"PetrichorPrecipice"},"content":"The upper menu bar contains two tabs:","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"PetrichorPrecipice"},"content":"1. File — This tab contains actions like saving data and loading data.","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"PetrichorPrecipice"},"content":"2. Help — This tab contains more information about Tran$act like, for example, this User Guide.","lastModifiedDate":"2023-10-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":310,"author":{"gitId":"PetrichorPrecipice"},"content":"The lower menu bar contains three tabs:","lastModifiedDate":"2023-10-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"cxo05"},"content":"1. Overview — This tab shows you a monthly summary of your finances based on the transactions you have entered. Although it\u0027s empty right now, when you have added a few transactions it will begin to show graphs.","lastModifiedDate":"2023-11-04"},{"lineNumber":313,"author":{"gitId":"PetrichorPrecipice"},"content":"2. Transactions — This tab shows you the transactions you have entered in a row-by-row format.","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"Bombbird2001"},"content":"   ![Ui](images/Ui-Transactions.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":315,"author":{"gitId":"Bombbird2001"},"content":"3. Staff List — This tab shows you the persons or parties you have entered in a list format.","lastModifiedDate":"2023-11-03"},{"lineNumber":316,"author":{"gitId":"Bombbird2001"},"content":"   ![Ui](images/Ui-Staff.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":318,"author":{"gitId":"PetrichorPrecipice"},"content":"The input field below this with the grey text `Enter command here...` is where you can enter your commands.","lastModifiedDate":"2023-10-24"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"Sasmik23"},"content":"1. How to check my Java Version?","lastModifiedDate":"2023-10-26"},{"lineNumber":323,"author":{"gitId":"cxo05"},"content":"   - Open a Terminal/ Command Prompt and type java --version. If you do not have Java installed, you can check the instructions [here](https://nus-cs2103-ay2223s2.github.io/website/admin/programmingLanguages.html)","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"Sasmik23"},"content":"2. Can I do further analysis with the transaction data","lastModifiedDate":"2023-10-26"},{"lineNumber":325,"author":{"gitId":"cxo05"},"content":"   - The purpose of Tran$act is to keep accounting and analysis simple to improve efficiency. Nonetheless, you can export the data as a CSV file and use the data in third party apps such as excel and do further analysis if needed.","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"Sasmik23"},"content":"3. How can I launch Tran$act if clicking on the JAR file does not work?","lastModifiedDate":"2023-10-26"},{"lineNumber":327,"author":{"gitId":"cxo05"},"content":"   - Open a command terminal, `cd` into the folder you put the jar file in, type `java -jar transact.jar` and press Enter to run the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"cxo05"},"content":"| Action                  | Format, Examples                                                                                                        |","lastModifiedDate":"2023-10-23"},{"lineNumber":334,"author":{"gitId":"cxo05"},"content":"| ----------------------- | ----------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"cxo05"},"content":"| **Add transaction**     | `add ty/\u003ctype\u003e d/\u003cdescription\u003e amt/\u003camount\u003e on/\u003cdate\u003e [s/\u003cstaff ID\u003e]`                                                   |","lastModifiedDate":"2023-11-04"},{"lineNumber":336,"author":{"gitId":"cxo05"},"content":"| **Remove transaction**  | `del \u003cid\u003e`                                                                                                              |","lastModifiedDate":"2023-10-23"},{"lineNumber":337,"author":{"gitId":"cxo05"},"content":"| **Sort transactions**   | `sort [date/\u003csort type\u003e] [amt/\u003csort type\u003e]`                                                                             |","lastModifiedDate":"2023-11-04"},{"lineNumber":338,"author":{"gitId":"Bombbird2001"},"content":"| **Filter transactions** | `filter [ty/\u003ctype\u003e] [has/\u003ckeywords...\u003e] [after/\u003cdate\u003e] [before/\u003cdate\u003e] [more/\u003camount\u003e] [less/\u003camount\u003e] [by/\u003cstaff ID\u003e]` |","lastModifiedDate":"2023-11-01"},{"lineNumber":339,"author":{"gitId":"cxo05"},"content":"| **View transaction**    | `view t` or `view transaction`                                                                                          |","lastModifiedDate":"2023-10-23"},{"lineNumber":340,"author":{"gitId":"Bombbird2001"},"content":"| **Add staff**           | `addstaff n/\u003cname\u003e p/\u003cphone no\u003e e/\u003cemail\u003e a/\u003caddress\u003e [t/\u003ctag\u003e...]`                                                     |","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"Bombbird2001"},"content":"| **Remove staff**        | `delstaff \u003cstaff ID\u003e`                                                                                                   |","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"Bombbird2001"},"content":"| **Find staff**          | `find \u003ckeyword\u003e [more keywords...]`                                                                                     |","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"cxo05"},"content":"| **View staff**          | `view s` or `view staff`                                                                                                |","lastModifiedDate":"2023-10-23"},{"lineNumber":344,"author":{"gitId":"Bombbird2001"},"content":"| **View overview**       | `view o` or `view overview`                                                                                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"Bombbird2001"},"content":"| **Clear output**        | `clear`                                                                                                                 |","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"Bombbird2001"},"content":"| **Exit**                | `exit`                                                                                                                  |","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":348,"author":{"gitId":"cxo05"},"content":"## Glossary","lastModifiedDate":"2023-10-23"},{"lineNumber":349,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":350,"author":{"gitId":"cxo05"},"content":"| Term        | Definition                                             |","lastModifiedDate":"2023-10-23"},{"lineNumber":351,"author":{"gitId":"cxo05"},"content":"| ----------- | ------------------------------------------------------ |","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"cxo05"},"content":"| Transaction | An exchange of money (e.g. Income / Expense)           |","lastModifiedDate":"2023-10-23"},{"lineNumber":353,"author":{"gitId":"cxo05"},"content":"| Income      | Money received (e.g. Product Sale)                     |","lastModifiedDate":"2023-10-23"},{"lineNumber":354,"author":{"gitId":"cxo05"},"content":"| Expense     | Costs incurred (e.g. Staff salary, cost of production) |","lastModifiedDate":"2023-10-23"},{"lineNumber":355,"author":{"gitId":"cxo05"},"content":"| Command     | An input into the text box to carry out actions        |","lastModifiedDate":"2023-10-23"},{"lineNumber":356,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":357,"author":{"gitId":"cxo05"},"content":"## Future work","lastModifiedDate":"2023-11-04"},{"lineNumber":358,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":359,"author":{"gitId":"cxo05"},"content":"- Exported files that are created (e.g. transactions.csv) will be able to be renamed before being exported to the selected directory.","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"AlainS87":57,"cxo05":80,"Sasmik23":30,"-":109,"Bombbird2001":75,"PetrichorPrecipice":8}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"  h1,","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"  h2,","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"  h3 {","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"    margin-top: $spacing-unit * 2;","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"  h4,","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"  h5,","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"  h6 {","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"cxo05"},"content":"    margin-top: $spacing-unit;","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"cxo05"},"content":"  }","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"cxo05"},"content":"    \u0026:last-of-type {","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"cxo05"},"content":"      margin-right: 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"cxo05"},"content":"      \u0026:hover {","lastModifiedDate":"2023-10-16"},{"lineNumber":228,"author":{"gitId":"cxo05"},"content":"        border-color: darken($brand-color-light, 10%);","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"cxo05"},"content":"      }","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"cxo05"},"content":"    a,","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"cxo05"},"content":"    div {","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cxo05":18,"-":249}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"user -[USER_COLOR]\u003e ui : \"delstaff 1\"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delstaff 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTransactionBook(transactionBook)","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"deactivate storage","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"deactivate storage","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"Bombbird2001":13}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"participant \":DeleteStaffCommandParser\" as DeleteStaffCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"participant \"d:DeleteStaffCommand\" as DeleteStaffCommand LOGIC_COLOR","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"[-\u003e LogicManager : execute(\"delstaff 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delstaff 1\")","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"create DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"AddressBookParser -\u003e DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"activate DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"deactivate DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"AddressBookParser -\u003e DeleteStaffCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"activate DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"create DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommandParser -\u003e DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"activate DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommand --\u003e DeleteStaffCommandParser : d","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"deactivate DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"deactivate DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"destroy DeleteStaffCommandParser","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"LogicManager -\u003e DeleteStaffCommand : execute()","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"activate DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"Model --\u003e DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommand -\u003e CommandResult","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"CommandResult --\u003e DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"DeleteStaffCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"deactivate DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":42,"Bombbird2001":28}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"note right of XYZCommand: XYZCommand \u003d AddStaffCommand, \\nFindCommand, etc","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":45,"Bombbird2001":1}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTransactionBook\" as ReadOnlyTransactionBook","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nEntry\" as Entry","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"Class TransactionBook","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"Class Transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"Class TransactionId","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"Class TransactionType","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"Class Description","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"Class Amount","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"Class Date","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"Class \"UniqueEntryList\u003c? extends Entry\u003e\" as UniqueEntryList_T","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"Class \"UniqueEntryMap\u003c? extends Entry\u003e\" as UniqueEntryMap_T","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"Class \"UniqueEntryList\u003cPerson\u003e\" as UniqueEntryList_Person","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"Class \"UniqueEntryMap\u003cPerson\u003e\" as UniqueEntryMap_Person","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"Class \"UniqueEntryMap\u003cTransaction\u003e\" as UniqueEntryMap_Transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"UniqueEntryList_T \u003c|-- UniqueEntryList_Person","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"UniqueEntryMap_T \u003c|-- UniqueEntryMap_Person","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"UniqueEntryMap_T \u003c|-- UniqueEntryMap_Transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"TransactionBook .up.|\u003e ReadOnlyTransactionBook","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"AddressBook *--\u003e \"1\" UniqueEntryMap_Person","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"AddressBook *--\u003e \"1\" UniqueEntryList_Person","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"UniqueEntryMap_Person --\u003e \"~* all\" Person","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"UniqueEntryMap_Transaction --\u003e \"~* all\" Transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"Person .right.|\u003e Entry","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"TransactionBook *--\u003e \"1\" UniqueEntryMap_Transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"Transaction .left.|\u003e Entry","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"Transaction *--\u003e TransactionId","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"Transaction *--\u003e TransactionType","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"Transaction *--\u003e Description","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"Transaction *--\u003e Amount","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"Transaction *--\u003e Date","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"ModelManager --\u003e \"~* filtered\" Transaction","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":50,"Bombbird2001":32}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"skinparam genericDisplay old","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":79,"Bombbird2001":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"title: Tran$act","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W13-3/tp/graph/badge.svg)](https://codecov.io/gh/AY2324S1-CS2103T-W13-3/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":16,"Bombbird2001":3}},{"path":"docs/team/alains87.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"title: Su Shenyi\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"### Project: Tran$act","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"Tran$act - The transaction recorder is a powerful software tool tailored to meet the needs of accountants and proficient typists who prefer command-line interfaces. With its efficient design, users can swiftly add, remove, view, edit, and even recover deleted transactions. The software provides a user-friendly dashboard offering a concise snapshot of the company\u0027s financial status, including total income, expenses, and monthly net profit, making it a valuable asset for financial analysis and decision-making. Users can also identify cost allocation by sector, aiding in cost-efficiency enhancements. Additionally, the software offers robust financial reporting capabilities, allowing users to generate customizable reports in PDF, CSV, or Excel formats for seamless data sharing with stakeholders. To ensure data security and reliability, the software features encryption and automated backup options. An integrated address book simplifies contact management, making this software an indispensable tool for anyone seeking efficient financial data management.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"AlainS87":24}},{"path":"docs/team/bombbird2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"title: Shang Yi\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"## Project: Tran$act","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"Tran$act is a simple and easy to use transaction recorder and tracker built in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"### **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dbombbird2001\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"### **Enhancements implemented**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"### **User Guide**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"### **Developer Guide**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"### **Review Contributions**","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Bombbird2001":26}},{"path":"docs/team/cxo05.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"title: Xavier\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"## Project: Tran$act","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"Tran$act is a simple and easy to use transaction recorder and tracker built in Java.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"### **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dcxo05\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"### **Enhancements implemented**","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"`to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"\u003c!-- - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"- Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]()) --\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"### **User Guide**","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"`to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"  \u003c!-- - User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"  - Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    - Added implementation details of the `delete` feature. --\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"### **Developer Guide**","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"`to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"### **Review Contributions**","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"`to be added soon`","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"\u003c!-- - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"- Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"- Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"- Some parts of the history feature I added was adopted by several other class mates ([1](), [2]()) --\u003e","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"cxo05":40}},{"path":"docs/team/petrichorprecipice.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"title: Joon Hung\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"# Joon Hung\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"## Project: Tran$act","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"Tran$act is a desktop bookkeeping application used to keep track of a small business\u0027s","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"finances. The user interacts with it through a CLI and data is displayed on a GUI.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"It is written in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"**New Feature**: `to do soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"**Code contributed**: `to do soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"**Project management**: `to do soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"**Enhancements to existing features**: `to do soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"**Documentation:** `to do soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"**Community:** `to do soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"**Tools**: `to do soon`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"PetrichorPrecipice":28}},{"path":"docs/team/sasmik23.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"title: Mikhil\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"## Project: Tran$act","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"Tran$act is a simple and easy to use transaction recorder and tracker built in Java.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"### **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsasmik23\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"### **Enhancements implemented**","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"### **User Guide**","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"### **Developer Guide**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"### **Review Contributions**","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Sasmik23":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/transact/logic/command` directory.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"Create a `RemarkCommandParser` class in the `transact.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"Bombbird2001"},"content":"**`DeleteStaffCommandParser.java`:**","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"Bombbird2001"},"content":"return new DeleteStaffCommand(index);","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"cxo05"},"content":"Create a new `Remark` in `transact.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"cxo05"},"content":"Simply add the following to [`transact.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"```xml","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"cxo05":7,"-":387,"Bombbird2001":2}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e — Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html) already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"- Table of Contents","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"IntelliJ IDEA provides a refactoring tool that can identify _most_ parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"The `address` field in `Person` is actually an instance of the `transact.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"- :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"```xml","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"  \"persons\": [","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"    {","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"  ]","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cxo05":10,"-":105}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e — Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"- Table of Contents","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path _inside_ each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"1. Read the [_Architecture_ section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"   - If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"   - If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various _event-driven mechanisms_ used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `transact.logic.Logic`.","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"A quick look at the `transact.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"![`Find Usages` tool window. `Edit` \u003e `Find` \u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"   ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   ...","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"       return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   ...","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":193,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"cxo05"},"content":"   - it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"cxo05"},"content":"   - it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"cxo05"},"content":"   - :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2023-10-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":224,"author":{"gitId":"cxo05"},"content":"   - :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2023-10-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"   **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":256,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":257,"author":{"gitId":"cxo05"},"content":"   - :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2023-10-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"   public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"       requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"       resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cxo05":25,"-":286}},{"path":"eclipse-formatter.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\" standalone\u003d\"no\"?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"\u003cprofiles version\u003d\"13\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"\u003cprofile kind\u003d\"CodeFormatterProfile\" name\u003d\"Eclipse\" version\u003d\"13\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\" value\u003d\"enabled\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.compiler.compliance\" value\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\" value\u003d\"error\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\" value\u003d\"error\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.compiler.source\" value\u003d\"10\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines\" value\u003d\"2147483647\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.align_type_members_on_columns\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_assignment\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_compact_if\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression\" value\u003d\"80\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_method_declaration\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_module_statements\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try\" value\u003d\"80\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_type_arguments\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_type_parameters\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch\" value\u003d\"16\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_after_imports\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_field\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_member_type\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_before_package\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_block\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_lambda_body\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_switch\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration\" value\u003d\"end_of_line\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.count_line_length_from_starting_position\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.format_block_comments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.format_header\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.format_html\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.format_line_comments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.format_source_code\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.indent_parameter_description\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.line_length\" value\u003d\"80\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.compact_else_if\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.continuation_indentation\" value\u003d\"2\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.disabling_tag\" value\u003d\"@formatter:off\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.enabling_tag\" value\u003d\"@formatter:on\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_empty_lines\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.indentation.size\" value\u003d\"4\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_label\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":140,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":146,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":147,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":156,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":158,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":159,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":160,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":161,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":162,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":174,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":183,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":184,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":185,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":186,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":187,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":188,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":189,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":190,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":191,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":192,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":193,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":194,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":195,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":196,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":197,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":198,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":199,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":200,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":201,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":202,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":203,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":204,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":205,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":206,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":207,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":208,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":209,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":210,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":211,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":212,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":213,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":214,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":215,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":216,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":217,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":218,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":219,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":220,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":221,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":222,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":223,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":224,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":225,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":226,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":227,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":228,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":229,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":230,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":231,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":232,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":233,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":234,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":235,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":236,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":237,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":238,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":239,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":240,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":241,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":242,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":243,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":244,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":245,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":246,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":247,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":248,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":249,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":250,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":251,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":252,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":253,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":254,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":255,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":256,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":257,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":258,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":259,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":260,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":261,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":262,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":263,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":264,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":265,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":266,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":267,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":268,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":269,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional\" value\u003d\"insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":270,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":271,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":272,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":273,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":274,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":275,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":276,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":277,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":278,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":279,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":280,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":281,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":282,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation\" value\u003d\"do not insert\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":283,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.join_lines_in_comments\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":284,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.join_wrapped_lines\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":285,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":286,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":287,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":288,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":289,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.lineSplit\" value\u003d\"120\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":290,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":291,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":292,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body\" value\u003d\"0\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":293,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve\" value\u003d\"1\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":294,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":295,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":296,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":297,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":298,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":299,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":300,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":301,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":302,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":303,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause\" value\u003d\"common_lines\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":304,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":305,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.tabulation.char\" value\u003d\"tab\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":306,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.tabulation.size\" value\u003d\"4\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":307,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.use_on_off_tags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":308,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":309,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.wrap_before_assignment_operator\" value\u003d\"false\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":310,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.wrap_before_binary_operator\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":311,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.wrap_before_conditional_operator\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":312,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":313,"author":{"gitId":"cxo05"},"content":"\u003csetting id\u003d\"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested\" value\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":314,"author":{"gitId":"cxo05"},"content":"\u003c/profile\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":315,"author":{"gitId":"cxo05"},"content":"\u003c/profiles\u003e","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"cxo05":315}},{"path":"src/main/java/transact/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.FileUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":69}},{"path":"src/main/java/transact/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * Error: JavaFX runtime components are missing, and are required to run this","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":" * application","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"        // As per","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"        // https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"        // loaded from","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        // ignored when","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        // even then.","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"        // the user (if looking at the log output) that the said warning appearing in","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"        // the log","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":14,"-":33}},{"path":"src/main/java/transact/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.Config;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.Version;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.StringUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.logic.Logic;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.logic.LogicManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"import transact.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"import transact.storage.AddressBookStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.CsvAdaptedTransactionStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"import transact.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"import transact.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"import transact.storage.Storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"import transact.storage.StorageManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.TransactionBookStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"import transact.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"import transact.ui.Ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"import transact.ui.UiManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"    private static HostServices hostServices;","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"        TransactionBookStorage transactionBookStorage \u003d new CsvAdaptedTransactionStorage(userPrefs.getTransactionBookFilePath());","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        storage \u003d new StorageManager(addressBookStorage, transactionBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"        hostServices \u003d getHostServices();","lastModifiedDate":"2023-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"     * book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"     * The data from the sample address book will be used instead if","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"     * {@code storage}\u0027s address book is not found,","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"     * or an empty address book will be used instead if errors occur when reading","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"     * {@code storage}\u0027s address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"        logger.info(\"Using data file for address book: \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        ReadOnlyAddressBook initialAddressData;","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"            initialAddressData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"            initialAddressData \u003d new AddressBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"        logger.info(\"Using data file for transaction book: \" + storage.getTransactionBookFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cReadOnlyTransactionBook\u003e transactionBookOptional;","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"        ReadOnlyTransactionBook initialTransactionData;","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"            transactionBookOptional \u003d storage.readTransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"            if (!transactionBookOptional.isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"                logger.info(\"Creating a new data file \" + storage.getTransactionBookFilePath()","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"                        + \" populated with a sample TransactionBook.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"            initialTransactionData \u003d transactionBookOptional.orElseGet(SampleDataUtil::getSampleTransactionBook);","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"            logger.warning(\"Data file at \" + storage.getTransactionBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"                    + \" Will be starting with an empty TransactionBook.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"            initialTransactionData \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"        return new ModelManager(initialAddressData, initialTransactionData, userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"cxo05"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"cxo05"},"content":"        // new/unused fields","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"     * file path,","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"cxo05"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"cxo05"},"content":"        // new/unused fields","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2023-10-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":218,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":219,"author":{"gitId":"cxo05"},"content":"    public static HostServices getLocalHostServices() {","lastModifiedDate":"2023-10-09"},{"lineNumber":220,"author":{"gitId":"cxo05"},"content":"        return hostServices;","lastModifiedDate":"2023-10-09"},{"lineNumber":221,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":47,"Sasmik23":1,"-":149,"Bombbird2001":25}},{"path":"src/main/java/transact/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":64}},{"path":"src/main/java/transact/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     * position.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":79}},{"path":"src/main/java/transact/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":" * These loggers have been configured to output messages to the console and a","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":" * {@code .log} file by default,","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" * be created after the log","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * Initializes loggers with the log level specified in the {@code config}","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * object. Applies to all loggers created","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     * for those that are manually set.","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"     * name so that the created logger","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     * logger will have the same log handlers","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"        // separator, similar to how Java","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"        // level of their parent logger.","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        // baseLogger the parent of all","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"        // the baseLogger level.","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"     * {@code FileHandler}.","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"     * other loggers.","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"        // filters the log messages by level","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":28,"-":90}},{"path":"src/main/java/transact/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     * @param versionString","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     *            version number string","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":119}},{"path":"src/main/java/transact/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core.index;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":" * {@code Index} should be used right from the start (when parsing in a new user","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * input), so that if the current","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" * component wants to communicate with another component, it can send an","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":" * {@code Index} to avoid having to know what","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" * base the other component is using for its index. However, after receiving the","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" * {@code Index}, that component can","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * convert it back to an int if the index will not be passed to a different","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":" * component again.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":10,"-":63}},{"path":"src/main/java/transact/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.exceptions;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"cxo05":1,"-":10}},{"path":"src/main/java/transact/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.exceptions;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"     * @param message","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"     *            should contain relevant information on the failed","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"     *            constraint(s)","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     * @param message","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     *            should contain relevant information on the failed","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"     *            constraint(s)","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     * @param cause","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     *            of the main exception","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"-":17}},{"path":"src/main/java/transact/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.MainApp;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"     * methods.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     *             if {@code condition} is false.","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * methods.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     *             with {@code errorMessage} if","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     *             {@code condition} is false.","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"-":36}},{"path":"src/main/java/transact/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items}","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"     * is null.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":3,"-":33}},{"path":"src/main/java/transact/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.Config;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":3,"-":20}},{"path":"src/main/java/transact/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     * {@link Paths#get(String)},","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * @param path","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     *            A string representing the file path. Cannot be null.","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * Creates a file if it does not exist along with its missing parent","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     * directories.","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"     *             if the file or directory cannot be created.","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"     * Creates a file if it does not exist along with its missing parent","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     * directories.","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":13,"-":77}},{"path":"src/main/java/transact/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()}","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     * object if the file is not found.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     * If any values are missing from the file, default values will be used, as long","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * as the file is a valid JSON file.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"     * @param filePath","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     *            cannot be null.","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"     * @param classOfObjectToDeserialize","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"     *            JSON file has to correspond to the","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"     *            structure in the class given here.","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"     * @throws DataLoadingException","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"     *             if loading of the JSON file failed.","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"     * @param jsonFile","lastModifiedDate":"2023-10-09"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"     *            cannot be null","lastModifiedDate":"2023-10-09"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"     * @param filePath","lastModifiedDate":"2023-10-09"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"     *            cannot be null","lastModifiedDate":"2023-10-09"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-09"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"     *             if there was an error during writing to the file","lastModifiedDate":"2023-10-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"     * @param \u003cT\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"     *            The generic type to create an instance of","lastModifiedDate":"2023-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"     * @param instance","lastModifiedDate":"2023-10-09"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"     *            The T object to be converted into the JSON string","lastModifiedDate":"2023-10-09"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"     * @param \u003cT\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"     *            The generic type to create an instance of","lastModifiedDate":"2023-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":29,"-":129}},{"path":"src/main/java/transact/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"     * examples:","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * \u003c/pre\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * @param sentence","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"     *            cannot be null","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"     * @param word","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     *            cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"     * whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"     * @throws NullPointerException","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"     *             if {@code s} is null.","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":18,"-":59}},{"path":"src/main/java/transact/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":" * Builds a string representation of an object that is suitable as the return","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":" * value of {@link Object#toString()}.","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     * with {@code objectName}.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * with the","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * @param fieldName","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     *            The name of the field.","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * @param fieldValue","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     *            The value of the field.","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"     *         calls to be chained.","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":13,"-":46}},{"path":"src/main/java/transact/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.CommandResult;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * @param commandText","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     *            The command as entered by the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"     * @throws CommandException","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     *             If an error occurs during command execution.","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     *             If an error occurs during parsing.","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"     * Handles commandResult with exportTransactions as true.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"     * @throws CommandException","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"    void handleTransactionsExport() throws CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"     * Handles commandResult with exportStaff as true.","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"     * @throws CommandException","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"    void handleStaffExport() throws CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"     * @see transact.model.Model#getAddressBook()","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of transactions */","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cxo05":7,"Sasmik23":14,"-":42,"Bombbird2001":9}},{"path":"src/main/java/transact/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.Command;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.CommandResult;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.Storage;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * {@code Storage}.","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"        if (commandResult.isExportTransactions()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"            handleTransactionsExport();","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"        if (commandResult.isExportStaff()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"            handleStaffExport();","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"            storage.saveTransactionBook(model.getTransactionBook());","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Sasmik23"},"content":"     * Handles commandResult of ExportTransactionsCommand by exporting transaction book to specified exportFilePath","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"     * @throws CommandException","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Sasmik23"},"content":"    public void handleTransactionsExport() throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Sasmik23"},"content":"            storage.saveTransactionBook(model.getTransactionBook(), model.getExportFilePath());","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"Sasmik23"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Sasmik23"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Sasmik23"},"content":"    public void handleStaffExport() throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Sasmik23"},"content":"            storage.saveAddressBook(model.getAddressBook(), model.getExportFilePath());","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"Sasmik23"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"Sasmik23"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return model.getFilteredTransactionList();","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cxo05":3,"Sasmik23":31,"-":78,"Bombbird2001":14}},{"path":"src/main/java/transact/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.Prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"public class Messages {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_INVALID_TRANSACTION_ID \u003d \"Cannot find transaction with id %d\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_TRANSACTIONS_LISTED_OVERVIEW \u003d \"%1$d transactions listed!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_INVALID_PERSON_ID \u003d \"Cannot find person with id: %d\";","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"        Set\u003cString\u003e duplicateFields \u003d Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"    public static String format(Person person) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"        builder.append(person.getName())","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"                .append(person.getPhone())","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"                .append(person.getEmail())","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"                .append(person.getAddress())","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Formats the {@code transaction} for display to the user.","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static String format(Transaction transaction) {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        builder.append(transaction.getTransactionId())","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"                .append(\"; TransactionType: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"                .append(transaction.getTransactionType())","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"                .append(transaction.getDescription())","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"                .append(\"; Amount: \")","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"                .append(transaction.getAmount())","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                .append(transaction.getDate())","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"                .append(\"; StaffId: \")","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"                .append(transaction.getPersonId());","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":57,"PetrichorPrecipice":7,"Bombbird2001":7}},{"path":"src/main/java/transact/logic/commands/AddStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"public class AddStaffCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"addstaff\";","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"     * Creates an AddStaffCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    public AddStaffCommand(Person person) {","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"        if (model.hasPerson(toAdd.getPersonId())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)), TabWindow.ADDRESSBOOK);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof AddStaffCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand otherAddStaffCommand \u003d (AddStaffCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"        return toAdd.equals(otherAddStaffCommand.toAdd);","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":13,"Sasmik23":1,"-":64,"Bombbird2001":7}},{"path":"src/main/java/transact/logic/commands/AddTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_STAFF;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"public class AddTransactionCommand extends Command {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a transaction to the address book. \"","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"            + PREFIX_TYPE + \"TYPE \"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_AMOUNT + \"AMOUNT \"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"            + PREFIX_STAFF + \"STAFF_ID\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_TYPE + \"E \"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_DESCRIPTION + \"Monthly Salary \"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_AMOUNT + \"1000 \"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_DATE + \"10/11/23 \"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"            + PREFIX_STAFF + \"1\";","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New transaction added: %1$s\";","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"This transaction already exists in the transaction book.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"    private final TransactionType transactionType;","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"    private final Description description;","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    private final Amount amount;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"    private final Date date;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    private final Integer staffId;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     * Creates an AddTransactionCommand to add the specified {@code Transaction} and","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * staffId {@code Integer}","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    public AddTransactionCommand(","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"            TransactionType transactionType,","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"            Description description,","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"            Amount amount,","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"            Date date,","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"            Integer staffId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(transactionType, description, amount, date, staffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"        this.transactionType \u003d transactionType;","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"        this.staffId \u003d staffId;","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"        if (staffId \u003e\u003d 0 \u0026\u0026 model.getPerson(staffId).equals(Person.NULL_PERSON)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"            throw new CommandException(\"Staff not found\");","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"        Transaction newTransaction \u003d new Transaction(transactionType, description, amount, date, staffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"        model.addTransaction(newTransaction);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(newTransaction)),","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"                TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"                .add(\"type\", transactionType)","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"                .add(\"amount\", amount)","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"                .add(\"staffId\", staffId)","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"PetrichorPrecipice"},"content":"                .toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cxo05":37,"PetrichorPrecipice":54,"Bombbird2001":4}},{"path":"src/main/java/transact/logic/commands/ClearFilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" * Clears the transaction list filter.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class ClearFilterCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"clearfilter\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Transaction filter has been cleared!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        model.updateFilteredTransactionList(Model.PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        return new CommandResult(MESSAGE_SUCCESS, TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":24}},{"path":"src/main/java/transact/logic/commands/ClearResultBoxCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":" * Clears the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":"public class ClearResultBoxCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Result Box is cleared\";","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"        return new CommandResult(MESSAGE_SUCCESS, TabWindow.CURRENT, false, false, true);","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"AlainS87":21}},{"path":"src/main/java/transact/logic/commands/ClearSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Clears the transaction list sort.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class ClearSortCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"clearsort\";","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Transaction sort has been cleared!\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        model.updateFilteredTransactionList(Model.COMPARATOR_ASC_BY_ID);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        return new CommandResult(MESSAGE_SUCCESS, TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bombbird2001":23}},{"path":"src/main/java/transact/logic/commands/ClearStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" * Clears the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"public class ClearStaffCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"    public static final String COMMAND_WORD \u003d \"clearstaff\";","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"        return new CommandResult(MESSAGE_SUCCESS, TabWindow.ADDRESSBOOK, false, false, true);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"AlainS87":3,"cxo05":20}},{"path":"src/main/java/transact/logic/commands/ClearTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":" * Clears the transaction list.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"public class ClearTransactionCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"    public static final String COMMAND_WORD \u003d \"cleartransaction\";","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Transaction list has been cleared!\";","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"        model.setTransactionBook(new TransactionBook());","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"        return new CommandResult(MESSAGE_SUCCESS, TabWindow.TRANSACTIONS, false, false);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"AlainS87":24}},{"path":"src/main/java/transact/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":" * Represents a command with hidden internal logic and the ability to be","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":" * executed.","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     * @param model","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"     *            {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     * @throws CommandException","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"     *             If an error occurs during command execution.","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"-":14}},{"path":"src/main/java/transact/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"public class CommandResult {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    private final TabWindow tabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"    private final boolean showHelp;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    /** The application should exit. */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"    private final boolean exit;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"    private final boolean clearResultDisplay;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    private final boolean exportTransactions;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    private final boolean exportStaff;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"    public CommandResult(String feedbackToUser, TabWindow tabWindow, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        this.tabWindow \u003d tabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"AlainS87"},"content":"        this.clearResultDisplay \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"        this.exportTransactions \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"        this.exportStaff \u003d false;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"    public CommandResult(String feedbackToUser, TabWindow tabWindow, boolean showHelp, boolean exit, boolean clearResultDisplay) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"AlainS87"},"content":"        this.tabWindow \u003d tabWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"AlainS87"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"AlainS87"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"AlainS87"},"content":"        this.clearResultDisplay \u003d clearResultDisplay;","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"        this.exportTransactions \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"        this.exportStaff \u003d false;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"     * Constructs a {@code CommandResult} with the specified fields, including export details","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"    public CommandResult(String feedbackToUser, TabWindow tabWindow, boolean showHelp, boolean exit, boolean clearResultDisplay,","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"                         boolean exportTransactions, boolean exportStaff) {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Sasmik23"},"content":"        this.tabWindow \u003d tabWindow;","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Sasmik23"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Sasmik23"},"content":"        this.clearResultDisplay \u003d clearResultDisplay;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"        this.exportTransactions \u003d exportTransactions;","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Sasmik23"},"content":"        this.exportStaff \u003d exportStaff;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"     * ,switches to the specified {@code tabWindow}","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"    public CommandResult(String feedbackToUser, TabWindow tabWindow) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"AlainS87"},"content":"        this(feedbackToUser, tabWindow, false, false);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"AlainS87"},"content":"        this(feedbackToUser, TabWindow.CURRENT, false, false);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"        return feedbackToUser;","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"    public TabWindow getTabWindow() {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"        return tabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"        return showHelp;","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"        return exit;","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"AlainS87"},"content":"    public boolean isClearResultDisplay() {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"AlainS87"},"content":"        return clearResultDisplay;","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"Sasmik23"},"content":"    public boolean isExportTransactions() {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Sasmik23"},"content":"        return exportTransactions;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Sasmik23"},"content":"    public boolean isExportStaff() {","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"Sasmik23"},"content":"        return exportStaff;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"        return Objects.hash(feedbackToUser, tabWindow, showHelp, exit);","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"                .add(\"tabWindow\", tabWindow)","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"cxo05"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"AlainS87":20,"cxo05":98,"Sasmik23":31}},{"path":"src/main/java/transact/logic/commands/DeleteStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * Deletes a person identified using it\u0027s id.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public class DeleteStaffCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"delstaff\";","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"            + \": Deletes the person identified by their unqiue id displayed in the person list.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"            + \"Parameters: ID (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"    public static final String MESSAGE_DELETE_PERSON_FAILURE \u003d \"Cannot find person with id: %d\";","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    private final Integer personId;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    public DeleteStaffCommand(Integer personId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"        for (PersonId id : model.getAddressBook().getPersonMap().keySet()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"            if (id.getValue().equals(personId)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"                Person deletedPerson \u003d model.deletePerson(id);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"                return new CommandResult(","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"                        String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(deletedPerson)),","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"                        TabWindow.ADDRESSBOOK);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        throw new CommandException(String.format(MESSAGE_DELETE_PERSON_FAILURE, personId));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof DeleteStaffCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        DeleteStaffCommand otherDeleteStaffCommand \u003d (DeleteStaffCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"        return personId.equals(otherDeleteStaffCommand.personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"                .add(\"personId\", personId)","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":49,"Sasmik23":13,"Bombbird2001":6}},{"path":"src/main/java/transact/logic/commands/DeleteTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * Deletes a transaction identified using it\u0027s displayed index from the","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":" * transaction book.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"public class DeleteTransactionCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    public static final String COMMAND_WORD \u003d \"del\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"            + \": Deletes transaction identified by the index number used in the transaction list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"    public static final String MESSAGE_DELETE_TRANSACTION_SUCCESS \u003d \"Deleted Transaction: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_DELETE_TRANSACTION_FAILURE \u003d \"Cannot find transaction with id: %d\";","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    private final Integer transactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    public DeleteTransactionCommand(Integer transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"        this.transactionId \u003d transactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        for (TransactionId id : model.getTransactionBook().getTransactionMap().keySet()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            if (id.getValue() \u003d\u003d transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                Transaction deletedTransaction \u003d model.deleteTransaction(id);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"                return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"                        String.format(MESSAGE_DELETE_TRANSACTION_SUCCESS, Messages.format(deletedTransaction)),","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"                        TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"                String.format(MESSAGE_DELETE_TRANSACTION_FAILURE, transactionId),","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"                TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"        if (!(other instanceof DeleteTransactionCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Sasmik23"},"content":"        DeleteTransactionCommand otherDeleteTransactionCommand \u003d (DeleteTransactionCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"        return transactionId.equals(otherDeleteTransactionCommand.transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Sasmik23"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Sasmik23"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"                .add(\"transactionId\", transactionId)","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Sasmik23"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cxo05":20,"Sasmik23":53}},{"path":"src/main/java/transact/logic/commands/EditStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EditStaffCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String COMMAND_WORD \u003d \"editstaff\";","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            + \"by their unqiue id displayed in the person list. \"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"            + \"Parameters: ID (must be a non-negative integer) \"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"    public static final String MESSAGE_PERSON_ID_NOT_FOUND \u003d \"Cannot find person with id: %d\";","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"    private final Integer personId;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"     * @param personId","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"     *            of the person to edit","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"     * @param editPersonDescriptor","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"     *            details to edit the person with","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"    public EditStaffCommand(Integer personId, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"Sasmik23"},"content":"        requireAllNonNull(personId, editPersonDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"Sasmik23"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"        Person personToEdit \u003d model.getPerson(personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"        if (personToEdit.equals(Person.NULL_PERSON)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"            throw new CommandException(String.format(MESSAGE_PERSON_ID_NOT_FOUND, personId));","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"        model.setPerson(personToEdit.getPersonId(), editedPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"Sasmik23"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"Sasmik23"},"content":"                String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)),","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Sasmik23"},"content":"                TabWindow.ADDRESSBOOK);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        return new Person(personToEdit.getPersonId(), updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"                updatedTags);","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!(other instanceof EditStaffCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"PetrichorPrecipice"},"content":"        EditStaffCommand otherEditStaffCommand \u003d (EditStaffCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"Sasmik23"},"content":"        return personId.equals(otherEditStaffCommand.personId)","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"PetrichorPrecipice"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditStaffCommand.editPersonDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"Sasmik23"},"content":"                .add(\"personId\", personId)","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"     * replace the","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"cxo05"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"cxo05"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-10-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-10-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-10-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2023-10-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":37,"Sasmik23":12,"-":193,"PetrichorPrecipice":5}},{"path":"src/main/java/transact/logic/commands/EditTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_STAFF;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_TRANSACTIONS;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":" * Edits the details of an existing transaction.","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EditTransactionCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the transaction identified \"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"            + \"by its unique id displayed transactions list. \"","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            + \"Parameters: ID (must be a positive integer) \"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"[\" + PREFIX_TYPE + \"TYPE] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"[\" + PREFIX_AMOUNT + \"AMOUNT] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"            + \"[\" + PREFIX_STAFF + \"STAFF_ID]...\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_TYPE + \"E \"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"            + PREFIX_AMOUNT + \"10000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_EDIT_TRANSACTION_SUCCESS \u003d \"Edited Transaction: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_DUPLICATE_TRANSACTION \u003d \"This transaction already exists in the Transaction book.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_TRANSACTION_ID_NOT_FOUND \u003d \"Cannot find transaction with id: %d\";","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"    private final Integer transactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final EditTransactionDescriptor editTransactionDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"     * @param transactionId","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     *            of the transaction to edit","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @param editTransactionDescriptor","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"     *            details to edit the transaction with","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"    public EditTransactionCommand(Integer transactionId, EditTransactionDescriptor editTransactionDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(transactionId, editTransactionDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        this.transactionId \u003d transactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"        this.editTransactionDescriptor \u003d new EditTransactionDescriptor(editTransactionDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        if (editTransactionDescriptor.staffId !\u003d null \u0026\u0026 editTransactionDescriptor.staffId \u003e\u003d 0","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 model.getPerson(editTransactionDescriptor.staffId).equals(Person.NULL_PERSON)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"            throw new CommandException(\"Staff not found\");","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"        for (TransactionId id : model.getTransactionBook().getTransactionMap().keySet()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"            if (id.getValue().equals(transactionId)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"                Transaction transactionToEdit \u003d model.getTransaction(id);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"                Transaction editedTransaction \u003d createEditedTransaction(transactionToEdit, editTransactionDescriptor,","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"                        model);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"                model.setTransaction(id, editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"                model.updateFilteredTransactionList(PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"                return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"                        String.format(MESSAGE_EDIT_TRANSACTION_SUCCESS, Messages.format(editedTransaction)),","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"                        TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"                String.format(MESSAGE_TRANSACTION_ID_NOT_FOUND, transactionId),","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"                TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"PetrichorPrecipice"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"PetrichorPrecipice"},"content":"    private static Transaction createEditedTransaction(Transaction transactionToEdit,","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"            EditTransactionDescriptor editTransactionDescriptor, Model model) {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"PetrichorPrecipice"},"content":"        assert transactionToEdit !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        TransactionType updatedTransactionType \u003d editTransactionDescriptor.getType()","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"                .orElse(transactionToEdit.getTransactionType());","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"        Description updatedDescription \u003d editTransactionDescriptor.getDescription()","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"                .orElse(transactionToEdit.getDescription());","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        Amount updatedAmount \u003d editTransactionDescriptor.getAmount()","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"                .orElse(transactionToEdit.getAmount());","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"        Date updatedDate \u003d editTransactionDescriptor.getDate()","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"                .orElse(transactionToEdit.getDate());","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"        Integer updatedStaffId \u003d transactionToEdit.getPersonId();","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"        if (editTransactionDescriptor.getStaffId().isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"            int tem \u003d editTransactionDescriptor.getStaffId().get();","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"            if (tem \u003c 0) {","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"                updatedStaffId \u003d -1;","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"                updatedStaffId \u003d tem;","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"        return new Transaction(transactionToEdit.getTransactionId(), updatedTransactionType, updatedDescription,","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"                updatedAmount, updatedDate, updatedStaffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"PetrichorPrecipice"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"PetrichorPrecipice"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"PetrichorPrecipice"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!(other instanceof EditTransactionCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"PetrichorPrecipice"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"PetrichorPrecipice"},"content":"        EditTransactionCommand otherEditTransactionCommand \u003d (EditTransactionCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"        return transactionId.equals(otherEditTransactionCommand.transactionId)","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"PetrichorPrecipice"},"content":"                \u0026\u0026 editTransactionDescriptor.equals(otherEditTransactionCommand.editTransactionDescriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"PetrichorPrecipice"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"PetrichorPrecipice"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"                .add(\"transactionId\", transactionId)","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"PetrichorPrecipice"},"content":"                .add(\"editTransactionDescriptor\", editTransactionDescriptor)","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"PetrichorPrecipice"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"     * Stores the details to edit the transaction with. Each non-empty field value","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"     * will replace the corresponding field value of the transaction.","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static class EditTransactionDescriptor {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"PetrichorPrecipice"},"content":"        private TransactionType transactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"PetrichorPrecipice"},"content":"        private Description description;","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"PetrichorPrecipice"},"content":"        private Amount amount;","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"PetrichorPrecipice"},"content":"        private Date date;","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"        private Integer staffId;","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"PetrichorPrecipice"},"content":"        public EditTransactionDescriptor() {","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"PetrichorPrecipice"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"PetrichorPrecipice"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"PetrichorPrecipice"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"PetrichorPrecipice"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"PetrichorPrecipice"},"content":"        public EditTransactionDescriptor(EditTransactionDescriptor toCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"PetrichorPrecipice"},"content":"            setType(toCopy.transactionType);","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"PetrichorPrecipice"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"PetrichorPrecipice"},"content":"            setAmount(toCopy.amount);","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"PetrichorPrecipice"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"            setStaffId(toCopy.staffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"PetrichorPrecipice"},"content":"        /**","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"PetrichorPrecipice"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"PetrichorPrecipice"},"content":"         */","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"PetrichorPrecipice"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"cxo05"},"content":"            return CollectionUtil.isAnyNonNull(transactionType, description, amount, date, staffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"PetrichorPrecipice"},"content":"        // Getter and Setter for \u0027transactionType\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"PetrichorPrecipice"},"content":"        public Optional\u003cTransactionType\u003e getType() {","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"PetrichorPrecipice"},"content":"            return Optional.ofNullable(transactionType);","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void setType(TransactionType transactionType) {","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"PetrichorPrecipice"},"content":"            this.transactionType \u003d transactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"PetrichorPrecipice"},"content":"        // Getter and Setter for \u0027description\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"PetrichorPrecipice"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"PetrichorPrecipice"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"PetrichorPrecipice"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"PetrichorPrecipice"},"content":"        // Getter and Setter for \u0027amount\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"PetrichorPrecipice"},"content":"        public Optional\u003cAmount\u003e getAmount() {","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"PetrichorPrecipice"},"content":"            return Optional.ofNullable(amount);","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void setAmount(Amount amount) {","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"PetrichorPrecipice"},"content":"            this.amount \u003d amount;","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"PetrichorPrecipice"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"PetrichorPrecipice"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"PetrichorPrecipice"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"PetrichorPrecipice"},"content":"        // Getter and Setter for \u0027staff\u0027","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"cxo05"},"content":"        public Optional\u003cInteger\u003e getStaffId() {","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"cxo05"},"content":"            return Optional.ofNullable(staffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"cxo05"},"content":"        public void setStaffId(Integer staffId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"cxo05"},"content":"            this.staffId \u003d staffId;","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":231,"author":{"gitId":"PetrichorPrecipice"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":232,"author":{"gitId":"PetrichorPrecipice"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"PetrichorPrecipice"},"content":"                return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":235,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":237,"author":{"gitId":"PetrichorPrecipice"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":238,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (!(other instanceof EditTransactionDescriptor)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"PetrichorPrecipice"},"content":"                return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":241,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"PetrichorPrecipice"},"content":"            EditTransactionDescriptor otherEditPersonDescriptor \u003d (EditTransactionDescriptor) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"PetrichorPrecipice"},"content":"            return Objects.equals(transactionType, otherEditPersonDescriptor.transactionType)","lastModifiedDate":"2023-10-16"},{"lineNumber":244,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \u0026\u0026 Objects.equals(description, otherEditPersonDescriptor.description)","lastModifiedDate":"2023-10-16"},{"lineNumber":245,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \u0026\u0026 Objects.equals(amount, otherEditPersonDescriptor.amount)","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"PetrichorPrecipice"},"content":"                    \u0026\u0026 Objects.equals(date, otherEditPersonDescriptor.date)","lastModifiedDate":"2023-10-16"},{"lineNumber":247,"author":{"gitId":"cxo05"},"content":"                    \u0026\u0026 Objects.equals(staffId, otherEditPersonDescriptor.staffId);","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"PetrichorPrecipice"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":251,"author":{"gitId":"PetrichorPrecipice"},"content":"        public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .add(\"type\", transactionType)","lastModifiedDate":"2023-10-16"},{"lineNumber":254,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .add(\"description\", description)","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .add(\"amount\", amount)","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .add(\"date\", date)","lastModifiedDate":"2023-10-16"},{"lineNumber":257,"author":{"gitId":"cxo05"},"content":"                    .add(\"staff\", staffId)","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":260,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":261,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cxo05":67,"Sasmik23":1,"PetrichorPrecipice":192,"Bombbird2001":1}},{"path":"src/main/java/transact/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, TabWindow.CURRENT, false, true);","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":16}},{"path":"src/main/java/transact/logic/commands/ExportStaffCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import transact.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import transact.ui.MainWindow;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":" * Creates export staff command","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"public class ExportStaffCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    public static final String COMMAND_WORD \u003d \"exportstaff\";","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"    private static final String MESSAGE_EXPORT_ACKNOWLEDGEMENT \u003d \"Exporting Staff as requested ...\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    private final Path exportFilePath;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"    public ExportStaffCommand(Path path) {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        this.exportFilePath \u003d path;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"        model.setExportFilePath(exportFilePath);","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"        return new CommandResult(MESSAGE_EXPORT_ACKNOWLEDGEMENT, MainWindow.TabWindow.ADDRESSBOOK, false, false, false, false, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Sasmik23":26}},{"path":"src/main/java/transact/logic/commands/ExportTransactionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import transact.ui.MainWindow;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":" * Creates export transaction command","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"public class ExportTransactionCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    public static final String COMMAND_WORD \u003d \"exporttransactions\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    private static final String MESSAGE_EXPORT_ACKNOWLEDGEMENT \u003d \"Exporting Transactions as requested ...\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"    private final Path exportFilePath;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"    public ExportTransactionCommand(Path path) {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"        this.exportFilePath \u003d path;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"        model.setExportFilePath(exportFilePath);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"        return new CommandResult(MESSAGE_EXPORT_ACKNOWLEDGEMENT, MainWindow.TabWindow.TRANSACTIONS, false, false, false, true, false);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Sasmik23":28}},{"path":"src/main/java/transact/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AFTER_DATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_BEFORE_DATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_BY_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DESCRIPTION_HAS;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_LESS_THAN_AMOUNT;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_MORE_THAN_AMOUNT;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_TRANSACTIONS;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.AfterOrOnDatePredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.BeforeOrOnDatePredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.ByPersonIdPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.LessThanOrEqualAmountPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.MoreThanOrEqualAmountPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.predicates.TransactionTypePredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":" * Filters the transaction list to show only transactions that match the given","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":" * filter conditions.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     * Stores the filter conditions to be used to filter the transaction list.","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    public static class FilterConditions {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        private TransactionType transactionType;","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        private List\u003cString\u003e descriptionHas;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        private Date afterDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        private Date beforeDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        private Amount moreThanAmount;","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        private Amount lessThanAmount;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        private Integer byPersonId;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        public void setTransactionType(TransactionType transactionType) {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"            this.transactionType \u003d transactionType;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        public void setDescriptionHas(List\u003cString\u003e descriptionHas) {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"            this.descriptionHas \u003d descriptionHas;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        public void setAfterDate(Date afterDate) {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"            this.afterDate \u003d afterDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        public void setBeforeDate(Date beforeDate) {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"            this.beforeDate \u003d beforeDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"        public void setMoreThanAmount(Amount moreThanAmount) {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"            this.moreThanAmount \u003d moreThanAmount;","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        public void setLessThanAmount(Amount lessThanAmount) {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"            this.lessThanAmount \u003d lessThanAmount;","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        public void setByPersonId(Integer byPersonId) {","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"            this.byPersonId \u003d byPersonId;","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        public Predicate\u003cTransaction\u003e getPredicate() {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"            return PREDICATE_SHOW_ALL_TRANSACTIONS","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e transactionType \u003d\u003d null","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"                            || new TransactionTypePredicate(transactionType).test(transaction))","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e descriptionHas \u003d\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"                            || new DescriptionContainsKeywordsPredicate(descriptionHas).test(transaction))","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e afterDate \u003d\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"                            || new AfterOrOnDatePredicate(afterDate).test(transaction))","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e beforeDate \u003d\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"                            || new BeforeOrOnDatePredicate(beforeDate).test(transaction))","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e moreThanAmount \u003d\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"                            || new MoreThanOrEqualAmountPredicate(moreThanAmount).test(transaction))","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e lessThanAmount \u003d\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"                            || new LessThanOrEqualAmountPredicate(lessThanAmount).test(transaction))","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"                    .and(transaction -\u003e byPersonId \u003d\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"                            || new ByPersonIdPredicate(byPersonId).test(transaction));","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters transactions by conditions. \"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_TYPE + \"TYPE] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_DESCRIPTION_HAS + \"KEYWORD(S)...] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_AFTER_DATE + \"DATE] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_BEFORE_DATE + \"DATE] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_MORE_THAN_AMOUNT + \"AMOUNT] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_LESS_THAN_AMOUNT + \"AMOUNT] \"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_BY_PERSON + \"PERSON_ID]\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"            + \"Multiple KEYWORDS can be specified, each separated by a space.\\n\"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"            + \"Parameters are optional, but at least one must be specified.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"    private final FilterConditions filterConditions;","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"    public FilterCommand(FilterConditions filterConditions) {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"        this.filterConditions \u003d filterConditions;","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"        model.updateFilteredTransactionList(filterConditions.getPredicate());","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"                String.format(Messages.MESSAGE_TRANSACTIONS_LISTED_OVERVIEW, model.getFilteredTransactionList().size()),","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"                TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":126}},{"path":"src/main/java/transact/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" * argument keywords.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"                TabWindow.ADDRESSBOOK);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":10,"-":51}},{"path":"src/main/java/transact/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, TabWindow.CURRENT, true, false);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":18}},{"path":"src/main/java/transact/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DATE_SORTING;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":" * Sorts the transaction list by the specified attributes.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"     * The type of attribute to sort by.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public enum SortType {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        DATE, AMOUNT","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     * Encapsulates all rules to sort by.","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    public static class SortRules {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        private final ArrayList\u003cSortInfo\u003e sortRules;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        public SortRules() {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            sortRules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        public void addSortRule(SortInfo sortInfo) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"            sortRules.add(sortInfo);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"         * Returns a comparator that sorts transactions by the specified rules.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"         *","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"         * @throws CommandException if no sort rules are specified, or invalid sort type is present","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        public Comparator\u003cTransaction\u003e getComparator() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            if (sortRules.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"                throw new CommandException(\"No sort rules specified\");","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"            Comparator\u003cTransaction\u003e allComparators \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"            for (SortInfo sortInfo : sortRules) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"                Comparator\u003cTransaction\u003e comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"                switch (sortInfo.sortType) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"                case DATE:","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"                    comparator \u003d Comparator.comparing(transaction -\u003e transaction.getDate().getDate());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"                    break;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"                case AMOUNT:","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"                    comparator \u003d Comparator.comparing(transaction -\u003e transaction.getAmount().getValue());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"                    break;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"                default:","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"                    throw new CommandException(\"Invalid sort type\");","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"                if (!sortInfo.isAscending) {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"                    comparator \u003d comparator.reversed();","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"                if (allComparators \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"                    allComparators \u003d comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"                    continue;","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"                allComparators \u003d allComparators.thenComparing(comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"            return allComparators;","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"            for (SortInfo sortInfo : sortRules) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"                if (sb.length() \u003e 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"                    sb.append(\", \");","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"                sb.append(sortInfo.sortType.toString().toLowerCase());","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"                sb.append(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"                sb.append(sortInfo.isAscending ? \"ASC\" : \"DESC\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"            return sb.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"     * Encapsulates a single rule to sort by, including attribute to sort by and sort direction.","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"    public static class SortInfo {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"        private final SortType sortType;","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"        private final boolean isAscending;","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"         * Creates a new {@code SortInfo} with the specified {@code sortType} and","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"         * whether it is ascending.","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"        public SortInfo(SortType sortType, boolean isAscending) {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"            this.sortType \u003d sortType;","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"            this.isAscending \u003d isAscending;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"    public static final String SORT_DIRECTION_PHRASE \u003d \"\u003casc or desc\u003e\";","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts transactions by attributes. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_DATE_SORTING + SORT_DIRECTION_PHRASE + \"] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"            + \"[\" + PREFIX_AMOUNT + SORT_DIRECTION_PHRASE + \"]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"            + \"Parameters are optional, but at least one must be specified.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Transactions sorted by: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"    private final SortRules sortRules;","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a SortCommand to sort the transaction list by the specified","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"     * {@code sortRules}.","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"    public SortCommand(SortRules sortRules) {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"        this.sortRules \u003d sortRules;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"        model.updateFilteredTransactionList(sortRules.getComparator());","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sortRules),","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"                MainWindow.TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bombbird2001":139}},{"path":"src/main/java/transact/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_TRANSACTIONS;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS_STAFF \u003d \"Listed all staff\";","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS_TRANSACTIONS \u003d \"Listed all transactions\";","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_SUCCESS_OVERVIEW \u003d \"Showed transaction overview\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays list of staff, transactions, or overview of transactions. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"            + \"Parameters: staff/s (for staff), transaction/t (for transactions), overview/o (for overview)\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    private final TabWindow type;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public ViewCommand(TabWindow type) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        switch (type) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        case ADDRESSBOOK:","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"            return new CommandResult(MESSAGE_SUCCESS_STAFF, TabWindow.ADDRESSBOOK);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        case TRANSACTIONS:","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            model.updateFilteredTransactionList(PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            return new CommandResult(MESSAGE_SUCCESS_TRANSACTIONS, TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        case OVERVIEW:","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"            return new CommandResult(MESSAGE_SUCCESS_OVERVIEW, TabWindow.OVERVIEW);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        default:","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            return new CommandResult(MESSAGE_USAGE, TabWindow.CURRENT);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            return true;","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        return type \u003d\u003d otherViewCommand.type;","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"cxo05":2,"-":26,"Bombbird2001":33}},{"path":"src/main/java/transact/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands.exceptions;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.Command;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"     * Constructs a new {@code CommandException} with the specified detail","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     * {@code message} and {@code cause}.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":15}},{"path":"src/main/java/transact/logic/parser/AddStaffCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":" * Parses input arguments and creates a new AddStaffCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"public class AddStaffCommandParser implements Parser\u003cAddStaffCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     * and returns an AddStaffCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    public AddStaffCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStaffCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        return new AddStaffCommand(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"     * in the given","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":56,"Bombbird2001":8}},{"path":"src/main/java/transact/logic/parser/AddTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_STAFF;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":" * Parses input arguments and creates a new AddStaffCommand object","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"public class AddTransactionCommandParser implements Parser\u003cAddTransactionCommand\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * AddStaffCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"     * and returns an AddStaffCommand object for execution.","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"    public AddTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_DESCRIPTION,","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"                PREFIX_AMOUNT, PREFIX_DATE, PREFIX_STAFF);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_DESCRIPTION, PREFIX_AMOUNT, PREFIX_DATE)","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"                    AddTransactionCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TYPE, PREFIX_DESCRIPTION, PREFIX_AMOUNT, PREFIX_DATE);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"        TransactionType transactionType \u003d ParserUtil.parseType(argMultimap.getValue(PREFIX_TYPE).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        Amount amount \u003d ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        Integer personId \u003d -1;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        if (argMultimap.getValue(PREFIX_STAFF).isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"            personId \u003d ParserUtil.parsePersonId(argMultimap.getValue(PREFIX_STAFF).get());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"        return new AddTransactionCommand(transactionType, description, amount, date, personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"     * in the given","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cxo05":14,"Sasmik23":1,"PetrichorPrecipice":51}},{"path":"src/main/java/transact/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.AddTransactionCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.ClearFilterCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.ClearResultBoxCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.ClearSortCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.ClearStaffCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.ClearTransactionCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.Command;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.DeleteStaffCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.EditStaffCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.ExportStaffCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.ExportTransactionCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.FindCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.SortCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"     * @param userInput","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"     *            full user input string","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        case AddStaffCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"            return new AddStaffCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"        case AddTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new AddTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"Sasmik23"},"content":"        case DeleteTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"Sasmik23"},"content":"            return new DeleteTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"        case EditTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new EditTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"        case EditStaffCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"            return new EditStaffCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        case DeleteStaffCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"            return new DeleteStaffCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"AlainS87"},"content":"        case ClearStaffCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"AlainS87"},"content":"            return new ClearStaffCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"AlainS87"},"content":"        case ClearTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"AlainS87"},"content":"            return new ClearTransactionCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"AlainS87"},"content":"        case ClearResultBoxCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"AlainS87"},"content":"            return new ClearResultBoxCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"        case ClearSortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"            return new ClearSortCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"        case ClearFilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"            return new ClearFilterCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Sasmik23"},"content":"        case ExportTransactionCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"Sasmik23"},"content":"            return new ExportTransactionCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Sasmik23"},"content":"        case ExportStaffCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Sasmik23"},"content":"            return new ExportStaffCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AlainS87":21,"cxo05":6,"Sasmik23":11,"-":60,"Bombbird2001":26,"PetrichorPrecipice":8}},{"path":"src/main/java/transact/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":" * Values for a given key are stored in a list, and the insertion ordering is","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":" * maintained.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" * Keys are unique, but the list of argument values may contain duplicate","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" * argument values, i.e. the same argument value","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    /** Prefixes mapped to their respective arguments **/","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"     * If the map previously contained a mapping for the key, the new value is","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     * appended to the list of existing values.","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * @param prefix","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     *            Prefix key with which the specified argument value is to be","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     *            associated","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * @param argValue","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     *            Argument value to be associated with the specified prefix key","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     * If the prefix does not exist or has no values, this will return an empty","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * list.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"     * Modifying the returned list will not affect the underlying data structure of","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"     * the ArgumentMultimap.","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"     * leading/trailing spaces.","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"     * {@code prefixes} appeared more than","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"     * Throws a {@code ParseException} with the provided error message if","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"     * the map contains no mappings","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"    public void verifyNotEmpty(String onEmptyMessage) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"        // Empty if truly empty, or contains 1 element but that element is the end of","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"        // string prefix with empty string","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"        if (argMultimap.isEmpty()","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"                || (argMultimap.size() \u003d\u003d 1 \u0026\u0026 argMultimap.containsKey(new Prefix(\"\")))) {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"            throw new ParseException(onEmptyMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":23,"-":65,"Bombbird2001":13}},{"path":"src/main/java/transact/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * Tokenizes arguments string of the form:","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July} where prefixes","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" * are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * the above example.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":" * 2. Leading and trailing whitespaces of an argument value will be","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":" * discarded.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" * the value of {@code t/}","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * that maps prefixes to their","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * respective argument values. Only the given prefixes will be recognized in the","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * arguments string.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"     * @param argsString","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     *            Arguments string of the form:","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     *            {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * @param prefixes","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     *            Prefixes to tokenize the arguments string with","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"     * @param argsString","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"     *            Arguments string of the form:","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"     *            {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"     * @param prefixes","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"     *            Prefixes to find in the arguments string","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"    public static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"     * Extracts prefixes and their argument values, and returns an","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"     * {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"     * based on their zero-based positions in","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"     * @param argsString","lastModifiedDate":"2023-10-09"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"     *            Arguments string of the form:","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"     *            {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"     * @param prefixPositions","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"     *            Zero-based positions of all prefixes in","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"     *            {@code argsString}","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"     * Returns the trimmed value of the argument in the arguments string specified","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"     * by {@code currentPrefixPosition}.","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"            PrefixPosition currentPrefixPosition,","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"            PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"Bombbird2001"},"content":"    public static class PrefixPosition {","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":43,"-":123,"Bombbird2001":2}},{"path":"src/main/java/transact/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":" * commands","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"public class CliSyntax {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"    /* Prefix definitions */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final Prefix PREFIX_TYPE \u003d new Prefix(\"ty/\");","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final Prefix PREFIX_AMOUNT \u003d new Prefix(\"amt/\");","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"on/\");","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_DATE_SORTING \u003d new Prefix(\"date/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final Prefix PREFIX_STAFF \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_DESCRIPTION_HAS \u003d new Prefix(\"has/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_AFTER_DATE \u003d new Prefix(\"after/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_BEFORE_DATE \u003d new Prefix(\"before/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_MORE_THAN_AMOUNT \u003d new Prefix(\"more/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_LESS_THAN_AMOUNT \u003d new Prefix(\"less/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public static final Prefix PREFIX_BY_PERSON \u003d new Prefix(\"by/\");","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    public static final Prefix PREFIX_DIRECTORY \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":16,"Sasmik23":1,"PetrichorPrecipice":5,"Bombbird2001":7}},{"path":"src/main/java/transact/logic/parser/DeleteStaffCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.DeleteStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Parses input arguments and creates a new DeleteStaffCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class DeleteStaffCommandParser implements Parser\u003cDeleteStaffCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     * DeleteStaffCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * and returns a DeleteStaffCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public DeleteStaffCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"            Integer personId \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"            return new DeleteStaffCommand(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"        } catch (NumberFormatException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStaffCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":21,"Sasmik23":3,"Bombbird2001":7}},{"path":"src/main/java/transact/logic/parser/DeleteTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.DeleteTransactionCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":" * Parses input arguments and creates a new DeleteStaffCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"public class DeleteTransactionCommandParser implements Parser\u003cDeleteTransactionCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"     * DeleteTransactionCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"     * and returns a DeleteTransactionCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    public DeleteTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"            Integer transactionId \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"            return new DeleteTransactionCommand(transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"        } catch (NumberFormatException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTransactionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"cxo05":3,"Sasmik23":28}},{"path":"src/main/java/transact/logic/parser/EditStaffCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":" * Parses input arguments and creates a new EditStaffCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EditStaffCommandParser implements Parser\u003cEditStaffCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"     * EditStaffCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"     * and returns an EditStaffCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"    public EditStaffCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"        Integer personId;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"            personId \u003d Integer.parseInt(argMultimap.getPreamble());","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            if (personId \u003c 0) {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"                        EditStaffCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"        } catch (NumberFormatException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditStaffCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(EditStaffCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"Sasmik23"},"content":"        return new EditStaffCommand(personId, editPersonDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"     * {@code tags} is non-empty.","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"     * parsed into a","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":19,"Sasmik23":4,"-":57,"PetrichorPrecipice":9,"Bombbird2001":4}},{"path":"src/main/java/transact/logic/parser/EditTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"PetrichorPrecipice"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_STAFF;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditTransactionCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditTransactionCommand.EditTransactionDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":" * Parses input arguments and creates a new EditStaffCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EditTransactionCommandParser implements Parser\u003cEditTransactionCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"     * EditStaffCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"     * and returns an EditStaffCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"PetrichorPrecipice"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"    public EditTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"PetrichorPrecipice"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_DESCRIPTION, PREFIX_AMOUNT,","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"                PREFIX_DATE, PREFIX_STAFF);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"        Integer transactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"            transactionId \u003d Integer.parseInt(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        } catch (NumberFormatException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTransactionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"PetrichorPrecipice"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_TYPE, PREFIX_DESCRIPTION, PREFIX_AMOUNT,","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"PetrichorPrecipice"},"content":"                PREFIX_DATE, PREFIX_STAFF);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"        EditTransactionDescriptor editTransactionDescriptor \u003d new EditTransactionDescriptor();","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (argMultimap.getValue(PREFIX_TYPE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"PetrichorPrecipice"},"content":"            editTransactionDescriptor.setType(ParserUtil.parseType(argMultimap.getValue(PREFIX_TYPE).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"            editTransactionDescriptor.setDescription(ParserUtil.parseDescription(argMultimap","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (argMultimap.getValue(PREFIX_AMOUNT).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"PetrichorPrecipice"},"content":"            editTransactionDescriptor.setAmount(ParserUtil.parseAmount(argMultimap.getValue(PREFIX_AMOUNT).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"            editTransactionDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (argMultimap.getValue(PREFIX_STAFF).isPresent()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"            editTransactionDescriptor.setStaffId(ParserUtil.parsePersonId(argMultimap.getValue(PREFIX_STAFF).get()));","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!editTransactionDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(EditStaffCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"        return new EditTransactionCommand(transactionId, editTransactionDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cxo05":7,"PetrichorPrecipice":65}},{"path":"src/main/java/transact/logic/parser/ExportStaffCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DIRECTORY;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.ExportStaffCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":" * Parses args and returns Export Staff Command","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"public class ExportStaffCommandParser implements Parser\u003cExportStaffCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    public ExportStaffCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DIRECTORY);","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        Path exportFilePath \u003d Paths.get(argMultimap.getValue(PREFIX_DIRECTORY).get() + \"/addressBook.json\");","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        return new ExportStaffCommand(exportFilePath);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Sasmik23":22}},{"path":"src/main/java/transact/logic/parser/ExportTransactionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DIRECTORY;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.ExportTransactionCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":" * Parses args and returns Export Transaction Command","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"public class ExportTransactionCommandParser implements Parser\u003cExportTransactionCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    public ExportTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DIRECTORY);","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        Path exportFilePath \u003d Paths.get(argMultimap.getValue(PREFIX_DIRECTORY).get() + \"/transactions.csv\");","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        return new ExportTransactionCommand(exportFilePath);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Sasmik23":21}},{"path":"src/main/java/transact/logic/parser/ExportTransactionParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DIRECTORY;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.commands.ExportTransactionCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":" * Parses args and returns Export Transaction Command","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"public class ExportTransactionParser implements Parser\u003cExportTransactionCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"    public ExportTransactionCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DIRECTORY);","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"        Path exportFilePath \u003d Paths.get(argMultimap.getValue(PREFIX_DIRECTORY).get() + \"/transactions.csv\");","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"        return new ExportTransactionCommand(exportFilePath);","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Sasmik23":21}},{"path":"src/main/java/transact/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AFTER_DATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_BEFORE_DATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_BY_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DESCRIPTION_HAS;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_LESS_THAN_AMOUNT;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_MORE_THAN_AMOUNT;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.FilterCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * FilterCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION_HAS,","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"                PREFIX_AFTER_DATE, PREFIX_BEFORE_DATE, PREFIX_MORE_THAN_AMOUNT, PREFIX_LESS_THAN_AMOUNT,","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"                PREFIX_BY_PERSON, PREFIX_TYPE);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        argMultimap.verifyNotEmpty(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DESCRIPTION_HAS, PREFIX_AFTER_DATE,","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"                PREFIX_BEFORE_DATE, PREFIX_MORE_THAN_AMOUNT, PREFIX_LESS_THAN_AMOUNT,","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"                PREFIX_BY_PERSON, PREFIX_TYPE);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        FilterCommand.FilterConditions filterConditions \u003d new FilterCommand.FilterConditions();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cString\u003e transactionType \u003d argMultimap.getValue(PREFIX_TYPE);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        if (transactionType.isPresent()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            filterConditions.setTransactionType(ParserUtil.parseType(transactionType.get()));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        argMultimap.getValue(PREFIX_DESCRIPTION_HAS).ifPresent(","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"                string -\u003e filterConditions.setDescriptionHas(List.of(string.split(\" \"))));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cString\u003e afterDate \u003d argMultimap.getValue(PREFIX_AFTER_DATE);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        if (afterDate.isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"            filterConditions.setAfterDate(ParserUtil.parseDate(afterDate.get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cString\u003e beforeDate \u003d argMultimap.getValue(PREFIX_BEFORE_DATE);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        if (beforeDate.isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"            filterConditions.setBeforeDate(ParserUtil.parseDate(beforeDate.get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cString\u003e moreThanAmount \u003d argMultimap.getValue(PREFIX_MORE_THAN_AMOUNT);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        if (moreThanAmount.isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"            filterConditions.setMoreThanAmount(ParserUtil.parseAmount(moreThanAmount.get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cString\u003e lessThanAmount \u003d argMultimap.getValue(PREFIX_LESS_THAN_AMOUNT);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        if (lessThanAmount.isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"            filterConditions.setLessThanAmount(ParserUtil.parseAmount(lessThanAmount.get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        Optional\u003cString\u003e byPersonId \u003d argMultimap.getValue(PREFIX_BY_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"        if (byPersonId.isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"            filterConditions.setByPersonId(ParserUtil.parsePersonId(byPersonId.get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"        return new FilterCommand(filterConditions);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":79}},{"path":"src/main/java/transact/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.FindCommand;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     * FindCommand","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     *             if the user input does not conform the expected format","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":10,"-":26}},{"path":"src/main/java/transact/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.Command;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":" * Represents a Parser that is able to parse user input into a {@code Command}","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":" * of type {@code T}.","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"     *             if {@code userInput} does not conform the expected","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     *             format","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":20}},{"path":"src/main/java/transact/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.index.Index;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.StringUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":" * classes.","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"public class ParserUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     *             if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     *             unsigned integer).","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     *             if the given {@code name} is invalid.","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"     *             if the given {@code phone} is invalid.","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"     *             if the given {@code address} is invalid.","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"     *             if the given {@code email} is invalid.","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-09"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"     *             if the given {@code tag} is invalid.","lastModifiedDate":"2023-10-09"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"        return tagSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Parses a {@code String type} into a {@code TransactionType}.","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"PetrichorPrecipice"},"content":"     *             if the given {@code type} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static TransactionType parseType(String type) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(type);","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!TransactionType.isValidType(trimmedType)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(TransactionType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"PetrichorPrecipice"},"content":"        return TransactionType.getType(trimmedType);","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"PetrichorPrecipice"},"content":"     *             if the given {@code description} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"PetrichorPrecipice"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Parses a {@code String amount} into a {@code Amount}.","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"PetrichorPrecipice"},"content":"     *             if the given {@code amount} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static Amount parseAmount(String amount) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(amount);","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedAmount \u003d amount.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!Amount.isValidAmount(trimmedAmount)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"PetrichorPrecipice"},"content":"        return new Amount(Double.parseDouble(trimmedAmount));","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Parses a {@code String Date} into a {@code Date}.","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"PetrichorPrecipice"},"content":"     *             if the given {@code Date} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"PetrichorPrecipice"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"PetrichorPrecipice"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"PetrichorPrecipice"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"AlainS87"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"cxo05"},"content":"     * Parses a {@code String id} into a {@code Integer}.","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"cxo05"},"content":"     * @throws NumberFormatException","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"cxo05"},"content":"     *             if the given {@code id} is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"cxo05"},"content":"    public static Integer parsePersonId(String id) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(id);","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"PetrichorPrecipice"},"content":"        String trimmedID \u003d id.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"cxo05"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"cxo05"},"content":"            return Integer.parseInt(trimmedID);","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"cxo05"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"cxo05"},"content":"            throw new ParseException(PersonId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"AlainS87":1,"cxo05":146,"PetrichorPrecipice":74}},{"path":"src/main/java/transact/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":1,"-":41}},{"path":"src/main/java/transact/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_AMOUNT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_DATE_SORTING;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.SortCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE_SORTING,","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"                PREFIX_AMOUNT);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        argMultimap.verifyNotEmpty(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"                SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE_SORTING, PREFIX_AMOUNT);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        List\u003cArgumentTokenizer.PrefixPosition\u003e prefixPositions \u003d ArgumentTokenizer.findAllPrefixPositions(args,","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"                PREFIX_DATE_SORTING, PREFIX_AMOUNT);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        prefixPositions.sort(Comparator.comparingInt(ArgumentTokenizer.PrefixPosition::getStartPosition));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        SortCommand.SortRules sortRules \u003d new SortCommand.SortRules();","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        for (ArgumentTokenizer.PrefixPosition prefixPosition : prefixPositions) {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"            String ascDesc \u003d argMultimap.getValue(prefixPosition.getPrefix()).get();","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"            boolean isAscending \u003d true;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"            switch (ascDesc.toLowerCase()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            case \"asc\":","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"            case \"desc\":","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"                isAscending \u003d false;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"            default:","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"                        SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"            switch (prefixPosition.getPrefix().getPrefix()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"            case \"date/\":","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"                sortRules.addSortRule(new SortCommand.SortInfo(SortCommand.SortType.DATE, isAscending));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"            case \"amt/\":","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"                sortRules.addSortRule(new SortCommand.SortInfo(SortCommand.SortType.AMOUNT, isAscending));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"            default:","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"                        SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        return new SortCommand(sortRules);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bombbird2001":58}},{"path":"src/main/java/transact/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String[] argList \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        if (argList.length \u003c 1) {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        TabWindow type;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        switch (argList[0].toLowerCase()) {","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"        case \"staff\":","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        case \"s\":","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"            type \u003d TabWindow.ADDRESSBOOK;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"            break;","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        case \"transaction\":","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        case \"t\":","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"            type \u003d TabWindow.TRANSACTIONS;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"            break;","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        case \"overview\":","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        case \"o\":","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            type \u003d TabWindow.OVERVIEW;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        default:","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new ViewCommand(type);","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"-":23,"Bombbird2001":20}},{"path":"src/main/java/transact/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser.exceptions;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":15}},{"path":"src/main/java/transact/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":" * Wraps person data at the address-book level","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":" * Duplicates are not allowed (by .isSameEntry comparison)","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    private final UniqueEntryMap\u003cPersonId, Person\u003e persons;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    private ObservableList\u003cPerson\u003e internalUnmodifiablePersonList;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"     * between constructors. See","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * ways to avoid duplication","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     * among constructors.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"    {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        persons \u003d new UniqueEntryMap\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"        personList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        internalUnmodifiablePersonList \u003d FXCollections.unmodifiableObservableList(personList);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"        getPersonMap()","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"                .addListener((MapChangeListener.Change\u003c? extends PersonId, ? extends Person\u003e change) -\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"                    boolean removed \u003d change.wasRemoved();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"                    if (removed !\u003d change.wasAdded()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"                        if (removed) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Sasmik23"},"content":"                            // no put for existing key","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"                            // remove pair completely","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"                            personList.remove(change.getValueRemoved());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Sasmik23"},"content":"                        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Sasmik23"},"content":"                            // add new entry","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Sasmik23"},"content":"                            personList.add(change.getValueAdded());","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Sasmik23"},"content":"                        }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"                    } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"                        // replace existing entry","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"                        Person entry \u003d change.getValueAdded();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"                        for (int i \u003d 0; i \u003c personList.size(); i++) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Sasmik23"},"content":"                            if (personList.get(i).getPersonId() \u003d\u003d entry.getPersonId()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"                                personList.set(i, entry);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"                            }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"                        }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"                    }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"                });","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"        this();","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"Sasmik23"},"content":"    public void setPersons(Map\u003cPersonId, Person\u003e persons) {","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        this.persons.setEntries(persons);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"Sasmik23"},"content":"        setPersons(newData.getPersonMap());","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"    //// person-level operations","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"     * the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"Sasmik23"},"content":"    public boolean hasPerson(PersonId personId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Sasmik23"},"content":"        requireNonNull(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Sasmik23"},"content":"        return persons.contains(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"Sasmik23"},"content":"        persons.add(p.getPersonId(), p);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"     * existing person in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"Sasmik23"},"content":"    public void setPerson(PersonId targetId, Person editedPerson) {","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"Sasmik23"},"content":"        persons.setEntry(targetId, editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"Sasmik23"},"content":"    public Person removePerson(PersonId key) {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Sasmik23"},"content":"        return persons.remove(key);","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"    //// util methods","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"cxo05"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"Sasmik23"},"content":"    public ObservableMap\u003cPersonId, Person\u003e getPersonMap() {","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"Sasmik23"},"content":"        return persons.asUnmodifiableObservableMap();","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"Bombbird2001"},"content":"        return internalUnmodifiablePersonList;","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"cxo05"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"cxo05"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"cxo05"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"cxo05"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"        return persons.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":119,"Sasmik23":45,"Bombbird2001":9}},{"path":"src/main/java/transact/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Person {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** Person {@code Predicate} that always evaluate to false */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_HIDE_ALL_PERSONS \u003d unused -\u003e false;","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** Transaction {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Predicate\u003cTransaction\u003e PREDICATE_SHOW_ALL_TRANSACTIONS \u003d unused -\u003e true;","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /** Transaction {@code Predicate} that always evaluate to false */","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Predicate\u003cTransaction\u003e PREDICATE_HIDE_ALL_TRANSACTIONS \u003d unused -\u003e false;","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    /** Transaction {@code Comparator} that sorts by id in ascending order */","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    Comparator\u003cTransaction\u003e COMPARATOR_ASC_BY_ID \u003d Comparator.comparing(Transaction::getTransactionId);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"     * Returns the user prefs\u0027 transaction book file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    Path getTransactionBookFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"     * Sets the user prefs\u0027 transaction book file path.","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    void setTransactionBookFilePath(Path transactionBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"    public void setExportFilePath(Path path);","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"Sasmik23"},"content":"    public Path getExportFilePath();","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"     * Replaces transaction book data with the data in {@code transactionBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"    void setTransactionBook(ReadOnlyTransactionBook transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"    /** Returns the TransactionBook */","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"    ReadOnlyTransactionBook getTransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"Sasmik23"},"content":"     * Returns true if a person with the same id as {@code personId} exists in","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"     * the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"Sasmik23"},"content":"    boolean hasPerson(PersonId personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"Sasmik23"},"content":"     * Deletes the given person with {@code personId}.","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"Sasmik23"},"content":"    Person deletePerson(PersonId target);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"Sasmik23"},"content":"     * Replaces the given person {@code targetId} with {@code editedPerson}.","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Sasmik23"},"content":"     * {@code targetId} must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"     * existing person in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"Sasmik23"},"content":"    void setPerson(PersonId targetId, Person editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Sasmik23"},"content":"     * Returns the person with {@code targetId}.","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Sasmik23"},"content":"     * {@code targetId} must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"    Person getPerson(Integer targetId);","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"     * Returns true if a transaction with the same id as {@code transactionId}","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"     * exists in the transaction book.","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"    boolean hasTransaction(TransactionId transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"     * Deletes the given transaction with {@code transactionId}.","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"     * The transaction must exist in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"    Transaction deleteTransaction(TransactionId transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Adds the given transaction.","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"     * {@code transaction} must not already exist in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"PetrichorPrecipice"},"content":"    void addTransaction(Transaction transaction);","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"     * Replaces the given transaction {@code targetId} with","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"     * {@code editedTransaction}.","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"Sasmik23"},"content":"     * {@code targetId} must exist in the transaction book.","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"     * The person identity of {@code editedTransaction} must not be the same as","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"     * another","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"     * existing transaction in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"    void setTransaction(TransactionId targetId, Transaction editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"     * Returns the transaction with {@code transactionId}.","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"     * {@code transactionId} must exist in the transaction book.","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"    Transaction getTransaction(TransactionId transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"Sasmik23"},"content":"    /** Returns an unmodifiable view of the filtered person map */","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"Sasmik23"},"content":"    ObservableMap\u003cPersonId, Person\u003e getPersonMap();","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"     * {@code predicate}.","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"     * @throws NullPointerException","lastModifiedDate":"2023-10-09"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"     *             if {@code predicate} is null.","lastModifiedDate":"2023-10-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered transaction list */","lastModifiedDate":"2023-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    ObservableList\u003cTransaction\u003e getFilteredTransactionList();","lastModifiedDate":"2023-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":174,"author":{"gitId":"cxo05"},"content":"    /** Returns an unmodifiable view of the filtered transaction list */","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"    ObservableMap\u003cTransactionId, Transaction\u003e getTransactionMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"     * Updates the filter of the filtered transaction list to filter by the given","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"     * {@code predicate}.","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"     * @throws NullPointerException","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"     *             if {@code predicate} is null.","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate);","lastModifiedDate":"2023-09-21"},{"lineNumber":185,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"Bombbird2001"},"content":"     * Updates the comparator of the filtered transaction list to sort by the","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Bombbird2001"},"content":"     * given {@code comparator}.","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"Bombbird2001"},"content":"     * @throws NullPointerException","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Bombbird2001"},"content":"     *             if {@code comparator} is null.","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"Bombbird2001"},"content":"    void updateFilteredTransactionList(Comparator\u003cTransaction\u003e comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cxo05":36,"Sasmik23":21,"-":86,"Bombbird2001":37,"PetrichorPrecipice":14}},{"path":"src/main/java/transact/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    private final TransactionBook transactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cTransaction\u003e filteredTransactions;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    private final SortedList\u003cTransaction\u003e sortedTransactions;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTransactionBook transactionBook,","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"            ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"        this.transactionBook \u003d new TransactionBook(transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        filteredTransactions \u003d new FilteredList\u003c\u003e(this.transactionBook.getTransactionList());","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        sortedTransactions \u003d new SortedList\u003c\u003e(filteredTransactions, COMPARATOR_ASC_BY_ID);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        this(new AddressBook(), new TransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"    public Path getTransactionBookFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"        return userPrefs.getTransactionBookFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"    public void setTransactionBookFilePath(Path transactionBookFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(transactionBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        userPrefs.setTransactionBookFilePath(transactionBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"Sasmik23"},"content":"    public void setExportFilePath(Path path) {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"Sasmik23"},"content":"        requireAllNonNull(path);","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"Sasmik23"},"content":"        userPrefs.setExportFilePath(path);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"Sasmik23"},"content":"    public Path getExportFilePath() {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"Sasmik23"},"content":"        return userPrefs.getExportFilePath();","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"Sasmik23"},"content":"    public boolean hasPerson(PersonId personId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Sasmik23"},"content":"        requireNonNull(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"Sasmik23"},"content":"        return addressBook.hasPerson(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"Sasmik23"},"content":"    public Person deletePerson(PersonId targetId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Sasmik23"},"content":"        return addressBook.removePerson(targetId);","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"Sasmik23"},"content":"    public void setPerson(PersonId targetId, Person editedPerson) {","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"Sasmik23"},"content":"        requireAllNonNull(targetId, editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"Sasmik23"},"content":"        addressBook.setPerson(targetId, editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"    public Person getPerson(Integer targetId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"        return addressBook.getPersonMap().entrySet().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"                .filter(e -\u003e e.getKey().getValue() \u003d\u003d targetId)","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"                .findFirst()","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"                .map(e -\u003e e.getValue())","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"                .orElse(Person.NULL_PERSON);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"Bombbird2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TransactionBook","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"Bombbird2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"Bombbird2001"},"content":"    public void setTransactionBook(ReadOnlyTransactionBook transactionBook) {","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"Bombbird2001"},"content":"        this.transactionBook.resetData(transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBook getTransactionBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"Bombbird2001"},"content":"        return transactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"    public boolean hasTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"        return transactionBook.hasTransaction(transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":175,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":176,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"    public Transaction deleteTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"        return transactionBook.removeTransaction(transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"    public Transaction getTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"cxo05"},"content":"        return transactionBook.getTransactionMap().get(transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":185,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":186,"author":{"gitId":"PetrichorPrecipice"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":187,"author":{"gitId":"PetrichorPrecipice"},"content":"    public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-11"},{"lineNumber":188,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(transaction);","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction);","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":191,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"cxo05"},"content":"    public void setTransaction(TransactionId transactionId, Transaction editedTransaction) {","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(transactionId, editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"cxo05"},"content":"        transactionBook.setTransaction(transactionId, editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":197,"author":{"gitId":"Bombbird2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"Bombbird2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":201,"author":{"gitId":"cxo05"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"cxo05"},"content":"     * internal list of","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":205,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"Sasmik23"},"content":"    public ObservableMap\u003cPersonId, Person\u003e getPersonMap() {","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"Sasmik23"},"content":"        return addressBook.getPersonMap();","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":222,"author":{"gitId":"cxo05"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Transaction List Accessors","lastModifiedDate":"2023-10-11"},{"lineNumber":223,"author":{"gitId":"cxo05"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"cxo05"},"content":"     * Returns an unmodifiable view of the list of {@code Transaction} backed by the","lastModifiedDate":"2023-10-11"},{"lineNumber":226,"author":{"gitId":"cxo05"},"content":"     * internal list of","lastModifiedDate":"2023-10-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"cxo05"},"content":"    public ObservableMap\u003cTransactionId, Transaction\u003e getTransactionMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"cxo05"},"content":"        return transactionBook.getTransactionMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":236,"author":{"gitId":"Bombbird2001"},"content":"        return sortedTransactions;","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2023-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        filteredTransactions.setPredicate(predicate);","lastModifiedDate":"2023-09-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":245,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"Bombbird2001"},"content":"    public void updateFilteredTransactionList(Comparator\u003cTransaction\u003e comparator) {","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"Bombbird2001"},"content":"        sortedTransactions.setComparator(comparator);","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":264,"author":{"gitId":"Bombbird2001"},"content":"                \u0026\u0026 transactionBook.equals(otherModelManager.transactionBook)","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-09-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredTransactions.equals(otherModelManager.filteredTransactions);","lastModifiedDate":"2023-09-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cxo05":35,"Sasmik23":28,"-":142,"Bombbird2001":53,"PetrichorPrecipice":11}},{"path":"src/main/java/transact/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"     * Returns an unmodifiable view of the persons list converted from the map.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"     * Returns an unmodifiable view of the person map.","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    ObservableMap\u003cPersonId, Person\u003e getPersonMap();","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":16,"Sasmik23":8}},{"path":"src/main/java/transact/model/ReadOnlyTransactionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Unmodifiable view of a transaction book","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public interface ReadOnlyTransactionBook {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"     * Returns an unmodifiable view of the transaction map.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"    ObservableMap\u003cTransactionId, Transaction\u003e getTransactionMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"     * Returns an unmodifiable view of the transaction list converted from the map.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    ObservableList\u003cTransaction\u003e getTransactionList();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"cxo05":8,"Bombbird2001":15}},{"path":"src/main/java/transact/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    Path getTransactionBookFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"    Path getExportFilePath();","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"Sasmik23":2,"-":14,"Bombbird2001":2}},{"path":"src/main/java/transact/model/StringContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.util.StringUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a string matches any of the keywords given.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class StringContainsKeywordsPredicate implements Predicate\u003cString\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public StringContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(String string) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(string, keyword));","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof StringContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        StringContainsKeywordsPredicate otherStringContainsKeywordsPredicate \u003d (StringContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        return keywords.equals(otherStringContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":44}},{"path":"src/main/java/transact/model/TransactionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":" * Wraps transaction data at the transaction-book level","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":" * Duplicates are not allowed (by .isSameEntry comparison)","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"public class TransactionBook implements ReadOnlyTransactionBook {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    private final UniqueEntryMap\u003cTransactionId, Transaction\u003e transactions;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"    private ObservableList\u003cTransaction\u003e transactionList;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        transactions \u003d new UniqueEntryMap\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"        transactionList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"        getTransactionMap()","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"                .addListener((MapChangeListener.Change\u003c? extends TransactionId, ? extends Transaction\u003e change) -\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"                    boolean removed \u003d change.wasRemoved();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"                    if (removed !\u003d change.wasAdded()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"                        if (removed) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"                            // no put for existing key","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"                            // remove pair completely","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                            transactionList.remove(change.getValueRemoved());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"                        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"                            // add new entry","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"                            transactionList.add(change.getValueAdded());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"                    } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"                        // replace existing entry","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"                        Transaction entry \u003d change.getValueAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"                        for (int i \u003d 0; i \u003c transactionList.size(); i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"                            if (transactionList.get(i).getTransactionId() \u003d\u003d entry.getTransactionId()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"                                transactionList.set(i, entry);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"                            }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"                        }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"                    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"                });","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a TransactionBook using the Transactions in the {@code toBeCopied}","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBook(ReadOnlyTransactionBook toBeCopied) {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        this();","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"     * Replaces the contents of the transaction list with {@code transactions}.","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"     * {@code transactions} must not contain duplicate transactions.","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"    public void setTransactions(Map\u003cTransactionId, Transaction\u003e transactions) {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        this.transactions.setEntries(transactions);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"     * Resets the existing data of this {@code TransactionBook} with","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"     * {@code newData}.","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"    public void resetData(ReadOnlyTransactionBook newData) {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"        setTransactions(newData.getTransactionMap());","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"    //// transaction-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"     * Returns true if a transaction with the same identity as {@code transaction}","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"     * exists in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"    public boolean hasTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        requireNonNull(transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"        return transactions.contains(transactionId);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"     * Adds a transaction to the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"     * The transaction must not already exist in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    public void addTransaction(Transaction t) {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"        transactions.add(t.getTransactionId(), t);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"     * Replaces the given transaction {@code target} in the list with","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"     * {@code editedTransaction}.","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"     * {@code target} must exist in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"     * The transaction identity of {@code editedTransaction} must not be the","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"     * same as another existing transaction in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"    public void setTransaction(TransactionId id, Transaction editedTransaction) {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(editedTransaction);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"        transactions.setEntry(id, editedTransaction);","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"     * Removes {@code key} from this {@code TransactionBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"     * {@code key} must exist in the transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"    public Transaction removeTransaction(TransactionId key) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"        return transactions.remove(key);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"    //// util methods","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"                .add(\"transactions\", transactions)","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"    public ObservableMap\u003cTransactionId, Transaction\u003e getTransactionMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"        return transactions.asUnmodifiableObservableMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"    public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"        return transactionList;","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Bombbird2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof TransactionBook)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBook otherTransactionBook \u003d (TransactionBook) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"Bombbird2001"},"content":"        return transactions.equals(otherTransactionBook.transactions);","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"Bombbird2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"Bombbird2001"},"content":"        return transactions.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"cxo05":50,"Bombbird2001":113}},{"path":"src/main/java/transact/model/UniqueEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.Entry;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.exceptions.EntryNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":" * A list of entries that enforces uniqueness between its elements and does not","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":" * allow nulls.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":" * An entry is considered unique by comparing using","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":" * {@code Entry#isSameEntry(Entry)}. As such, adding and updating of","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":" * entries uses Entry#isSameEntry(Entry) for equality so as to ensure that","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":" * the entry being added or updated is","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":" * unique in terms of identity in the UniqueEntryList. However, the removal of","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":" * an entry uses Entry#equals(Object) so","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":" * as to ensure that the entry with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":" *","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":" * @see Entry#isSameEntry(Entry)","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"public class UniqueEntryList\u003cE extends Entry\u003e implements Iterable\u003cE\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    private final ObservableList\u003cE\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    private final ObservableList\u003cE\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     * Returns true if the list contains an equivalent entry as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    public boolean contains(E toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEntry);","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"     * Adds an entry to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"     * The entry must not already exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    public void add(E toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"     * Replaces the entry {@code target} in the list with {@code editedEntry}.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"     * The identity of {@code editedEntry} must not be the same as another","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"     * existing entry in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"    public void setEntry(E target, E editedEntry) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"        requireAllNonNull(target, editedEntry);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        if (!target.isSameEntry(editedEntry) \u0026\u0026 contains(editedEntry)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        internalList.set(index, editedEntry);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"     * Removes the equivalent entry from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"     * The entry must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"    public void remove(E toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"    public void setEntries(UniqueEntryList\u003c? extends E\u003e replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"     * Replaces the contents of this list with {@code entries}.","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"     * {@code entries} must not contain duplicate entries.","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"    public void setEntries(List\u003c? extends E\u003e entries) {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"        requireAllNonNull(entries);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        if (!entriesAreUnique(entries)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"        internalList.setAll(entries);","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"    public ObservableList\u003cE\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"Bombbird2001"},"content":"    public Iterator\u003cE\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"Bombbird2001"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"Bombbird2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof UniqueEntryList\u003c?\u003e)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003c?\u003e otherUniqueEntryList \u003d (UniqueEntryList\u003c?\u003e) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"        return internalList.equals(otherUniqueEntryList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"     * Returns true if {@code entries} contains only unique entries.","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"    private boolean entriesAreUnique(List\u003c? extends E\u003e entries) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"        for (int i \u003d 0; i \u003c entries.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"            for (int j \u003d i + 1; j \u003c entries.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"                if (entries.get(i).isSameEntry(entries.get(j))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"Bombbird2001"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"Bombbird2001"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Bombbird2001":156}},{"path":"src/main/java/transact/model/UniqueEntryMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import java.util.TreeMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.entry.Entry;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.entry.exceptions.EntryNotFoundException;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" * UniqueEntryHashmap class","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"public class UniqueEntryMap\u003cK, V extends Entry\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    private final ObservableMap\u003cK, V\u003e internalMap \u003d FXCollections.observableMap(new TreeMap\u003c\u003e());","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"    private final ObservableMap\u003cK, V\u003e internalUnmodifiableMap \u003d FXCollections","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"            .unmodifiableObservableMap(internalMap);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * Returns true if the map contains an equivalent entry as the given argument.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    public boolean contains(V toCheck) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"        return internalMap.values().stream().anyMatch(toCheck::isSameEntry);","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * Returns true if the map contains the key as the given argument.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"    public boolean contains(K key) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        requireNonNull(key);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"        return internalMap.containsKey(key);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"     * Adds an entry to the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"     * The entry must not already exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"    public void add(K key, V toAdd) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(key, toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        if (contains(toAdd) || contains(key)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        internalMap.put(key, toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * Replaces the entry {@code target} in the list with {@code editedEntry}.","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"     * The identity of {@code editedEntry} must not be the same as another","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     * existing entry in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"    public void setEntry(K target, V editedEntry) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(target, editedEntry);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        internalMap.put(target, editedEntry);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"     * Removes the equivalent entry from the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"     * The entry must exist in the list.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"    public V remove(K keyToRemove) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"        requireNonNull(keyToRemove);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"        V v \u003d internalMap.remove(keyToRemove);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"        if (v \u003d\u003d null) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"            throw new EntryNotFoundException();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"        return v;","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"    public void setEntries(UniqueEntryMap\u003c? extends K, ? extends V\u003e replacement) {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"        internalMap.clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"        internalMap.putAll(replacement.internalMap);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"     * Replaces the contents of this list with {@code entries}.","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"     * {@code entries} must not contain duplicate entries.","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"    public void setEntries(Map\u003c? extends K, ? extends V\u003e entries) {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"        requireAllNonNull(entries);","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        if (!entriesAreUnique(entries)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"            throw new DuplicateEntryException();","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"        internalMap.clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"        internalMap.putAll(entries);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"     * Returns the backing map as an unmodifiable {@code ObservableMap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"    public ObservableMap\u003cK, V\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof UniqueEntryMap\u003c?, ?\u003e)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryMap\u003c?, ?\u003e otherUniqueEntryMap \u003d (UniqueEntryMap\u003c?, ?\u003e) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"        return internalMap.equals(otherUniqueEntryMap.internalMap);","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"        return internalMap.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"        return internalMap.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"     * Returns true if {@code entries} contains only unique entries.","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"    private boolean entriesAreUnique(Map\u003c? extends K, ? extends V\u003e entries) {","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"        List\u003c? extends V\u003e allLists \u003d new ArrayList\u003c\u003e(entries.values());","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"        for (int i \u003d 0; i \u003c allLists.size() - 1; i++) {","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"            for (int j \u003d i + 1; j \u003c allLists.size(); j++) {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"                if (allLists.get(i).isSameEntry(allLists.get(j))) {","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"Bombbird2001"},"content":"                    return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"                }","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"        return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"cxo05":120,"Bombbird2001":24}},{"path":"src/main/java/transact/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    private Path transactionBookFilePath \u003d Paths.get(\"data\", \"transactionbook.csv\");","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    private Path exportFilePath \u003d Paths.get(\"export\");","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        setTransactionBookFilePath(newUserPrefs.getTransactionBookFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"        setExportFilePath(newUserPrefs.getExportFilePath());","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"    public Path getTransactionBookFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        return transactionBookFilePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    public void setTransactionBookFilePath(Path transactionBookFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        requireNonNull(transactionBookFilePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        this.transactionBookFilePath \u003d transactionBookFilePath;","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Sasmik23"},"content":"    public Path getExportFilePath() {","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"Sasmik23"},"content":"        return exportFilePath;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"    public void setExportFilePath(Path exportFilePath) {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"        requireNonNull(exportFilePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"        this.exportFilePath \u003d exportFilePath;","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"Sasmik23":11,"-":84,"Bombbird2001":11}},{"path":"src/main/java/transact/model/entry/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.entry;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":" * Represents an entry that can be stored in the address/transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"public interface Entry {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"     * Returns true if both entries have the same identity. The exact way of","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"     * checking identity is defined in the implementation itself, but is","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"     * likely to be a weaker form of equality than {@code equals(Object)}.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"     * Returns true if both objects have the same identity.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"     * @param otherEntry The other entry to compare with.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    boolean isSameEntry(Entry otherEntry);","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Bombbird2001":17}},{"path":"src/main/java/transact/model/entry/exceptions/DuplicateEntryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.entry.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":" * Signals that the operation will result in duplicate entries (Persons,","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":" * transactions are considered duplicates if they have the same identity).","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"public class DuplicateEntryException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"    public DuplicateEntryException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"        super(\"Operation would result in duplicate entries\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Bombbird2001":11}},{"path":"src/main/java/transact/model/entry/exceptions/EntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.entry.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":" * Signals that the operation is unable to find the specified entry.","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"public class EntryNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Bombbird2001":7}},{"path":"src/main/java/transact/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * {@link #isValidAddress(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * @param address","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     *            A valid address.","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":6,"-":61}},{"path":"src/main/java/transact/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     * @param email","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     *            A valid email address.","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":76}},{"path":"src/main/java/transact/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * @param name","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     *            A valid name.","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":61}},{"path":"src/main/java/transact/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.StringContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private final StringContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"        predicate \u003d new StringContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        return predicate.test(person.getName().fullName);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        return Objects.equals(otherNameContainsKeywordsPredicate.predicate, predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        return new ToStringBuilder(this).add(\"predicate\", predicate).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":35,"Bombbird2001":7}},{"path":"src/main/java/transact/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.Entry;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":" * immutable.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"public class Person implements Entry {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public static final Person NULL_PERSON \u003d new Person() {","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"        public Name getName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"Method should not be called\");","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"        public Address getAddress() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"Method should not be called\");","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"        public Phone getPhone() {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"Method should not be called\");","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"        public Email getEmail() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"Method should not be called\");","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"        public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"Method should not be called\");","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"            return other \u003d\u003d this;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"        public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"            return \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    };","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"    // Identity fields","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"    private final PersonId personId;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"    private final Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"    private final Email email;","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"    // Data fields","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"    private final Address address;","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"     * For empty or null person.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"    private Person() {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        name \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"        phone \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"        email \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"        address \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"        personId \u003d null;","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"Sasmik23"},"content":"    public Person(PersonId personId, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Sasmik23"},"content":"        requireAllNonNull(personId, name, phone, email, address, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Sasmik23"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"     * Creates new Person","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Sasmik23"},"content":"     * @param name","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Sasmik23"},"content":"     * @param phone","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Sasmik23"},"content":"     * @param email","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Sasmik23"},"content":"     * @param address","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Sasmik23"},"content":"     * @param tags","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Sasmik23"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Sasmik23"},"content":"        this(new PersonId(), name, phone, email, address, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Sasmik23"},"content":"    public PersonId getPersonId() {","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Sasmik23"},"content":"        return personId;","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"        return name;","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"        return phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"        return email;","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"        return address;","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"    public boolean isSameEntry(Entry otherEntry) {","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"        if (otherEntry \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"        if (!(otherEntry instanceof Person)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"        Person otherPerson \u003d (Person) otherEntry;","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"        return otherPerson.getPersonId().equals(personId);","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"cxo05"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"cxo05"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"Sasmik23"},"content":"        return personId.equals(otherPerson.personId)","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Sasmik23"},"content":"                \u0026\u0026 name.equals(otherPerson.name)","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"Sasmik23"},"content":"        return Objects.hash(personId, name, phone, email, address, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"cxo05"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"Sasmik23"},"content":"                .add(\"id\", personId)","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"cxo05"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"cxo05"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"cxo05"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"cxo05"},"content":"                .add(\"address\", address)","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"cxo05"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"cxo05"},"content":"                .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":156,"Sasmik23":25,"Bombbird2001":12}},{"path":"src/main/java/transact/model/person/PersonId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sasmik23"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":" * Represents a unique person ID in the system.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":" * Guarantees: immutable; is valid as declared in constructors","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Sasmik23"},"content":"public class PersonId implements Comparable\u003cPersonId\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Person ID should be a unique non-negative number\";","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Sasmik23"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Sasmik23"},"content":"    private static TreeSet\u003cInteger\u003e usedIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Sasmik23"},"content":"    public final Integer value;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"     * Constructs a {@code PersonId}.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"    public PersonId() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"        this(usedIds.isEmpty() ? 0 : usedIds.last() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"     * Constructs a {@code PersonId} with specified {@code id}","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"    public PersonId(Integer id) {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        checkArgument(isValidPersonId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"        value \u003d id;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"        usedIds.add(value);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"     * Constructs a {@code PersonId} with specified {@code id}","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"    public PersonId(String id) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"        this(parsePersonId(id));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"     * Parse Person ID from string.","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Sasmik23"},"content":"    public static Integer parsePersonId(String test) {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Sasmik23"},"content":"        checkArgument(test.matches(VALIDATION_REGEX), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Sasmik23"},"content":"        return Integer.parseInt(test);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Sasmik23"},"content":"     * Returns true if a given integer is a valid Person ID.","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    public static boolean isValidPersonId(Integer test) {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Sasmik23"},"content":"        return !usedIds.contains(test);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"     * Free up {@code usedId}, allowing it to be used when Person object is","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Sasmik23"},"content":"     * deleted","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"     * @param usedId","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Sasmik23"},"content":"     *            Id that will not be used anymore","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Sasmik23"},"content":"    public static void freeUsedPersonIds(Integer usedId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Sasmik23"},"content":"        usedIds.remove(usedId);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Sasmik23"},"content":"    public Integer getValue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Sasmik23"},"content":"        return value;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Sasmik23"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"        return value.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Sasmik23"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Sasmik23"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Sasmik23"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"Sasmik23"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof PersonId)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"Sasmik23"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"        PersonId otherId \u003d (PersonId) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"Sasmik23"},"content":"        return value.equals(otherId.value);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Sasmik23"},"content":"    public int compareTo(PersonId otherId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Sasmik23"},"content":"        return this.value.compareTo(otherId.getValue());","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Sasmik23"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Sasmik23"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Sasmik23"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Sasmik23"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"cxo05":1,"Sasmik23":100,"Bombbird2001":4}},{"path":"src/main/java/transact/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"     * @param phone","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     *            A valid phone number.","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":55}},{"path":"src/main/java/transact/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":" * Guarantees: immutable; name is valid as declared in","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * {@link #isValidTagName(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * @param tagName","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     *            A valid tag name.","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":6,"-":58}},{"path":"src/main/java/transact/model/transaction/Transaction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.Entry;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Transaction in the address book.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public class Transaction implements Entry {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"This Transaction does not have a linked staff\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"    private final TransactionId transactionId;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"    private final TransactionType transactionType;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"    private final Description description;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"    private final Amount amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    private final Date date;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    private final Integer personId;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"     * Creates a new Transaction.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     * @param transactionType","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     *            The transaction type of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * @param description","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     *            The description of the transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     * @param amount","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     *            The amount of the transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * @param date","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     *            The date of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     * @param personId","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     *            The ID of the person associated with the transaction.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"    public Transaction(TransactionType transactionType, Description description, Amount amount, Date date,","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"            Integer personId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        this(new TransactionId(), transactionType, description, amount, date, personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"     * Creates a new Transaction.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"     * @param transactionId","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     *            The unique transaction ID.","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"     * @param transactionType","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     *            The transaction type of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     * @param description","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     *            The description of the transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * @param amount","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"     *            The amount of the transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"     * @param date","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     *            The date of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"    public Transaction(TransactionId transactionId, TransactionType transactionType, Description description,","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"            Amount amount, Date date) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        this(transactionId, transactionType, description, amount, date, -1);","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"AlainS87"},"content":"     * Creates a new Transaction.","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"AlainS87"},"content":"     * @param transactionType","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"AlainS87"},"content":"     *            The transaction type of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"     * @param description","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"     *            The description of the transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"     * @param amount","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"     *            The amount of the transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"     * @param date","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"AlainS87"},"content":"     *            The date of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"    public Transaction(TransactionType transactionType, Description description,","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"            Amount amount, Date date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"        this(new TransactionId(), transactionType, description, amount, date);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"AlainS87"},"content":"     * Creates a new Transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"     * @param transactionId","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"     *            The unique transaction ID.","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"AlainS87"},"content":"     * @param transactionType","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"AlainS87"},"content":"     *            The transaction type of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"AlainS87"},"content":"     * @param description","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"AlainS87"},"content":"     *            The description of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"AlainS87"},"content":"     * @param amount","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"AlainS87"},"content":"     *            The amount of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"AlainS87"},"content":"     * @param date","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"AlainS87"},"content":"     *            The date of the transaction.","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"     * @param personId","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"     *            The ID of the person associated with the transaction.","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"    public Transaction(TransactionId transactionId, TransactionType transactionType, Description description,","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"            Amount amount, Date date, Integer personId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"        this.transactionId \u003d transactionId;","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"        this.transactionType \u003d transactionType;","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"AlainS87"},"content":"    public TransactionId getTransactionId() {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"AlainS87"},"content":"        return transactionId;","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"AlainS87"},"content":"    public Boolean hasPersonInfo() {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"        return personId \u003e\u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"    public Integer getPersonId() {","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"        return personId;","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"AlainS87"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"AlainS87"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"AlainS87"},"content":"    public Amount getAmount() {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"AlainS87"},"content":"        return amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"PetrichorPrecipice"},"content":"    public Date getDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"AlainS87"},"content":"        return date;","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"    public TransactionType getTransactionType() {","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"PetrichorPrecipice"},"content":"        return transactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"AlainS87"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"        if (!(o instanceof Transaction)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"AlainS87"},"content":"        Transaction that \u003d (Transaction) o;","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"cxo05"},"content":"        return Objects.equals(transactionId, that.transactionId)","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 Objects.equals(transactionType, that.transactionType)","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 Objects.equals(description, that.description)","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 Objects.equals(amount, that.amount)","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"Bombbird2001"},"content":"                \u0026\u0026 Objects.equals(date, that.date)","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"                \u0026\u0026 Objects.equals(personId, that.personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"AlainS87"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"        return Objects.hash(transactionId, transactionType, description, amount, personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"AlainS87"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"AlainS87"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"AlainS87"},"content":"                .add(\"transactionId\", transactionId)","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"                .add(\"type\", transactionType)","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"AlainS87"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"AlainS87"},"content":"                .add(\"amount\", amount)","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"Bombbird2001"},"content":"                .add(\"date\", date)","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"                .add(\"personId\", personId)","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"AlainS87"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"Bombbird2001"},"content":"    public boolean isSameEntry(Entry otherEntry) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"Bombbird2001"},"content":"        if (otherEntry \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"Bombbird2001"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"Bombbird2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"Bombbird2001"},"content":"        if (!(otherEntry instanceof Transaction)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"Bombbird2001"},"content":"        Transaction otherTransaction \u003d (Transaction) otherEntry;","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"Bombbird2001"},"content":"        return Objects.equals(transactionId, otherTransaction.transactionId);","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"AlainS87":75,"cxo05":72,"-":6,"Bombbird2001":24,"PetrichorPrecipice":9}},{"path":"src/main/java/transact/model/transaction/TransactionManualTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.model.transaction;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"public class TransactionManualTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"        System.out.println(\"Manual Transaction Test\");","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"        System.out.print(\"Enter Person Name: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"        String personNameInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"        System.out.print(\"Enter Phone Number: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"        String phoneNumberInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"        System.out.print(\"Enter Email: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"        String emailInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"        System.out.print(\"Enter Address: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"        String addressInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"        System.out.print(\"Enter TransactionType: \");","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"        String typeInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"        System.out.print(\"Enter Description: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlainS87"},"content":"        String descriptionInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlainS87"},"content":"        System.out.print(\"Enter Amount: \");","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlainS87"},"content":"        double amountInput \u003d Double.parseDouble(scanner.nextLine());","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"        System.out.print(\"Enter Date (dd/MM/yy): \");","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"PetrichorPrecipice"},"content":"        String dateInput \u003d scanner.nextLine();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"        // Create a Transaction ID","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"        TransactionId transactionId \u003d new TransactionId();","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"AlainS87"},"content":"        // Create a Person object","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        Person person \u003d new Person(new Name(personNameInput),","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"                new Phone(phoneNumberInput),","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"                new Email(emailInput),","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"                new Address(addressInput),","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"                Collections.emptySet());","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"AlainS87"},"content":"        // Create a Description object","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"AlainS87"},"content":"        Description description \u003d new Description(descriptionInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"AlainS87"},"content":"        // Create an Amount object","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"AlainS87"},"content":"        Amount amount \u003d new Amount(amountInput);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AlainS87"},"content":"        // Create a Date object","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"AlainS87"},"content":"        Date date \u003d new Date(dateInput);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"AlainS87"},"content":"        // Create a TransactionType object","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"PetrichorPrecipice"},"content":"        TransactionType transactionType \u003d TransactionType.getType(typeInput);","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"AlainS87"},"content":"        // Create a Transaction object","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"        Transaction transaction \u003d new Transaction(transactionId, transactionType, description, amount, date,","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"                person.getPersonId().getValue());","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"AlainS87"},"content":"        // Print Transaction information for verification","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"        System.out.println(\"\\nTransaction Information:\");","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"AlainS87"},"content":"        System.out.println(\"Transaction ID: \" + transaction.getTransactionId());","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"        System.out.println(\"Transaction Type: \" + transaction.getTransactionType());","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"AlainS87"},"content":"        System.out.println(\"Description: \" + transaction.getDescription());","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"AlainS87"},"content":"        System.out.println(\"Amount: \" + transaction.getAmount());","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"AlainS87"},"content":"        System.out.println(\"Date: \" + transaction.getDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"        System.out.println(\"PersonId: \" + transaction.getPersonId());","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"        scanner.close();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":57,"cxo05":19,"PetrichorPrecipice":8}},{"path":"src/main/java/transact/model/transaction/exceptions/DuplicateTransactionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.model.transaction.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":" * Signals that the operation will result in duplicate Transaction.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"public class DuplicateTransactionException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"    public DuplicateTransactionException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"        super(\"Operation would result in duplicate transaction\");","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":7,"cxo05":3}},{"path":"src/main/java/transact/model/transaction/exceptions/TransactionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.model.transaction.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":" * Signals that the Transaction does not exist","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"public class TransactionNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"    public TransactionNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"        super(\"The Transaction is Not Found\");","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":7,"cxo05":3}},{"path":"src/main/java/transact/model/transaction/info/Amount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.model.transaction.info;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"import java.math.RoundingMode;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":" * Represents an amount of money in the system.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":" * Guarantees: immutable; amount is non-null and non-negative.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"public class Amount {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Amount must be non-null and non-negative.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"    private static final NumberFormat AMOUNT_FORMAT \u003d new DecimalFormat(\"#0.00\");","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    private final BigDecimal value;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"     * Constructs an {@code Amount}.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     * @param amount","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"     *            A non-null, non-negative amount of money.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"    public Amount(BigDecimal amount) {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"        if (amount \u003d\u003d null || amount.compareTo(BigDecimal.ZERO) \u003c 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"        this.value \u003d amount.setScale(2, RoundingMode.HALF_UP);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"     * Constructs an {@code Amount} with a double value.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * @param amount","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     *            A non-negative amount of money as a double.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"    public Amount(double amount) {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlainS87"},"content":"        this(BigDecimal.valueOf(amount));","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlainS87"},"content":"     * Returns the amount as a BigDecimal.","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"    public BigDecimal getValue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlainS87"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlainS87"},"content":"     * Returns the amount as a formatted string.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlainS87"},"content":"    public String getFormattedValue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlainS87"},"content":"        return AMOUNT_FORMAT.format(value);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlainS87"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlainS87"},"content":"        return getFormattedValue();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"AlainS87"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"AlainS87"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"AlainS87"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"AlainS87"},"content":"        if (!(other instanceof Amount)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"AlainS87"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"AlainS87"},"content":"        Amount otherAmount \u003d (Amount) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"AlainS87"},"content":"        return value.equals(otherAmount.value);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"AlainS87"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"PetrichorPrecipice"},"content":"     * Returns true if a given string is a valid amount.","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static boolean isValidAmount(String amount) {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"PetrichorPrecipice"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"PetrichorPrecipice"},"content":"            double amt \u003d Double.parseDouble(amount);","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"PetrichorPrecipice"},"content":"            return amt \u003e 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"PetrichorPrecipice"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"PetrichorPrecipice"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":69,"cxo05":7,"PetrichorPrecipice":13}},{"path":"src/main/java/transact/model/transaction/info/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package transact.model.transaction.info;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":" * Represents a date in the system.","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":" * Date should be in a valid format.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"public class Date {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{2}/\\\\d{2}/\\\\d{2}\"; // Date format (dd/MM/yy)","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date must be in the format dd/MM/yy\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"    private final java.util.Date date;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"    private final SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yy\");","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * @param dateString","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     *            A string representation of a date in the format dd/MM/yy.","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    public Date(String dateString) {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"            if (!isValidDate(dateString)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"                throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"            this.date \u003d dateFormat.parse(dateString);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"     * Returns a Date object representing the date.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    public java.util.Date getDate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"        return this.date;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"        return date.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        return dateFormat.format(this.date);","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"AlainS87"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"AlainS87"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"AlainS87"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"AlainS87"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"PetrichorPrecipice"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"AlainS87"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        return date.equals(otherDate.date);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"AlainS87"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"        return date.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"AlainS87":39,"cxo05":18,"PetrichorPrecipice":12}},{"path":"src/main/java/transact/model/transaction/info/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.model.transaction.info;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":" * Represents a description of a transaction in the system.","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":" * Description can be changed.","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"public class Description {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"    /*","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"    private final String value;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"     * @param description A description of the transaction.","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"    public Description(String description) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"        value \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"     * Returns the description string.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlainS87"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlainS87"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlainS87"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlainS87"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlainS87"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlainS87"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlainS87"},"content":"        return value.equals(otherDescription.value);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlainS87"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static boolean isValidDescription(String description) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"PetrichorPrecipice"},"content":"        return description.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":50,"PetrichorPrecipice":14}},{"path":"src/main/java/transact/model/transaction/info/TransactionId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.model.transaction.info;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"import static transact.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":" * Represents a unique transaction ID in the system.","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" * Guarantees: immutable; is valid as declared in constructors","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"public class TransactionId implements Comparable\u003cTransactionId\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Transaction ID should be a unique number\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    private static TreeSet\u003cInteger\u003e usedIds \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    private final Integer value;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"     * Constructs a {@code TransactionId}.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"    public TransactionId() {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"        this(usedIds.isEmpty() ? 0 : usedIds.last() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code TransactionId} with specified {@code id}","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"    public TransactionId(Integer id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"        checkArgument(isValidTransactionId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"AlainS87"},"content":"        value \u003d id;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        usedIds.add(value);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     * Constructs a {@code TransactionId} with specified {@code id}","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"    public TransactionId(String id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        this(parseTransactionId(id));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"     * Parse transaction ID from string.","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    public static Integer parseTransactionId(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        checkArgument(test.matches(VALIDATION_REGEX), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        return Integer.parseInt(test);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * Returns true if a given integer can be a new transaction ID.","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    public static boolean isValidTransactionId(Integer test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"        return !usedIds.contains(test);","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"     * Free up {@code usedId}, allowing it to be used when transaction object is","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"     * deleted","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"     * @param usedId","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"     *            Id that will not be used anymore","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"    public static void freeUsedTransactionIds(Integer usedId) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"        usedIds.remove(usedId);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"    public Integer getValue() {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"AlainS87"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"        return value.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"AlainS87"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"AlainS87"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"AlainS87"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"AlainS87"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"AlainS87"},"content":"        if (!(other instanceof TransactionId)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"AlainS87"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"AlainS87"},"content":"        TransactionId otherId \u003d (TransactionId) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"AlainS87"},"content":"        return value.equals(otherId.value);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"    public int compareTo(TransactionId otherId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"        return this.value.compareTo(otherId.getValue());","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"AlainS87"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"AlainS87"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":49,"cxo05":56}},{"path":"src/main/java/transact/model/transaction/info/TransactionType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PetrichorPrecipice"},"content":"package transact.model.transaction.info;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"PetrichorPrecipice"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":" * Represents the different types of a transaction in the system.","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":" * TransactionType can be changed.","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"PetrichorPrecipice"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"public enum TransactionType {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"    REVENUE(\"Revenue\", \"R\", \"r\"), EXPENSE(\"Expense\", \"E\", \"e\");","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"This is an invalid type!\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"    // The first value is the display string","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"    private final List\u003cString\u003e validStrings;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    TransactionType(String... validStrings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"        this.validStrings \u003d Arrays.asList(validStrings);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static boolean isValidType(String type) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"        return (REVENUE.validStrings.contains(type) || EXPENSE.validStrings.contains(type));","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static TransactionType getType(String type) {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"        if (REVENUE.validStrings.contains(type)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"            return REVENUE;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"        if (EXPENSE.validStrings.contains(type)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"            return EXPENSE;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":"        // code should never reach here.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"        assert type !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"        return null;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"PetrichorPrecipice"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"        return validStrings.get(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"PetrichorPrecipice"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cxo05":23,"PetrichorPrecipice":19}},{"path":"src/main/java/transact/model/transaction/predicates/AfterOrOnDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code Date} is after or on the date given.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class AfterOrOnDatePredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private final Date date;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public AfterOrOnDatePredicate(Date date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        return transaction.getDate().getDate().after(date.getDate())","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"                || transaction.getDate().getDate().equals(date.getDate());","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":24}},{"path":"src/main/java/transact/model/transaction/predicates/BeforeOrOnDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code Date} is before or on the date given.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class BeforeOrOnDatePredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private final Date date;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public BeforeOrOnDatePredicate(Date date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        return transaction.getDate().getDate().before(date.getDate())","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"                || transaction.getDate().getDate().equals(date.getDate());","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":24}},{"path":"src/main/java/transact/model/transaction/predicates/ByPersonIdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code PersonId} is equal to the personId given.","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"public class ByPersonIdPredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private final Integer personId;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    public ByPersonIdPredicate(Integer personId) {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        return transaction.getPersonId().equals(personId);","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":22}},{"path":"src/main/java/transact/model/transaction/predicates/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.StringContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    private final StringContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        predicate \u003d new StringContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        return predicate.test(transaction.getDescription().getValue());","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        if (!(other instanceof DescriptionContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"        DescriptionContainsKeywordsPredicate otherDescriptionContainsKeywordsPredicate \u003d (DescriptionContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        return Objects.equals(otherDescriptionContainsKeywordsPredicate.predicate, predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        return new ToStringBuilder(this).add(\"predicate\", predicate).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":45}},{"path":"src/main/java/transact/model/transaction/predicates/LessThanOrEqualAmountPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code Amount} is less than or equal to the amount given.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class LessThanOrEqualAmountPredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private final Amount amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public LessThanOrEqualAmountPredicate(Amount amount) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        return transaction.getAmount().getValue().compareTo(amount.getValue()) \u003c\u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":23}},{"path":"src/main/java/transact/model/transaction/predicates/MoreThanOrEqualAmountPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code Amount} is more than or equal to the amount given.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class MoreThanOrEqualAmountPredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private final Amount amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public MoreThanOrEqualAmountPredicate(Amount amount) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        return transaction.getAmount().getValue().compareTo(amount.getValue()) \u003e\u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bombbird2001":23}},{"path":"src/main/java/transact/model/transaction/predicates/TransactionTypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction.predicates;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * Tests that a {@code Transaction}\u0027s {@code TransactionType} is equal to the transaction type given.","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class TransactionTypePredicate implements Predicate\u003cTransaction\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"    private final TransactionType transactionType;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionTypePredicate(TransactionType transactionType) {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"        this.transactionType \u003d transactionType;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public boolean test(Transaction transaction) {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        return transaction.getTransactionType().equals(transactionType);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Bombbird2001":22}},{"path":"src/main/java/transact/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"        return new Person[] {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        };","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"        return sampleAb;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"    public static Transaction[] getSampleTransactions() {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"        return new Transaction[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.EXPENSE, new Description(\"Expense 1\"), new Amount(100),","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"                    new Date(\"11/11/23\"), 1),","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.EXPENSE, new Description(\"Expense 2\"), new Amount(200),","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"                    new Date(\"11/11/23\"), 2),","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.EXPENSE, new Description(\"Expense 3\"), new Amount(300),","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                    new Date(\"11/11/23\"), 3),","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Revenue 1\"), new Amount(1000),","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"                    new Date(\"11/11/23\"), 4),","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Revenue 2\"), new Amount(1200),","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"                    new Date(\"11/11/23\"), 5),","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Profit\"), new Amount(1200),","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"                    new Date(\"01/01/23\"), 1),","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Profit\"), new Amount(100),","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"                    new Date(\"01/02/23\"), -1),","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Profit\"), new Amount(1400),","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"                    new Date(\"01/03/23\"), 3),","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Profit\"), new Amount(88),","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"                    new Date(\"01/04/23\"), -1),","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Profit\"), new Amount(250),","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"                    new Date(\"01/05/23\"), 5),","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"            new Transaction(TransactionType.REVENUE, new Description(\"Profit\"), new Amount(600),","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"                    new Date(\"01/06/23\"), -1),","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"        };","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"    public static ReadOnlyTransactionBook getSampleTransactionBook() {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"        TransactionBook sampleTb \u003d new TransactionBook();","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"        for (Transaction sampleTransaction : getSampleTransactions()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"            sampleTb.addTransaction(sampleTransaction);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        return sampleTb;","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":104}},{"path":"src/main/java/transact/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":" * Represents a storage for {@link transact.model.AddressBook}.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"     * @throws DataLoadingException","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     *             if loading the data from storage failed.","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * @param addressBook","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     *            cannot be null.","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     *             if there was any problem writing to the file.","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"-":38}},{"path":"src/main/java/transact/storage/CsvAdaptedTransactionStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import com.opencsv.CSVReader;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import com.opencsv.CSVWriter;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import com.opencsv.exceptions.CsvValidationException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Sasmik23"},"content":"import transact.commons.util.FileUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":" * A class to access TransactionBook data stored as a csv file on the hard disk.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"public class CsvAdaptedTransactionStorage implements TransactionBookStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Sasmik23"},"content":"     * Creates CsvAdaptedTransactionStorage Object","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Sasmik23"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Sasmik23"},"content":"     * @param filePath for storage data","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Sasmik23"},"content":"    public CsvAdaptedTransactionStorage(Path filePath) {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    public Path getTransactionBookFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"        return filePath;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    public Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        return readTransactionBook(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    public Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook(Path path) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"AlainS87"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"AlainS87"},"content":"                return Optional.empty();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"            TransactionBook transactions \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"            CSVReader reader \u003d new CSVReader(new FileReader(path.toFile()));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"            reader.readNext(); // Skip the header","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"AlainS87"},"content":"            String[] row;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"AlainS87"},"content":"            while ((row \u003d reader.readNext()) !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"                try {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"                    TransactionId transactionId \u003d new TransactionId(row[0]);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"                    TransactionType transactionType \u003d ParserUtil.parseType(row[1]);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"                    Description description \u003d ParserUtil.parseDescription(row[2]);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"                    Amount amount \u003d ParserUtil.parseAmount(row[3]);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"                    Date date \u003d ParserUtil.parseDate(row[4]);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"                    Integer personId \u003d ParserUtil.parsePersonId(row[5]);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"                    Transaction t \u003d new Transaction(transactionId, transactionType, description, amount, date,","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"                            personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"                    transactions.addTransaction(t);","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"                    // Skip if error with a line","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"                    // TODO Warn user of malformed data","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"AlainS87"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"            ReadOnlyTransactionBook transactionBook \u003d new TransactionBook(transactions);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"            return Optional.of(transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"AlainS87"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"AlainS87"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        } catch (CsvValidationException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"AlainS87"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"    public void saveTransactionBook(ReadOnlyTransactionBook transactionBook) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"AlainS87"},"content":"        saveTransactionBook(transactionBook, filePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"     * Similar to {@link #saveTransactionBook(ReadOnlyTransactionBook)}","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"     * (ReadOnlyTransactionBook)}.","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"     * @param filePath","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"     *            location of the data. Cannot be null.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"    public void saveTransactionBook(ReadOnlyTransactionBook transactionBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Sasmik23"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"        Map\u003cTransactionId, Transaction\u003e transactions \u003d transactionBook.getTransactionMap();","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"AlainS87"},"content":"        try (CSVWriter writer \u003d new CSVWriter(new FileWriter(filePath.toFile()))) {","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"            String[] header \u003d { \"TransactionId\", \"Type\", \"Description\", \"Amount\", \"Date\", \"Person\" };","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"AlainS87"},"content":"            writer.writeNext(header);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"            for (Transaction transaction : transactions.values()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"AlainS87"},"content":"                String transactionId \u003d transaction.getTransactionId().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"                String transactionType \u003d transaction.getTransactionType().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"AlainS87"},"content":"                String description \u003d transaction.getDescription().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"AlainS87"},"content":"                String amount \u003d transaction.getAmount().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"AlainS87"},"content":"                String date \u003d transaction.getDate().toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"                String personId \u003d transaction.getPersonId().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"                String[] row \u003d { transactionId, transactionType, description, amount, date, personId };","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"AlainS87"},"content":"                writer.writeNext(row);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":55,"cxo05":52,"Sasmik23":8,"Bombbird2001":16}},{"path":"src/main/java/transact/storage/CsvAdaptedTransactionStorageManualTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"public class CsvAdaptedTransactionStorageManualTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"        Path filePath \u003d Path.of(\"transactions.csv\");","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"        Path exportPath \u003d Path.of(\"exportTransactions.csv\");","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Sasmik23"},"content":"        Path importPath \u003d Path.of(\"importTransactions.csv\");","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        ReadOnlyTransactionBook transactionBook \u003d createTestTransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"        CsvAdaptedTransactionStorage storage \u003d new CsvAdaptedTransactionStorage(filePath);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"        try {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"            storage.saveTransactionBook(transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"AlainS87"},"content":"            System.out.println(\"Transaction log saved successfully.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"            Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook \u003d storage.readTransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"            if (readTransactionBook.isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"                System.out.println(\"Transaction log loaded successfully.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"                System.out.println(\"Loaded Transaction Book:\");","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"                System.out.println(readTransactionBook.get());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"AlainS87"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"AlainS87"},"content":"                System.out.println(\"No transaction log found.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"            storage.saveTransactionBook(transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"AlainS87"},"content":"            System.out.println(\"Transaction log saved successfully.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"AlainS87"},"content":"        } catch (IOException | DataLoadingException e) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"AlainS87"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    private static ReadOnlyTransactionBook createTestTransactionBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"        Person person1 \u003d new Person(new Name(\"John\"), new Phone(\"43124312\"), new Email(\"SSS@gmail.com\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"                new Address(\"PGP\"), Collections.emptySet());","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"        Transaction transaction1 \u003d new Transaction(new TransactionId(100), TransactionType.REVENUE,","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"                new Description(\"Revenue 1\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"                new Amount(new BigDecimal(\"10.50\")), new Date(\"01/05/23\"), person1.getPersonId().getValue());","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"        Transaction transaction2 \u003d new Transaction(new TransactionId(101), TransactionType.EXPENSE,","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"                new Description(\"Expense 1\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"                new Amount(new BigDecimal(\"21.50\")), new Date(\"01/05/23\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        Transaction transaction3 \u003d new Transaction(new TransactionId(102), TransactionType.REVENUE,","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"                new Description(\"Revenue 2\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"                new Amount(new BigDecimal(\"10.50\")), new Date(\"01/05/23\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        Transaction transaction4 \u003d new Transaction(new TransactionId(103), TransactionType.EXPENSE,","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                new Description(\"Expense 2\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"                new Amount(new BigDecimal(\"25.21\")), new Date(\"01/05/23\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"        Transaction transaction5 \u003d new Transaction(new TransactionId(104), TransactionType.REVENUE,","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"                new Description(\"Revenue 3\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"                new Amount(new BigDecimal(\"31.1\")), new Date(\"01/05/23\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"        Transaction transaction6 \u003d new Transaction(new TransactionId(105), TransactionType.EXPENSE,","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"                new Description(\"Expense 3\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"                new Amount(new BigDecimal(\"21.02\")), new Date(\"01/05/23\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBook transactionBook \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction1);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction2);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction3);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction4);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction5);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction6);","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        return transactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":34,"cxo05":28,"Sasmik23":2,"Bombbird2001":18,"PetrichorPrecipice":3}},{"path":"src/main/java/transact/storage/JsonAdaptedAmount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":" * Jackson-friendly version of {@link Amount}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"class JsonAdaptedAmount {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"    private final BigDecimal value;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedAmount(@JsonProperty(\"amount\") BigDecimal value) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedAmount(Amount source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"        this.value \u003d source.getValue();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"    @JsonValue","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"    public BigDecimal getValue() {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"        return value;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"    public Amount toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"        if (value \u003d\u003d null || value.compareTo(BigDecimal.ZERO) \u003c 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlainS87"},"content":"            throw new IllegalValueException(Amount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"        return new Amount(value);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":36,"cxo05":3}},{"path":"src/main/java/transact/storage/JsonAdaptedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.storage;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":" * Jackson-friendly version of {@link Date}.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"class JsonAdaptedDate {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"    private final String date;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedDate(@JsonProperty(\"date\") String date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedDate(Date source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"        this.date \u003d source.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"    @JsonValue","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"    public String getDate() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"        return date;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"    public Date toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"        return new Date(date);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"AlainS87":33,"cxo05":1}},{"path":"src/main/java/transact/storage/JsonAdaptedDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":" * Jackson-friendly version of {@link Description}.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"class JsonAdaptedDescription {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedDescription(@JsonProperty(\"description\") String description) {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedDescription(Description source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"        this.description \u003d source.getValue();","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"    @JsonValue","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"    public Description toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"        return new Description(description);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":32,"cxo05":2}},{"path":"src/main/java/transact/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    private final Integer id;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"id\") int id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"                             @JsonProperty(\"address\") String address, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        id \u003d source.getPersonId().value;","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"     * {@code Person} object.","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"     *             if there were any data constraints violated in","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"     *             the adapted person.","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonId.class.getSimpleName()));","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        if (!PersonId.isValidPersonId(id)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"            throw new IllegalValueException(PersonId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"        final PersonId personId \u003d new PersonId(id);","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"        return new Person(personId, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":13,"-":95,"Bombbird2001":16}},{"path":"src/main/java/transact/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * {@code Tag} object.","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"     *             if there were any data constraints violated in","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"     *             the adapted tag.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":43}},{"path":"src/main/java/transact/storage/JsonAdaptedTransactionId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AlainS87"},"content":"package transact.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.model.transaction.info.TransactionId.isValidTransactionId;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"AlainS87"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"AlainS87"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"AlainS87"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AlainS87"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":" * Jackson-friendly version of {@link TransactionId}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"AlainS87"},"content":"class JsonAdaptedTransactionId {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    private final Integer id;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"    public JsonAdaptedTransactionId(@JsonProperty(\"id\") Integer id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"AlainS87"},"content":"    public JsonAdaptedTransactionId(TransactionId source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"AlainS87"},"content":"        this.id \u003d source.getValue();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"    @JsonValue","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    public Integer getId() {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"        return id;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"    public TransactionId toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"        if (!isValidTransactionId(id)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"AlainS87"},"content":"            throw new IllegalValueException(TransactionId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"        return new TransactionId(id);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"AlainS87"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AlainS87":33,"cxo05":6}},{"path":"src/main/java/transact/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.FileUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.JsonUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"     * @param filePath","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"     *            location of the data. Cannot be null.","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"     * @throws DataLoadingException","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"     *             if loading the data from storage failed.","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"-":71}},{"path":"src/main/java/transact/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * @param source","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     *            future changes to this will not affect the created","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     *            {@code JsonSerializableAddressBook}.","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Sasmik23"},"content":"        persons.addAll(source.getPersonMap().values().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Sasmik23"},"content":"                .map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     *             if there were any data constraints violated.","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"Sasmik23"},"content":"            if (addressBook.hasPerson(person.getPersonId())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":10,"Sasmik23":3,"-":51}},{"path":"src/main/java/transact/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.JsonUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * @param prefsFilePath","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     *            location of the data. Cannot be null.","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * @throws DataLoadingException","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"     *             if the file format is not as expected.","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":10,"-":40}},{"path":"src/main/java/transact/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, TransactionBookStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    Path getTransactionBookFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    void saveTransactionBook(ReadOnlyTransactionBook transactionBook) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":26,"Bombbird2001":11}},{"path":"src/main/java/transact/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    private TransactionBookStorage transactionBookStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"                          TransactionBookStorage transactionBookStorage,","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        this.transactionBookStorage \u003d transactionBookStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        logger.fine(\"Attempting to read address data from file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        logger.fine(\"Attempting to write to address data file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TransactionBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"    public Path getTransactionBookFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"        return transactionBookStorage.getTransactionBookFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"    public Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook() throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        return readTransactionBook(transactionBookStorage.getTransactionBookFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"    public Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"Bombbird2001"},"content":"        logger.fine(\"Attempting to read transaction data from file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"Bombbird2001"},"content":"        return transactionBookStorage.readTransactionBook(filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"    public void saveTransactionBook(ReadOnlyTransactionBook transactionBook) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"        saveTransactionBook(transactionBook, transactionBookStorage.getTransactionBookFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"    public void saveTransactionBook(ReadOnlyTransactionBook transactionBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"        logger.fine(\"Attempting to write to transaction data file: \" + filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"        transactionBookStorage.saveTransactionBook(transactionBook, filePath);","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":67,"Bombbird2001":36}},{"path":"src/main/java/transact/storage/TransactionBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":" * Represents a storage for transaction book.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"public interface TransactionBookStorage {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"     * Returns the file path of the transaction log data file.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"    Path getTransactionBookFilePath();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"     * Returns transaction log data as a {@link ReadOnlyTransactionBook}.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"     * Returns {@code Optional.empty()} if the storage file is not found.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook() throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"     * @see #getTransactionBookFilePath()","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    Optional\u003cReadOnlyTransactionBook\u003e readTransactionBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"     * Saves the given {@link ReadOnlyTransactionBook} to the storage.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     * @param transactionBook cannot be null.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    void saveTransactionBook(ReadOnlyTransactionBook transactionBook) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"     * @see #saveTransactionBook(ReadOnlyTransactionBook)","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    void saveTransactionBook(ReadOnlyTransactionBook transactionBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Sasmik23":2,"Bombbird2001":46}},{"path":"src/main/java/transact/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" * Represents a storage for {@link transact.model.UserPrefs}.","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * @throws DataLoadingException","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     *             if the loading of data from preference file","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     *             failed.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * Saves the given {@link transact.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     * @param userPrefs","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     *            cannot be null.","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * @throws IOException","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     *             if there was any problem writing to the file.","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":41}},{"path":"src/main/java/transact/ui/CardListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.ui;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CardListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CardListPanel.fxml\";","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"    public CardListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new ItemListViewCell());","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        personList.addListener((ListChangeListener\u003cPerson\u003e) c -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            personListView.setVisible(!personList.isEmpty());","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            personListView.setManaged(!personList.isEmpty());","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * a {@code PersonCard}.","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class ItemListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"                setGraphic(new PersonCard(person, person.getPersonId().value).getRoot());","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"cxo05":3,"-":44,"Bombbird2001":3}},{"path":"src/main/java/transact/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.CommandResult;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"        // command box.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"         * @see transact.logic.Logic#execute(String)","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":7,"-":79}},{"path":"src/main/java/transact/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     * @param root","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     *            Stage to use as the root of the HelpWindow.","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     *             \u003cul\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     *             \u003cli\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     *             if this method is called on a thread other than","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     *             the JavaFX Application Thread.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"     *             \u003c/li\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"     *             \u003cli\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     *             if this method is called during animation or","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"     *             layout processing.","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"     *             \u003c/li\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"     *             \u003cli\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"     *             \u003c/li\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"     *             \u003cli\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"     *             \u003c/li\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"     *             \u003c/ul\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":19,"-":87}},{"path":"src/main/java/transact/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.ui;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Sasmik23"},"content":"import java.io.File;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"import javafx.stage.DirectoryChooser;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.MainApp;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.Logic;","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.CommandResult;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    private static final String USER_GUIDE_URL \u003d \"https://ay2324s1-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"    private OverviewPanel overviewPanel;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"    private TransactionTablePanel transactionTablePanel;","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"    private CardListPanel cardListPanel;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"     * The available tab windows","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"    public enum TabWindow {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        CURRENT, OVERVIEW, TRANSACTIONS, ADDRESSBOOK","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"    private MenuItem userGuideMenuItem;","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    private TabPane tabPane;","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    private Tab overviewTab;","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"    private Tab cardListTab;","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"    private Tab transactionTab;","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    private VBox bottomBar;","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"    // @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"    // private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"        setAccelerator(userGuideMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"Sasmik23"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"     * Switch tabs. If tabWindow is set to current, do nothing.","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"Sasmik23"},"content":"     * @param tabWindow The tab to switch to","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"    void switchTab(TabWindow tabWindow) {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"        if (tabWindow !\u003d TabWindow.CURRENT) {","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"            tabPane.getSelectionModel().select(tabWindow.ordinal() - 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"        overviewPanel \u003d new OverviewPanel(logic.getFilteredTransactionList());","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"        overviewTab.setContent(overviewPanel.getRoot());","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"AlainS87"},"content":"        transactionTablePanel \u003d new TransactionTablePanel(logic.getFilteredTransactionList(), logic.getFilteredPersonList());","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"        transactionTab.setContent(transactionTablePanel.getRoot());","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"        cardListPanel \u003d new CardListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-21"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"        cardListTab.setContent(cardListPanel.getRoot());","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"        VBox.setVgrow(commandBox.getRoot(), Priority.NEVER);","lastModifiedDate":"2023-10-21"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"        VBox.setVgrow(resultDisplay.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"        bottomBar.getChildren().addAll(commandBox.getRoot(), resultDisplay.getRoot());","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"        try {","lastModifiedDate":"2023-10-09"},{"lineNumber":146,"author":{"gitId":"cxo05"},"content":"            MainApp.getLocalHostServices().showDocument(USER_GUIDE_URL);","lastModifiedDate":"2023-10-09"},{"lineNumber":147,"author":{"gitId":"cxo05"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-09"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"AlainS87"},"content":"    private void handleExit() throws CommandException, ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"AlainS87"},"content":"        logic.execute(\"exit\");","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":168,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"AlainS87"},"content":"     * Clear the Address Book.","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"AlainS87"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"AlainS87"},"content":"    private void handleClearStaffs() throws CommandException, ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"AlainS87"},"content":"        String commandText \u003d \"clearstaff\";","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"AlainS87"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"AlainS87"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"AlainS87"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"AlainS87"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"AlainS87"},"content":"            switchTab(commandResult.getTabWindow());","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"AlainS87"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"AlainS87"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"AlainS87"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"AlainS87"},"content":"            throw e;","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"AlainS87"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"AlainS87"},"content":"     * Clear the Transaction Book.","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"AlainS87"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"AlainS87"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"AlainS87"},"content":"    private void handleClearTransactions() throws CommandException, ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"AlainS87"},"content":"        String commandText \u003d \"cleartransaction\";","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"AlainS87"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"AlainS87"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"AlainS87"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"AlainS87"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"AlainS87"},"content":"            switchTab(commandResult.getTabWindow());","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"AlainS87"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"AlainS87"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"AlainS87"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"AlainS87"},"content":"            throw e;","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Sasmik23"},"content":"     * Export the Transaction Book.","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"Sasmik23"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Sasmik23"},"content":"    private void handleExportTransactions() throws CommandException, ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Sasmik23"},"content":"        DirectoryChooser directoryChooser \u003d new DirectoryChooser();","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"Sasmik23"},"content":"        directoryChooser.setTitle(\"Choose Directory to Export Transactions\");","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"Sasmik23"},"content":"        // Show the directory chooser dialog","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"Sasmik23"},"content":"        File selectedDirectory \u003d directoryChooser.showDialog(primaryStage);","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"Sasmik23"},"content":"        if (selectedDirectory !\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"Sasmik23"},"content":"            String chosenDirectoryPath \u003d selectedDirectory.getAbsolutePath();","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"Sasmik23"},"content":"            String commandText \u003d \"exporttransactions f/\" + chosenDirectoryPath;","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Sasmik23"},"content":"                CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Sasmik23"},"content":"                logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Sasmik23"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Sasmik23"},"content":"                switchTab(commandResult.getTabWindow());","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"Sasmik23"},"content":"            } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"Sasmik23"},"content":"                logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Sasmik23"},"content":"                resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Sasmik23"},"content":"                throw e;","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"Sasmik23"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"Sasmik23"},"content":"     * Export the Staff Book.","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"Sasmik23"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"Sasmik23"},"content":"    @FXML","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"Sasmik23"},"content":"    private void handleExportStaff() throws CommandException, ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"Sasmik23"},"content":"        DirectoryChooser directoryChooser \u003d new DirectoryChooser();","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"Sasmik23"},"content":"        directoryChooser.setTitle(\"Choose Directory to Export Staff\");","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"Sasmik23"},"content":"        // Show the directory chooser dialog","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"Sasmik23"},"content":"        File selectedDirectory \u003d directoryChooser.showDialog(primaryStage);","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"Sasmik23"},"content":"        if (selectedDirectory !\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"Sasmik23"},"content":"            String chosenDirectoryPath \u003d selectedDirectory.getAbsolutePath();","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"Sasmik23"},"content":"            String commandText \u003d \"exportstaff f/\" + chosenDirectoryPath;","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"Sasmik23"},"content":"            try {","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"Sasmik23"},"content":"                CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"Sasmik23"},"content":"                logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"Sasmik23"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"Sasmik23"},"content":"                switchTab(commandResult.getTabWindow());","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"Sasmik23"},"content":"            } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"Sasmik23"},"content":"                logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"Sasmik23"},"content":"                resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"Sasmik23"},"content":"                throw e;","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"Sasmik23"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public CardListPanel getCardListPanel() {","lastModifiedDate":"2023-09-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        return cardListPanel;","lastModifiedDate":"2023-09-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"Bombbird2001"},"content":"     * @see transact.logic.Logic#execute(String)","lastModifiedDate":"2023-10-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"AlainS87"},"content":"            if (commandResult.isClearResultDisplay()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"AlainS87"},"content":"                resultDisplay.clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":284,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":285,"author":{"gitId":"cxo05"},"content":"            switchTab(commandResult.getTabWindow());","lastModifiedDate":"2023-10-13"},{"lineNumber":286,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"AlainS87":43,"cxo05":56,"Sasmik23":58,"-":128,"Bombbird2001":9}},{"path":"src/main/java/transact/ui/OverviewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import java.time.YearMonth;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"PetrichorPrecipice"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import java.util.Locale;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import java.util.TreeMap;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ListChangeListener.Change;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import javafx.scene.chart.CategoryAxis;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import javafx.scene.chart.XYChart.Data;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import se.alipsa.ymp.YearMonthPickerCombo;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":" * Overview Panel","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"public class OverviewPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    private static final String FXML \u003d \"Overview.fxml\";","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"    private static final DateTimeFormatter YEARMONTH_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM yy\");","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"    private StackPane pickerContainer;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    private Label revenueLabel;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"    private Label expensesLabel;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"    private VBox graphContainer;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"    private LineChart\u003cString, Number\u003e profitGraph;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    private ObservableList\u003cTransaction\u003e transactionList;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    private TreeMap\u003cYearMonth, MonthData\u003e monthDataMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     * Creates a {@code OverviewPanel} with the given","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"     * {@code transactionList}.","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    public OverviewPanel(ObservableList\u003cTransaction\u003e transactionList) {","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"        super(FXML);","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"        this.transactionList \u003d transactionList;","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        // Init UI elements","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        final NumberAxis yAxis \u003d new NumberAxis();","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"        yAxis.setAutoRanging(true);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        yAxis.setForceZeroInRange(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"        final CategoryAxis xAxis \u003d new CategoryAxis();","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"        xAxis.setAutoRanging(true);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"        xAxis.setLabel(\"Date\");","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"        profitGraph \u003d new LineChart\u003cString, Number\u003e(xAxis, yAxis);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"        profitGraph.setTitle(\"Profit Graph\");","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        profitGraph.setLegendVisible(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"        graphContainer.getChildren().add(profitGraph);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"        updateMonthData();","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"        updateGraph();","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"        changeMonthView(YearMonth.now());","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"        YearMonthPickerCombo ymp \u003d new YearMonthPickerCombo(","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"                monthDataMap.firstKey(),","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"                monthDataMap.lastKey(),","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"                monthDataMap.lastKey(),","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"                Locale.ENGLISH,","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"                \"MMM yyyy\");","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"        ymp.setOnAction(a -\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"            changeMonthView(ymp.getValue());","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"        });","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        pickerContainer.getChildren().add(ymp);","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"        this.transactionList.addListener((Change\u003c? extends Transaction\u003e change) -\u003e {","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"            updateMonthData();","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"            updateGraph();","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"            changeMonthView(ymp.getValue());","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"        });","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"    private void changeMonthView(YearMonth month) {","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"        MonthData selectedMonthData \u003d monthDataMap.get(month);","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"        if (selectedMonthData \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"            revenueLabel.setText(String.format(\"$%,.2f\", 0.0));","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"            expensesLabel.setText(String.format(\"$%,.2f\", 0.0));","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"            revenueLabel.setText(String.format(\"$%,.2f\", selectedMonthData.getRevenue()));","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"            expensesLabel.setText(String.format(\"$%,.2f\", selectedMonthData.getExpense()));","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"     * Updates the {@code monthDataMap} with information from the","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"     * {@code transactionList}.","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"PetrichorPrecipice"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"    private void updateMonthData() {","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"        monthDataMap.clear();","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"        transactionList.stream().forEach((Transaction t) -\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"PetrichorPrecipice"},"content":"            YearMonth yearMonth \u003d YearMonth.from(t.getDate().getDate().toInstant()","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"PetrichorPrecipice"},"content":"                    .toLocalDate());","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"            monthDataMap.putIfAbsent(yearMonth, new MonthData(0, 0));","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"PetrichorPrecipice"},"content":"            if (t.getTransactionType() \u003d\u003d TransactionType.EXPENSE) {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"PetrichorPrecipice"},"content":"                // Increase Expense","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"PetrichorPrecipice"},"content":"                monthDataMap.get(yearMonth).increaseExpense(t.getAmount().getValue().doubleValue());","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"PetrichorPrecipice"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"PetrichorPrecipice"},"content":"                // Increase Revenue","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"                monthDataMap.get(yearMonth).increaseRevenue(t.getAmount().getValue().doubleValue());","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"PetrichorPrecipice"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"        });","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"PetrichorPrecipice"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"cxo05"},"content":"     * Creates an ArrayList of monthly profit data for each month in the year,","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"     * starting from the first available data to the last","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"PetrichorPrecipice"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"PetrichorPrecipice"},"content":"     * @return An ArrayList of Data objects, each representing monthly profit data.","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"cxo05"},"content":"    private ArrayList\u003cData\u003cString, Number\u003e\u003e getProfitGraphData() {","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"        ArrayList\u003cData\u003cString, Number\u003e\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"        YearMonth startMonth \u003d monthDataMap.firstKey();","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"        YearMonth lastMonth \u003d monthDataMap.lastKey().plusMonths(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"cxo05"},"content":"        while (startMonth.isBefore(lastMonth)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"cxo05"},"content":"            String displayDate \u003d startMonth.format(YEARMONTH_FORMAT);","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"            MonthData monthData \u003d monthDataMap.get(startMonth);","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"            XYChart.Data\u003cString, Number\u003e d \u003d new XYChart.Data\u003c\u003e(displayDate,","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"                    monthData \u003d\u003d null ? 0 : monthData.getProfit());","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"            data.add(d);","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"            startMonth \u003d startMonth.plusMonths(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"cxo05"},"content":"        return data;","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"cxo05"},"content":"    private void updateGraph() {","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"cxo05"},"content":"        profitGraph.getData().clear();","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"cxo05"},"content":"        XYChart.Series\u003cString, Number\u003e series \u003d new XYChart.Series\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"        series.getData().addAll(getProfitGraphData());","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"        profitGraph.getData().add(series);","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"    class MonthData {","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"        private double revenue;","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"        private double expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"        public MonthData(double revenue, double expense) {","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"            this.revenue \u003d revenue;","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"cxo05"},"content":"            this.expense \u003d expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"        public double getProfit() {","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"            return revenue - expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"        public double getRevenue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"            return revenue;","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":185,"author":{"gitId":"cxo05"},"content":"        public double getExpense() {","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"cxo05"},"content":"            return expense;","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"PetrichorPrecipice"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"         * Increases each month\u0027s revenue by a certain amount.","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"PetrichorPrecipice"},"content":"         * @param revenue","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"PetrichorPrecipice"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void increaseRevenue(double revenue) {","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"PetrichorPrecipice"},"content":"            this.revenue +\u003d revenue;","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"PetrichorPrecipice"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"PetrichorPrecipice"},"content":"         * Increases each month\u0027s expense by a certain amount.","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"PetrichorPrecipice"},"content":"         * @param expense","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"PetrichorPrecipice"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void increaseExpense(double expense) {","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"PetrichorPrecipice"},"content":"            this.expense +\u003d expense;","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"cxo05":174,"PetrichorPrecipice":33}},{"path":"src/main/java/transact/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"     * display.","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":54}},{"path":"src/main/java/transact/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"AlainS87"},"content":"        String currentText \u003d resultDisplay.getText();","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"AlainS87"},"content":"        if (!currentText.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"AlainS87"},"content":"            currentText +\u003d \"\\n\"; // Add a newline to separate messages","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"        resultDisplay.setText(currentText + feedbackToUser);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"AlainS87"},"content":"        resultDisplay.positionCaret(resultDisplay.getLength());","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"AlainS87"},"content":"    public void clear() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"        resultDisplay.clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"AlainS87":9,"cxo05":2,"-":26}},{"path":"src/main/java/transact/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":1,"-":27}},{"path":"src/main/java/transact/ui/TransactionTablePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import javafx.beans.property.ReadOnlyObjectWrapper;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.TableColumn.CellDataFeatures;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import javafx.util.Callback;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"AlainS87"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":" * Panel containing the table of transactions.","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"public class TransactionTablePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    private static final String FXML \u003d \"TransactionTablePanel.fxml\";","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"    private TableView\u003cTransaction\u003e transactionTable;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     * Creates a {@code TransactionTablePanel} with the given","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * {@code ObservableList}.","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"AlainS87"},"content":"    public TransactionTablePanel(ObservableList\u003cTransaction\u003e transactionList, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        super(FXML);","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        TableColumn\u003cTransaction, Integer\u003e idCol \u003d new TableColumn\u003c\u003e(\"Id\");","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"        idCol.setCellValueFactory(new PropertyValueFactory\u003cTransaction, Integer\u003e(\"transactionId\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"        TableColumn\u003cTransaction, TransactionType\u003e typeCol \u003d new TableColumn\u003c\u003e(\"Type\");","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"        typeCol.setCellValueFactory(new PropertyValueFactory\u003cTransaction, TransactionType\u003e(\"transactionType\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"        TableColumn\u003cTransaction, Date\u003e dateCol \u003d new TableColumn\u003c\u003e(\"Date\");","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        dateCol.setCellValueFactory(new PropertyValueFactory\u003cTransaction, Date\u003e(\"date\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"        TableColumn\u003cTransaction, Description\u003e descCol \u003d new TableColumn\u003c\u003e(\"Description\");","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        descCol.setCellValueFactory(new PropertyValueFactory\u003cTransaction, Description\u003e(\"description\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        TableColumn\u003cTransaction, Amount\u003e amtCol \u003d new TableColumn\u003c\u003e(\"Amount\");","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        amtCol.setCellValueFactory(new PropertyValueFactory\u003cTransaction, Amount\u003e(\"amount\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        TableColumn\u003cTransaction, String\u003e staffCol \u003d new TableColumn\u003c\u003e(\"Staff\");","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"        staffCol.setCellValueFactory(new Callback\u003cCellDataFeatures\u003cTransaction, String\u003e, ObservableValue\u003cString\u003e\u003e() {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"            public ObservableValue\u003cString\u003e call(CellDataFeatures\u003cTransaction, String\u003e t) {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"                String displayString \u003d \"\";","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"                if (t.getValue().getPersonId() \u003e\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"AlainS87"},"content":"                    String staffName \u003d getPersonName(t.getValue().getPersonId().toString(), personList);","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"AlainS87"},"content":"                    displayString \u003d t.getValue().getPersonId().toString() + \" : \" + staffName;","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"                return new ReadOnlyObjectWrapper(displayString);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"        });","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        transactionTable.getColumns().setAll(idCol, typeCol, dateCol, descCol, amtCol, staffCol);","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        transactionTable.setItems(transactionList);","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"AlainS87"},"content":"    private String getPersonName(String personId, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"AlainS87"},"content":"        for (Person person : personList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"AlainS87"},"content":"            if (person.getPersonId().toString().equals(personId)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"AlainS87"},"content":"                return person.getName().toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"AlainS87"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"AlainS87"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"AlainS87"},"content":"        return \"Unknown\";","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"AlainS87":13,"cxo05":63}},{"path":"src/main/java/transact/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"    /** Starts the UI (and the App). */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":11}},{"path":"src/main/java/transact/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.MainApp;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.LogsCenter;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.StringUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.logic.Logic;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"        // Set the application icon.","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"            mainWindow.show(); // This should be called before creating other UI parts","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"            String contentText) {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":80}},{"path":"src/main/java/transact/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.MainApp;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" * bars, etc.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * Constructs a UiPart using the specified FXML file within","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"     * {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"     * Constructs a UiPart with the specified FXML file within","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"     * {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"     * @param location","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"     *            Location of the FXML document.","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"     * @param root","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"     *            Specifies the root of the object hierarchy.","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     * Returns the FXML file URL for the specified FXML file name within","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"     * {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":17,"-":80}},{"path":"src/main/resources/view/CardListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"\u003cAnchorPane style\u003d\"-fx-background-color: #3c3c3c;\" stylesheets\u003d\"@DarkTheme.css\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"     \u003cListView fx:id\u003d\"personListView\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cxo05":10,"-":4}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"\u003cStackPane maxHeight\u003d\"60.0\" minHeight\u003d\"60.0\" prefHeight\u003d\"60.0\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"cxo05":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"/* .table-view {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":".table-view .column-header,","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":".table-view .filler {","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"  -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"} */","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"cxo05"},"content":".button:pressed,","lastModifiedDate":"2023-10-09"},{"lineNumber":229,"author":{"gitId":"cxo05"},"content":".button:default:hover:pressed {","lastModifiedDate":"2023-10-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"cxo05"},"content":".button:disabled,","lastModifiedDate":"2023-10-09"},{"lineNumber":243,"author":{"gitId":"cxo05"},"content":".button:default:disabled {","lastModifiedDate":"2023-10-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: #f70d1a;","lastModifiedDate":"2023-10-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"cxo05"},"content":"#filterField,","lastModifiedDate":"2023-10-09"},{"lineNumber":305,"author":{"gitId":"cxo05"},"content":"#personListPanel,","lastModifiedDate":"2023-10-09"},{"lineNumber":306,"author":{"gitId":"cxo05"},"content":"#personWebpage {","lastModifiedDate":"2023-10-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"cxo05":13,"-":314}},{"path":"src/main/resources/view/Main.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":".error {","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"  /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  -fx-background: #383838;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":".tag-selector {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"  -fx-border-color: white;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"  -fx-border-radius: 3;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"  -fx-background-radius: 3;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":".tooltip-text {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"/* Scroll Bar */","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":".scroll-bar {","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"  -fx-background-insets: 3;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":".scroll-bar .decrement-button {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":".scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"  -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":".scroll-bar:horizontal .increment-arrow,","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":".scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"  -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"cxo05":51}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Tran$act\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    \u003cScene stylesheets\u003d\"@Main.css\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"         \u003cBorderPane prefHeight\u003d\"700.0\" prefWidth\u003d\"800.0\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"            \u003ctop\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"           \u003cMenuBar fx:id\u003d\"menuBar\" stylesheets\u003d\"@DarkTheme.css\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"             \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"                     \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Export\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"                        \u003citems\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"                           \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExportStaff\" text\u003d\"Staff List\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Sasmik23"},"content":"                           \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExportTransactions\" text\u003d\"Transaction List\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"                     \u003c/Menu\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"               \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"             \u003c/Menu\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"                  \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Tools\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                    \u003citems\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"AlainS87"},"content":"                  \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleClearStaffs\" text\u003d\"Clear Staffs\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"AlainS87"},"content":"                  \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleClearTransactions\" text\u003d\"Clear Transactions\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"                    \u003c/items\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                  \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"             \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"               \u003cMenuItem fx:id\u003d\"userGuideMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"View user guide\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"             \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"           \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"            \u003c/top\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"            \u003ccenter\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"               \u003cSplitPane dividerPositions\u003d\"0.8\" orientation\u003d\"VERTICAL\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"                  \u003cBorderPane.margin\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"4.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"                  \u003c/BorderPane.margin\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"                  \u003citems\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"                     \u003cTabPane fx:id\u003d\"tabPane\" minHeight\u003d\"300.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" stylesheets\u003d\"@TabPane.css\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"                       \u003ctabs\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"                         \u003cTab fx:id\u003d\"overviewTab\" text\u003d\"Overview\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"                           \u003ccontent\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"                             \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: #3c3c3c;\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"                           \u003c/content\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"                         \u003c/Tab\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"                         \u003cTab fx:id\u003d\"transactionTab\" text\u003d\"Transactions\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"                           \u003ccontent\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"                             \u003cAnchorPane fx:id\u003d\"transactionTablePanelPlaceholder\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: #3c3c3c;\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"                                       \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"                                 \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                           \u003c/content\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"                         \u003c/Tab\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"                           \u003cTab fx:id\u003d\"cardListTab\" text\u003d\"Staff List\"\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"                             \u003ccontent\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"                               \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: #3c3c3c;\" stylesheets\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"                             \u003c/content\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"                           \u003c/Tab\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"                       \u003c/tabs\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"                     \u003c/TabPane\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"                     \u003cVBox fx:id\u003d\"bottomBar\" prefHeight\u003d\"219.0\" prefWidth\u003d\"789.0\" stylesheets\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"                  \u003c/items\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"               \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"            \u003c/center\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"         \u003c/BorderPane\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"AlainS87":2,"cxo05":55,"Sasmik23":2,"-":23}},{"path":"src/main/resources/view/Overview.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":".label {","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: #555555;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":".year-month-picker-combo {","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"  -fx-background: white;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":".year-month-picker-combo:hover {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: #dae7f3;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":".year-month-picker-combo .list-cell {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"  -fx-background: white;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: -fx-text-base-color;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"  -fx-padding: 3 0 2 7;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"  -fx-cell-size: 1.66667em;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":".year-month-picker-combo .list-cell:hover {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: #dae7f3;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":".scroll-bar {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: derive(#fff, 20%);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"cxo05":31}},{"path":"src/main/resources/view/Overview.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.chart.CategoryAxis?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.chart.LineChart?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.chart.NumberAxis?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"625.0\" prefWidth\u003d\"838.0\" stylesheets\u003d\"@Overview.css\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"      \u003cHBox layoutX\u003d\"6.0\" prefHeight\u003d\"487.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"            \u003cVBox prefHeight\u003d\"625.0\" prefWidth\u003d\"315.0\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"                  \u003cStackPane fx:id\u003d\"pickerContainer\" prefHeight\u003d\"80.0\" prefWidth\u003d\"315.0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"                        \u003cInsets bottom\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"                     \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"                  \u003cVBox style\u003d\"-fx-background-color: #E5E4E2; -fx-background-radius: 10; -fx-border-radius: 10;\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"                        \u003cLabel style\u003d\"-fx-font-size: 18px;\" text\u003d\"Revenue\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"                        \u003cLabel fx:id\u003d\"revenueLabel\" contentDisplay\u003d\"BOTTOM\" style\u003d\"-fx-font-size: 28px;\" text\u003d\"\\$10000\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"                        \u003cInsets bottom\u003d\"14.0\" left\u003d\"14.0\" right\u003d\"14.0\" top\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"                        \u003cInsets bottom\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                  \u003cVBox style\u003d\"-fx-background-color: #E5E4E2; -fx-background-radius: 10; -fx-border-radius: 10;\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"                        \u003cInsets bottom\u003d\"14.0\" left\u003d\"14.0\" right\u003d\"14.0\" top\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"                        \u003cLabel style\u003d\"-fx-font-size: 18px;\" text\u003d\"Expenses\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"                        \u003cLabel fx:id\u003d\"expensesLabel\" style\u003d\"-fx-font-size: 28px;\" text\u003d\"\\$6000\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"30.0\" right\u003d\"30.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"            \u003cSeparator orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"            \u003cVBox fx:id\u003d\"graphContainer\" prefHeight\u003d\"487.0\" prefWidth\u003d\"295.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"cxo05":55}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"cxo05":2,"-":6}},{"path":"src/main/resources/view/TabPane.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"  -fx-opacity: 0;","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":".tab-pane:top *.tab-header-area {","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"  -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":".tab-pane {","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"  -fx-tab-min-width: 120px;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"  -fx-tab-min-height: 35px;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"  -fx-tab-max-height: 35px;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":".tab {","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"  -fx-background-insets: 0 1 0 1, 0, 0;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"  height: 120px;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":".tab-pane .tab {","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: #e6e6e6;","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"  -fx-background-color: #3c3c3c;","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":".tab .tab-label {","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"  -fx-alignment: CENTER;","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: #828282;","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"  -fx-padding: 0 10 0 10;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":".tab:selected .tab-label {","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"  -fx-text-fill: #fff;","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"cxo05":39}},{"path":"src/main/resources/view/TransactionTablePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"\u003cAnchorPane minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #3c3c3c;\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"      \u003cTableView fx:id\u003d\"transactionTable\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"cxo05":14}},{"path":"src/test/java/transact/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":1,"-":85}},{"path":"src/test/java/transact/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":1,"-":25}},{"path":"src/test/java/transact/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":1,"-":15}},{"path":"src/test/java/transact/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"        // Tests early access lower version vs not early access higher version compare","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"        // by version number first","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"        // Tests early access higher version vs not early access lower version compare","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"        // by version number first","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":6,"-":131}},{"path":"src/test/java/transact/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.core.index;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":62}},{"path":"src/test/java/transact/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":34}},{"path":"src/test/java/transact/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     * {@code NullPointerException}","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"     * {@code NullPointerException}","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":7,"-":103}},{"path":"src/test/java/transact/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.Config;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"        // Try saving when the file exists","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"                : null;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":107}},{"path":"src/test/java/transact/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":21}},{"path":"src/test/java/transact/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.testutil.TestUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"    // TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    // TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":40}},{"path":"src/test/java/transact/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.commons.util;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"    // ---------------- Tests for isNonZeroUnsignedInteger","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"    // --------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"    // ---------------- Tests for containsWordIgnoreCase","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"    // --------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\",","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\",","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"                () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"     * - any word","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"     * - word containing symbols/numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"     * - word with leading/trailing spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     * - empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"     * - one word","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"     * - multiple words","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"     * - sentence with extra spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"     * - matches first word in sentence","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"     * - last word in sentence","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"     * - middle word in sentence","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"     * - matches multiple words","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"     * - query word matches part of a sentence word","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"     * - sentence word matches part of the query word","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"     * The test method below tries to verify all above with a reasonably low number","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"     * of test cases.","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"    // ---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":27,"-":118}},{"path":"src/test/java/transact/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.CommandResult;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.DeleteStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.CsvAdaptedTransactionStorage;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"import transact.storage.StorageManager;","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"                temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        CsvAdaptedTransactionStorage transactionBookStorage \u003d new CsvAdaptedTransactionStorage(","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"                temporaryFolder.resolve(\"transactionBook.csv\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, transactionBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"        String deleteStaffCommand \u003d DeleteStaffCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"        assertCommandException(deleteStaffCommand, String.format(Messages.MESSAGE_INVALID_PERSON_ID, 9));","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ViewCommand.COMMAND_WORD + \" staff\";","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ViewCommand.MESSAGE_SUCCESS_STAFF, model);","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredTransactionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTransactionList().remove(0));","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"     * result message is correct.","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"     * result message is correct.","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"     * Executes the command, confirms that the exception is thrown and that the","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"     * result message is correct.","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"cxo05"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"     * Storage component.","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"     * @param e","lastModifiedDate":"2023-10-09"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"     *            the exception to be thrown by the Storage component","lastModifiedDate":"2023-10-09"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"     * @param expectedMessage","lastModifiedDate":"2023-10-09"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"     *            the message expected inside exception thrown by the","lastModifiedDate":"2023-10-09"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"     *            Logic component","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"        // Inject LogicManager with AddressBookStorage, TransactionBookStorage that","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"        // throws the IOException e","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"        // when saving","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"Bombbird2001"},"content":"        CsvAdaptedTransactionStorage transactionBookStorage \u003d new CsvAdaptedTransactionStorage(","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"Bombbird2001"},"content":"                temporaryFolder.resolve(\"ExceptionTransactionBook.csv\")) {","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"Bombbird2001"},"content":"            @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":189,"author":{"gitId":"Bombbird2001"},"content":"            public void saveTransactionBook(ReadOnlyTransactionBook transactionBook)","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"Bombbird2001"},"content":"                    throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":191,"author":{"gitId":"Bombbird2001"},"content":"                throw e;","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"Bombbird2001"},"content":"        };","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"cxo05"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"cxo05"},"content":"                temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":197,"author":{"gitId":"Bombbird2001"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage,","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"Bombbird2001"},"content":"                transactionBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"Bombbird2001"},"content":"        String addStaffCommand \u003d AddStaffCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":205,"author":{"gitId":"Bombbird2001"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withNextIdAndFree().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":208,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandFailure(addStaffCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cxo05":30,"-":136,"Bombbird2001":44}},{"path":"src/test/java/transact/logic/commands/AddStaffCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":" * {@code AddStaffCommand}.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"public class AddStaffCommandIntegrationTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    private Model model;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(new AddStaffCommand(validPerson), model,","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"                String.format(AddStaffCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                expectedModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandFailure(new AddStaffCommand(personInList), model,","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"                AddStaffCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":41,"Bombbird2001":9}},{"path":"src/test/java/transact/logic/commands/AddStaffCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"public class AddStaffCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStaffCommand(null));","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        CommandResult commandResult \u003d new AddStaffCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(String.format(AddStaffCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand addStaffCommand \u003d new AddStaffCommand(validPerson);","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"        assertThrows(CommandException.class, AddStaffCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"                () -\u003e addStaffCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand addAliceCommand \u003d new AddStaffCommand(alice);","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand addBobCommand \u003d new AddStaffCommand(bob);","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand addAliceCommandCopy \u003d new AddStaffCommand(alice);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand addStaffCommand \u003d new AddStaffCommand(ALICE);","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"        String expected \u003d AddStaffCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(expected, addStaffCommand.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"        public Path getTransactionBookFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"        public void setTransactionBookFilePath(Path transactionBookFilePath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"Sasmik23"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"Sasmik23"},"content":"        public void setExportFilePath(Path path) {","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"Sasmik23"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"Sasmik23"},"content":"        public Path getExportFilePath() {","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"Sasmik23"},"content":"            return null;","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"Bombbird2001"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"Bombbird2001"},"content":"        public void setTransactionBook(ReadOnlyTransactionBook transactionBook) {","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"Bombbird2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"Sasmik23"},"content":"        public boolean hasPerson(PersonId personId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"Sasmik23"},"content":"        public Person deletePerson(PersonId targetId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"Sasmik23"},"content":"        public void setPerson(PersonId targetId, Person editedPerson) {","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"Sasmik23"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"Sasmik23"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"        public Person getPerson(Integer personId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"Sasmik23"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"Sasmik23"},"content":"        public ObservableMap\u003cPersonId, Person\u003e getPersonMap() {","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"Sasmik23"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"PetrichorPrecipice"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"cxo05"},"content":"        public boolean hasTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"Bombbird2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"PetrichorPrecipice"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"PetrichorPrecipice"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"cxo05"},"content":"        public Transaction deleteTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"PetrichorPrecipice"},"content":"        public void addTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":206,"author":{"gitId":"cxo05"},"content":"        public void setTransaction(TransactionId transactionId, Transaction editedTransaction) {","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"Bombbird2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"PetrichorPrecipice"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"Bombbird2001"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"Bombbird2001"},"content":"        public ReadOnlyTransactionBook getTransactionBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public ObservableList\u003cTransaction\u003e getFilteredTransactionList() {","lastModifiedDate":"2023-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void updateFilteredTransactionList(Predicate\u003cTransaction\u003e predicate) {","lastModifiedDate":"2023-09-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":234,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"Bombbird2001"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"Bombbird2001"},"content":"        public void updateFilteredTransactionList(Comparator\u003cTransaction\u003e comparator) {","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"Bombbird2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"cxo05"},"content":"        public Transaction getTransaction(TransactionId transactionId) {","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"cxo05"},"content":"        public ObservableMap\u003cTransactionId, Transaction\u003e getTransactionMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"cxo05"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"Sasmik23"},"content":"        public boolean hasPerson(PersonId personId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"Sasmik23"},"content":"            requireNonNull(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":265,"author":{"gitId":"Bombbird2001"},"content":"            return this.person.getPersonId().equals(personId);","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"Sasmik23"},"content":"        public boolean hasPerson(PersonId personId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":277,"author":{"gitId":"Sasmik23"},"content":"            requireNonNull(personId);","lastModifiedDate":"2023-10-19"},{"lineNumber":278,"author":{"gitId":"Bombbird2001"},"content":"            return personsAdded.stream().anyMatch(p -\u003e p.getPersonId().equals(personId));","lastModifiedDate":"2023-10-20"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cxo05":19,"Sasmik23":25,"-":191,"Bombbird2001":52,"PetrichorPrecipice":6}},{"path":"src/test/java/transact/logic/commands/ClearStaffCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"AlainS87"},"content":"public class ClearStaffCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"AlainS87"},"content":"        assertCommandSuccess(new ClearStaffCommand(), model, ClearStaffCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"AlainS87"},"content":"        assertCommandSuccess(new ClearStaffCommand(), model, ClearStaffCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"AlainS87":3,"cxo05":27,"Bombbird2001":3}},{"path":"src/test/java/transact/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", TabWindow.CURRENT, false, false)));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", TabWindow.CURRENT, true, false)));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", TabWindow.CURRENT, false, true)));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"                new CommandResult(\"feedback\", TabWindow.CURRENT, true, false).hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"                new CommandResult(\"feedback\", TabWindow.CURRENT, false, true).hashCode());","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"                + commandResult.getFeedbackToUser() + \", tabWindow\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"                + commandResult.getTabWindow() + \", showHelp\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"                + commandResult.isShowHelp()","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":13,"-":53}},{"path":"src/test/java/transact/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import transact.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final EditStaffCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"PetrichorPrecipice"},"content":"    public static final EditStaffCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"cxo05"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"     * Convenience wrapper to","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"Sasmik23"},"content":"    public static void showPersonAtId(Model model, Integer targetId) {","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"Sasmik23"},"content":"        assertTrue(targetId \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"Sasmik23"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetId);","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"     * Updates {@code model}\u0027s filtered list to show only the transaction at the given","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"Bombbird2001"},"content":"     * {@code model}\u0027s transaction book.","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"    public static void showTransactionAtIndex(Model model, Integer targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"        assertTrue(targetIndex \u003c model.getFilteredTransactionList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"        Transaction transaction \u003d model.getFilteredTransactionList().get(targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"        final TransactionId id \u003d transaction.getTransactionId();","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"        model.updateFilteredTransactionList(transaction1 -\u003e Objects.equals(transaction1.getTransactionId(), id));","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(1, model.getFilteredTransactionList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":22,"Sasmik23":3,"-":105,"Bombbird2001":18,"PetrichorPrecipice":2}},{"path":"src/test/java/transact/logic/commands/DeleteStaffCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":" * {@code DeleteStaffCommand}.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"public class DeleteStaffCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"        DeleteStaffCommand deleteStaffCommand \u003d new DeleteStaffCommand(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        String expectedMessage \u003d String.format(DeleteStaffCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTransactionBook(),","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"                new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Sasmik23"},"content":"        expectedModel.deletePerson(personToDelete.getPersonId());","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(deleteStaffCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Sasmik23"},"content":"        Integer outOfBoundId \u003d model.getFilteredPersonList().size() + 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Sasmik23"},"content":"        DeleteStaffCommand deleteStaffCommand \u003d new DeleteStaffCommand(outOfBoundId);","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        assertCommandFailure(deleteStaffCommand, model,","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"                String.format(Messages.MESSAGE_INVALID_PERSON_ID, outOfBoundId));","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"        /*","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"         * Not needed for now, since we do not identify a person based on their position","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"         * in the list","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"         * showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"         * Person personToDelete \u003d model.getFilteredPersonList().get(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"         * DeleteStaffCommand deleteStaffCommand \u003d new","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"         * DeleteStaffCommand(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"         * String expectedMessage \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"         * String.format(DeleteStaffCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"         * Messages.format(personToDelete));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"         * Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"         * model.getTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"         * expectedModel.deletePerson(personToDelete.getPersonId());","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"         * showNoPerson(expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"cxo05"},"content":"         * assertCommandSuccess(deleteStaffCommand, model, expectedMessage,","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"         * expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"        /*","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"         * Not needed for now, since we do not identify a person based on their position","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"         * in the list","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"         * showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"         * Integer outOfBoundId \u003d ID_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"         * // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"         * assertTrue(outOfBoundId \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"cxo05"},"content":"         * DeleteStaffCommand deleteStaffCommand \u003d new DeleteStaffCommand(outOfBoundId);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"         * assertCommandFailure(deleteStaffCommand, model,","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"         * Messages.getInvalidPersonIndexMessageForId(outOfBoundId));","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"Sasmik23"},"content":"        DeleteStaffCommand deleteFirstCommand \u003d new DeleteStaffCommand(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Sasmik23"},"content":"        DeleteStaffCommand deleteSecondCommand \u003d new DeleteStaffCommand(ID_SECOND_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"Sasmik23"},"content":"        DeleteStaffCommand deleteFirstCommandCopy \u003d new DeleteStaffCommand(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"Sasmik23"},"content":"        Integer targetId \u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"        DeleteStaffCommand deleteStaffCommand \u003d new DeleteStaffCommand(targetId);","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        String expected \u003d DeleteStaffCommand.class.getCanonicalName() + \"{personId\u003d\" + targetId + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(expected, deleteStaffCommand.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":99,"Sasmik23":12,"Bombbird2001":12}},{"path":"src/test/java/transact/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"-":58,"PetrichorPrecipice":1}},{"path":"src/test/java/transact/logic/commands/EditStaffCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"import transact.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"PetrichorPrecipice"},"content":" * EditStaffCommand.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EditStaffCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"        Person editedPerson \u003d new PersonBuilder()","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"                .withId(model.getFilteredPersonList().get(ID_FIRST_PERSON).getPersonId()).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand editStaffCommand \u003d new EditStaffCommand(ID_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        String expectedMessage \u003d String.format(EditStaffCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"                new TransactionBook(model.getTransactionBook()), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(ID_FIRST_PERSON).getPersonId(), editedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertCommandSuccess(editStaffCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"        Integer lastPersonId \u003d ID_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(lastPersonId);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(secondPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"cxo05"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand editStaffCommand \u003d new EditStaffCommand(lastPersonId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"        String expectedMessage \u003d String.format(EditStaffCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"cxo05"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"                new TransactionBook(model.getTransactionBook()), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        expectedModel.setPerson(secondPerson.getPersonId(), editedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertCommandSuccess(editStaffCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand editStaffCommand \u003d new EditStaffCommand(ID_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Sasmik23"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"        String expectedMessage \u003d String.format(EditStaffCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"                new TransactionBook(model.getTransactionBook()), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertCommandSuccess(editStaffCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"        /*","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"         * Not needed for now, since we do not identify a person based on their position","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"         * in the list","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"         * showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"         * Person personInFilteredList \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"cxo05"},"content":"         * model.getFilteredPersonList().get(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"cxo05"},"content":"         * Person editedPerson \u003d new","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"         * PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"cxo05"},"content":"         * EditStaffCommand editStaffCommand \u003d new EditStaffCommand(ID_FIRST_PERSON,","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"         * new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"         * String expectedMessage \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"         * String.format(EditStaffCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"         * Messages.format(editedPerson));","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"cxo05"},"content":"         * Model expectedModel \u003d new ModelManager(new","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"         * AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"cxo05"},"content":"         * new TransactionBook(model.getTransactionBook()), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"cxo05"},"content":"         * expectedModel.setPerson(model.getFilteredPersonList().get(0).getPersonId(),","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"cxo05"},"content":"         * editedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"         * assertCommandSuccess(editStaffCommand, model, expectedMessage,","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"         * expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"cxo05"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"cxo05"},"content":"        /*","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"cxo05"},"content":"         * Not needed, since we are not able to edit person ID which is the only way to","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"cxo05"},"content":"         * create a duplicate person","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"cxo05"},"content":"         * Person firstPerson \u003d model.getFilteredPersonList().get(ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"cxo05"},"content":"         * EditPersonDescriptor descriptor \u003d new","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"cxo05"},"content":"         * EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"cxo05"},"content":"         * EditStaffCommand editStaffCommand \u003d new EditStaffCommand(ID_SECOND_PERSON,","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"cxo05"},"content":"         * descriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"cxo05"},"content":"         * assertCommandFailure(editStaffCommand, model,","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"cxo05"},"content":"         * EditStaffCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"cxo05"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"cxo05"},"content":"        /*","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"cxo05"},"content":"         * Not needed, since we are not able to edit person ID which is the only way to","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"cxo05"},"content":"         * create a duplicate person","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"cxo05"},"content":"         * showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"cxo05"},"content":"         * // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"cxo05"},"content":"         * Person personInList \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"cxo05"},"content":"         * model.getAddressBook().getPersonList().get(ID_SECOND_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"cxo05"},"content":"         * EditStaffCommand editStaffCommand \u003d new EditStaffCommand(ID_FIRST_PERSON,","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"cxo05"},"content":"         * new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"cxo05"},"content":"         * assertCommandFailure(editStaffCommand, model,","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"cxo05"},"content":"         * EditStaffCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"cxo05"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"Sasmik23"},"content":"        Integer outOfBoundId \u003d model.getFilteredPersonList().size() + 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"cxo05"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand editStaffCommand \u003d new EditStaffCommand(outOfBoundId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"cxo05"},"content":"        assertCommandFailure(editStaffCommand, model, String.format(Messages.MESSAGE_INVALID_PERSON_ID, outOfBoundId));","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"cxo05"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"cxo05"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"cxo05"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"cxo05"},"content":"        /*","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"         * Not needed for now, since we do not identify a person based on their position","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"cxo05"},"content":"         * in the list","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"cxo05"},"content":"         * showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"         * Integer outOfBoundId \u003d ID_SECOND_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"cxo05"},"content":"         * // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"cxo05"},"content":"         * assertTrue(outOfBoundId \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"cxo05"},"content":"         * EditStaffCommand editStaffCommand \u003d new EditStaffCommand(outOfBoundId,","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"cxo05"},"content":"         * new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"cxo05"},"content":"         *","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"cxo05"},"content":"         * assertCommandFailure(editStaffCommand, model,","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"cxo05"},"content":"         * Messages.getInvalidPersonIndexMessageForId(outOfBoundId));","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"Bombbird2001"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"cxo05"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"Sasmik23"},"content":"        final EditStaffCommand standardCommand \u003d new EditStaffCommand(ID_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"cxo05"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"cxo05"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand commandWithSameValues \u003d new EditStaffCommand(ID_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"cxo05"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"cxo05"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":197,"author":{"gitId":"cxo05"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"cxo05"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"cxo05"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"cxo05"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"Sasmik23"},"content":"        assertFalse(standardCommand.equals(new EditStaffCommand(ID_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"cxo05"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"Sasmik23"},"content":"        assertFalse(standardCommand.equals(new EditStaffCommand(ID_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"cxo05"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"Sasmik23"},"content":"        Integer id \u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"cxo05"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand editStaffCommand \u003d new EditStaffCommand(id, editPersonDescriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"Bombbird2001"},"content":"        String expected \u003d EditStaffCommand.class.getCanonicalName() + \"{personId\u003d\" + id + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"cxo05"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertEquals(expected, editStaffCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":218,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":219,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":179,"Sasmik23":14,"Bombbird2001":19,"PetrichorPrecipice":7}},{"path":"src/test/java/transact/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, TabWindow.CURRENT, false,","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"                true);","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":14}},{"path":"src/test/java/transact/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":" * {@code FindCommand}.","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(),","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"            new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":19,"-":70,"Bombbird2001":2}},{"path":"src/test/java/transact/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, TabWindow.CURRENT, true, false);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":7,"-":14}},{"path":"src/test/java/transact/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.commands;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":"import static transact.logic.commands.CommandTestUtil.showPersonAtId;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.commands.CommandTestUtil.showTransactionAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.ModelManager;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":" * ListCommand.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTransactionBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_staffListIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(new ViewCommand(TabWindow.ADDRESSBOOK), model, ViewCommand.MESSAGE_SUCCESS_STAFF,","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_staffListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        showPersonAtId(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(new ViewCommand(TabWindow.ADDRESSBOOK), model, ViewCommand.MESSAGE_SUCCESS_STAFF,","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_transactionListIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(new ViewCommand(TabWindow.TRANSACTIONS), model, ViewCommand.MESSAGE_SUCCESS_TRANSACTIONS,","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"                expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_transactionListIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"        showTransactionAtIndex(model, ID_FIRST_PERSON);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(new ViewCommand(TabWindow.TRANSACTIONS), model, ViewCommand.MESSAGE_SUCCESS_TRANSACTIONS,","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"                expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    public void execute_overview_showsOverview() {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"        assertCommandSuccess(new ViewCommand(TabWindow.OVERVIEW), model, ViewCommand.MESSAGE_SUCCESS_OVERVIEW,","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cxo05":2,"Sasmik23":2,"-":27,"Bombbird2001":33}},{"path":"src/test/java/transact/logic/parser/AddStaffCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"public class AddStaffCommandParserTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    private AddStaffCommandParser parser \u003d new AddStaffCommandParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).withNextIdAndFree().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddStaffCommand(expectedPerson));","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"                .withNextIdAndFree().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"                new AddStaffCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withNextIdAndFree().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"                new AddStaffCommand(expectedPerson));","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStaffCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"Bombbird2001"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStaffCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":42,"-":142,"Bombbird2001":11}},{"path":"src/test/java/transact/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"AlainS87"},"content":"import transact.logic.commands.ClearStaffCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.DeleteStaffCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.FindCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.PersonUtil;","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        Person person \u003d new PersonBuilder().withNextIdAndFree().build();","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        AddStaffCommand command \u003d (AddStaffCommand) parser.parseCommand(PersonUtil.getAddStaffCommand(person));","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(new AddStaffCommand(person), command);","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"AlainS87"},"content":"        assertTrue(parser.parseCommand(ClearStaffCommand.COMMAND_WORD) instanceof ClearStaffCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"AlainS87"},"content":"        assertTrue(parser.parseCommand(ClearStaffCommand.COMMAND_WORD + \" 3\") instanceof ClearStaffCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        DeleteStaffCommand command \u003d (DeleteStaffCommand) parser.parseCommand(","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"Sasmik23"},"content":"                DeleteStaffCommand.COMMAND_WORD + \" \" + ID_FIRST_PERSON);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Sasmik23"},"content":"        assertEquals(new DeleteStaffCommand(ID_FIRST_PERSON), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"PetrichorPrecipice"},"content":"        EditStaffCommand command \u003d (EditStaffCommand) parser.parseCommand(EditStaffCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Sasmik23"},"content":"                + ID_FIRST_PERSON + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Sasmik23"},"content":"        assertEquals(new EditStaffCommand(ID_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" staff\") instanceof ViewCommand);","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" transaction\") instanceof ViewCommand);","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" staff 3\") instanceof ViewCommand);","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"                () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AlainS87":3,"cxo05":2,"Sasmik23":5,"-":69,"Bombbird2001":14,"PetrichorPrecipice":9}},{"path":"src/test/java/transact/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"cxo05"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"cxo05"},"content":"     * the {@code expectedValues}","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"     * and only the last value is returned upon calling","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"cxo05"},"content":"     * {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"cxo05"},"content":"        // trimmed","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"        // reset","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"-":145}},{"path":"src/test/java/transact/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.Command;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     * and the command created","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"     * unsuccessful and the error message","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":7,"-":34}},{"path":"src/test/java/transact/logic/parser/DeleteStaffCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.DeleteStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * variations","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":" * outside of the DeleteStaffCommand code. For example, inputs \"1\" and \"1 abc\" take","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":" * the","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":" * same path through the DeleteStaffCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"public class DeleteStaffCommandParserTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    private DeleteStaffCommandParser parser \u003d new DeleteStaffCommandParser();","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_validArgs_returnsDeleteStaffCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Sasmik23"},"content":"        assertParseSuccess(parser, \"1\", new DeleteStaffCommand(ID_FIRST_PERSON));","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStaffCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":25,"Sasmik23":2,"Bombbird2001":7}},{"path":"src/test/java/transact/logic/parser/EditStaffCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_THIRD_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"import transact.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"import transact.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"PetrichorPrecipice"},"content":"public class EditStaffCommandParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"PetrichorPrecipice"},"content":"            EditStaffCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"PetrichorPrecipice"},"content":"    private EditStaffCommandParser parser \u003d new EditStaffCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"PetrichorPrecipice"},"content":"        assertParseFailure(parser, \"1\", EditStaffCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"        // Person} being edited,","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"Sasmik23"},"content":"        Integer targetId \u003d ID_SECOND_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Sasmik23"},"content":"        String userInput \u003d targetId + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"        Integer targetId \u003d ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Sasmik23"},"content":"        String userInput \u003d targetId + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"Sasmik23"},"content":"        Integer targetId \u003d ID_THIRD_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Sasmik23"},"content":"        String userInput \u003d targetId + NAME_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"Sasmik23"},"content":"        expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"Sasmik23"},"content":"        expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"Sasmik23"},"content":"        expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"Sasmik23"},"content":"        expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"Bombbird2001"},"content":"        // AddStaffCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"Sasmik23"},"content":"        Integer targetId \u003d ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"Sasmik23"},"content":"        String userInput \u003d targetId + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"Sasmik23"},"content":"        userInput \u003d targetId + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":197,"author":{"gitId":"Sasmik23"},"content":"        Integer targetId \u003d ID_THIRD_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"Sasmik23"},"content":"        String userInput \u003d targetId + TAG_EMPTY;","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"Sasmik23"},"content":"        EditStaffCommand expectedCommand \u003d new EditStaffCommand(targetId, descriptor);","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":40,"Sasmik23":28,"-":130,"PetrichorPrecipice":6,"Bombbird2001":1}},{"path":"src/test/java/transact/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.logic.commands.FindCommand;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":26}},{"path":"src/test/java/transact/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Sasmik23"},"content":"import static transact.testutil.TypicalIndexes.ID_FIRST_PERSON;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX,","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"cxo05"},"content":"                () -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(ID_FIRST_PERSON, ParserUtil.parseIndex(\"1\").getOneBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(ID_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \").getOneBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-10-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2023-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"Sasmik23":1,"-":182,"Bombbird2001":2}},{"path":"src/test/java/transact/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.logic.parser;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.ui.MainWindow.TabWindow;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_wrongArg_throwsParseException() {","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        assertParseFailure(parser, \"staffs\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_validArgsStaff_returnsViewCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        // Use \"staff\" as argument","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        ViewCommand expectedViewCommand \u003d new ViewCommand(TabWindow.ADDRESSBOOK);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        assertParseSuccess(parser, \"staff\", expectedViewCommand);","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        // Use \"s\" as argument","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        assertParseSuccess(parser, \"s\", expectedViewCommand);","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_validArgsTransaction_returnsViewCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        // Use \"transaction\" as argument","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        ViewCommand expectedViewCommand \u003d new ViewCommand(TabWindow.TRANSACTIONS);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        assertParseSuccess(parser, \"transaction\", expectedViewCommand);","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        // Use \"t\" as argument","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        assertParseSuccess(parser, \"t\", expectedViewCommand);","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    public void parse_validArgsOverview_returnsViewCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        // Use \"overview\" as argument","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        ViewCommand expectedViewCommand \u003d new ViewCommand(TabWindow.OVERVIEW);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"        assertParseSuccess(parser, \"overview\", expectedViewCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        // Use \"o\" as argument","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Bombbird2001"},"content":"        assertParseSuccess(parser, \"o\", expectedViewCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"Bombbird2001":56}},{"path":"src/test/java/transact/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        // Two persons with the same identity fields (but assuming they were mistakenly put with the wrong person ID keys)","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"Sasmik23"},"content":"        assertFalse(addressBook.hasPerson(ALICE.getPersonId()));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"Sasmik23"},"content":"        assertTrue(addressBook.hasPerson(ALICE.getPersonId()));","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"Sasmik23"},"content":"        assertTrue(addressBook.hasPerson(editedAlice.getPersonId()));","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonMap() + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"     * constraints.","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"Sasmik23"},"content":"        private final ObservableMap\u003cPersonId, Person\u003e personMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"            for (Person person : persons) {","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"                // We instantiate unique arbitrary person IDs for testing that UniqueEntryHashmap still enforces","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"                // uniqueness among values (not just keys)","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"                this.personMap.put(new PersonId(), person);","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"Sasmik23"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Sasmik23"},"content":"        public ObservableMap\u003cPersonId, Person\u003e getPersonMap() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Sasmik23"},"content":"            return personMap;","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Sasmik23"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"Sasmik23":11,"-":90,"Bombbird2001":10}},{"path":"src/test/java/transact/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.model.Model.PREDICATE_HIDE_ALL_TRANSACTIONS;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.model.Model.PREDICATE_SHOW_ALL_TRANSACTIONS;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.APPLES;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"import transact.testutil.AddressBookBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.TransactionBookBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(new TransactionBook(), new TransactionBook(modelManager.getTransactionBook()));","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"Sasmik23"},"content":"        assertFalse(modelManager.hasPerson(ALICE.getPersonId()));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"Sasmik23"},"content":"        assertTrue(modelManager.hasPerson(ALICE.getPersonId()));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"    public void setTransactionBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTransactionBookFilePath(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"    public void setTransactionBookFilePath_validPath_setsTransactionBookFilePath() {","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"        Path path \u003d Paths.get(\"transaction/book/file/path\");","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"        modelManager.setTransactionBookFilePath(path);","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(path, modelManager.getTransactionBookFilePath());","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"Sasmik23"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"Sasmik23"},"content":"    public void setExportFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"Sasmik23"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setExportFilePath(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"Sasmik23"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"Sasmik23"},"content":"    public void setExportFilePath_validPath_setsTransactionBookFilePath() {","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"Sasmik23"},"content":"        Path path \u003d Paths.get(\"/export/file/path\");","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"Sasmik23"},"content":"        modelManager.setExportFilePath(path);","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"Sasmik23"},"content":"        assertEquals(path, modelManager.getExportFilePath());","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTransaction(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_transactionNotInTransactionBook_returnsFalse() {","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"cxo05"},"content":"        assertFalse(modelManager.hasTransaction(APPLES.getTransactionId()));","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_transactionInTransactionBook_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"Bombbird2001"},"content":"        modelManager.addTransaction(APPLES);","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"cxo05"},"content":"        assertTrue(modelManager.hasTransaction(APPLES.getTransactionId()));","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"Bombbird2001"},"content":"    public void getFilteredTransactionList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTransactionList().remove(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBook transactionBook \u003d new TransactionBookBuilder().withTransaction(APPLES).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBook differentTransactionBook \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"Bombbird2001"},"content":"        modelManager \u003d new ModelManager(addressBook, transactionBook, userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"Bombbird2001"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, transactionBook, userPrefs);","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, transactionBook, userPrefs)));","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"Bombbird2001"},"content":"        // different filteredList (address) -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, transactionBook, userPrefs)));","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"Bombbird2001"},"content":"        // different transactionBook -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"Bombbird2001"},"content":"        modelManager.updateFilteredTransactionList(PREDICATE_HIDE_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"cxo05"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTransactionBook, userPrefs)));","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"Bombbird2001"},"content":"        modelManager.updateFilteredTransactionList(PREDICATE_SHOW_ALL_TRANSACTIONS);","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, transactionBook, differentUserPrefs)));","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":12,"Sasmik23":14,"-":113,"Bombbird2001":47}},{"path":"src/test/java/transact/model/TransactionBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.APPLES;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.BANANAS;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.getTypicalTransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.TransactionBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"public class TransactionBookTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    private final TransactionBook transactionBook \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    public void constructor() {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(Collections.emptyList(), transactionBook.getTransactionList());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e transactionBook.resetData(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"    public void resetData_withValidReadOnlyTransactionBook_replacesData() {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBook newData \u003d getTypicalTransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.resetData(newData);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(newData, transactionBook);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"    // TODO Fix this test","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"    public void resetData_withDuplicateTransactions_throwsDuplicateEntryException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        // Two transactions with the same identity fields","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"        // Transaction editedTrans \u003d new","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"cxo05"},"content":"        // TransactionBuilder(APPLES).withDescription(\"Apple 123\").withAmount(10.00f)","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        // .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"cxo05"},"content":"        // Map\u003cTransactionId, Transaction\u003e newTransactions \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"cxo05"},"content":"        // FXCollections.observableHashMap();\\","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"        // TransactionBookTest.TransactionBookStub newData \u003d new","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"        // TransactionBookTest.TransactionBookStub(newTransactions);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"        // assertThrows(DuplicateEntryException.class, () -\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"        // transactionBook.resetData(newData));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_nullTransaction_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e transactionBook.hasTransaction(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_transactionNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"cxo05"},"content":"        assertFalse(transactionBook.hasTransaction(APPLES.getTransactionId()));","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_transactionInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(APPLES);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"cxo05"},"content":"        assertTrue(transactionBook.hasTransaction(APPLES.getTransactionId()));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    public void hasTransaction_transactionWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(BANANAS);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        Transaction editedTrans \u003d new TransactionBuilder(BANANAS).withDescription(\"Banana 123\").withAmount(123)","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"                .build();","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"        assertTrue(transactionBook.hasTransaction(editedTrans.getTransactionId()));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"cxo05"},"content":"        String expected \u003d TransactionBook.class.getCanonicalName() + \"{transactions\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"                + transactionBook.getTransactionMap() + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"Bombbird2001"},"content":"        assertEquals(expected, transactionBook.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"     * A stub ReadOnlyTransactionBook whose transactions list can violate interface","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Bombbird2001"},"content":"     * constraints.","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Bombbird2001"},"content":"    private static class TransactionBookStub implements ReadOnlyTransactionBook {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"        private final ObservableList\u003cTransaction\u003e transactionList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"        private final ObservableMap\u003cTransactionId, Transaction\u003e transactionMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBookStub(Collection\u003cTransaction\u003e transactions) {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"cxo05"},"content":"            this.transactionList.setAll(transactions);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Bombbird2001"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"        public ObservableList\u003cTransaction\u003e getTransactionList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"cxo05"},"content":"            return transactionList;","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"cxo05"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"cxo05"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"cxo05"},"content":"        public ObservableMap\u003cTransactionId, Transaction\u003e getTransactionMap() {","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"cxo05"},"content":"            return transactionMap;","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"cxo05":27,"Bombbird2001":86}},{"path":"src/test/java/transact/model/UniqueEntryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.exceptions.DuplicateEntryException;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.entry.exceptions.EntryNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"public class UniqueEntryListTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    private final UniqueEntryList\u003cPerson\u003e uniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntry(null, ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntry(ALICE, null));","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(EntryNotFoundException.class, () -\u003e uniquePersonList.setEntry(ALICE, ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"        uniquePersonList.setEntry(ALICE, ALICE);","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        uniquePersonList.setEntry(ALICE, editedAlice);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"        uniquePersonList.setEntry(ALICE, BOB);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniquePersonList.setEntry(ALICE, BOB));","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(EntryNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntries((UniqueEntryList\u003cPerson\u003e) null));","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"Bombbird2001"},"content":"        uniquePersonList.setEntries(expectedUniquePersonList);","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setEntries((List\u003cPerson\u003e) null));","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"Bombbird2001"},"content":"        uniquePersonList.setEntries(personList);","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"Bombbird2001"},"content":"        UniqueEntryList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueEntryList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(DuplicateEntryException.class, () -\u003e uniquePersonList.setEntries(listWithDuplicatePersons));","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"cxo05"},"content":"        assertThrows(UnsupportedOperationException.class,","lastModifiedDate":"2023-10-09"},{"lineNumber":169,"author":{"gitId":"cxo05"},"content":"                () -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":8,"-":142,"Bombbird2001":26}},{"path":"src/test/java/transact/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"Sasmik23"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Sasmik23"},"content":"    public void setExportFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Sasmik23"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Sasmik23"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setExportFilePath(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Sasmik23"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"Sasmik23":6,"-":19}},{"path":"src/test/java/transact/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":51}},{"path":"src/test/java/transact/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":83}},{"path":"src/test/java/transact/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.StringContainsKeywordsPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        StringContainsKeywordsPredicate stringPredicate \u003d new StringContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{predicate\u003d\" + stringPredicate + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":79,"Bombbird2001":3}},{"path":"src/test/java/transact/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":55}},{"path":"src/test/java/transact/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.testutil.PersonBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"        assertTrue(ALICE.isSameEntry(ALICE));","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(ALICE.isSameEntry(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        assertTrue(ALICE.isSameEntry(editedAlice));","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        // different ID, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withId(new PersonId()).build();","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(ALICE.isSameEntry(editedAlice));","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{id\u003d\" + ALICE.getPersonId() + \", name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":10,"-":69,"Bombbird2001":9}},{"path":"src/test/java/transact/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":55}},{"path":"src/test/java/transact/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.model.tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":2,"-":24}},{"path":"src/test/java/transact/model/transaction/TransactionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.model.transaction;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalTransactions.APPLES;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.testutil.TransactionBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class TransactionTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"    public void isSameTransaction() {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        assertTrue(APPLES.isSameEntry(APPLES));","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(APPLES.isSameEntry(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"        // same ID, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"        Transaction editedApples \u003d new TransactionBuilder(APPLES).withAmount(19f).withDescription(\"Apple 2\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"        assertTrue(APPLES.isSameEntry(editedApples));","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"        // different ID, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"        editedApples \u003d new TransactionBuilder(APPLES).withId(123).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        assertFalse(APPLES.isSameEntry(editedApples));","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"cxo05":1,"Bombbird2001":28}},{"path":"src/test/java/transact/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        // We need to free the ID since the method will initialize a new person but we need to check for","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        // equality including PersonID","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(BENSON.getPersonId().value);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"cxo05"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"cxo05"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-10-09"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"cxo05"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-10-09"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"cxo05"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(-1, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"cxo05"},"content":"                invalidTags);","lastModifiedDate":"2023-10-09"},{"lineNumber":119,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(-1);","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":14,"-":87,"Bombbird2001":22}},{"path":"src/test/java/transact/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.PersonUtil.clearAddressBookPersonIdUniqueness;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        clearAddressBookPersonIdUniqueness(original);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"Sasmik23"},"content":"        original.removePerson(ALICE.getPersonId());","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        clearAddressBookPersonIdUniqueness(original);","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"        clearAddressBookPersonIdUniqueness(original);","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"Sasmik23":1,"-":100,"Bombbird2001":4}},{"path":"src/test/java/transact/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.commons.util.JsonUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.testutil.TypicalPersons;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"            PersonId.freeUsedPersonIds(i);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(7);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(0);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        assertThrows(IllegalValueException.class, PersonId.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":6,"-":39,"Bombbird2001":8}},{"path":"src/test/java/transact/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"cxo05"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder}","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"cxo05"},"content":"     * filepath.","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"cxo05"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"cxo05"},"content":"        // Try saving when the file exists","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":9,"-":115}},{"path":"src/test/java/transact/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.PersonUtil.clearAddressBookPersonIdUniqueness;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.GuiSettings;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"import transact.model.UserPrefs;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"Sasmik23"},"content":"        CsvAdaptedTransactionStorage transactionBookStorage \u003d new CsvAdaptedTransactionStorage(getTempFilePath(\"tb\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, transactionBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"cxo05"},"content":"         * properly wired to the","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"         * JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"         * Note: This is an integration test that verifies the StorageManager is","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"         * properly wired to the","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"         * JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"        clearAddressBookPersonIdUniqueness(original);","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":14,"Sasmik23":1,"-":57,"Bombbird2001":3}},{"path":"src/test/java/transact/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":4,"-":30}},{"path":"src/test/java/transact/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType}","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"     * Exception.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"     * This is a wrapper method that invokes","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"cxo05"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"     * To standardize API calls in this project, users should use this method","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"     * instead of","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"     * with the {@code expectedMessage}.","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message,","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"     * call","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"-":28}},{"path":"src/test/java/transact/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"     * {@code person}\u0027s details","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"cxo05"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"     * building.","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"cxo05"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"     * building.","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"     * building.","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"cxo05"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"cxo05"},"content":"     * building.","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"cxo05"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"cxo05"},"content":"     * {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":19,"-":73,"PetrichorPrecipice":1}},{"path":"src/test/java/transact/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":"import transact.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    private PersonId personId;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"        personId \u003d personToCopy.getPersonId();","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Bombbird2001"},"content":"     * Sets the {@code PersonId} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Bombbird2001"},"content":"    public PersonBuilder withId(PersonId id) {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Bombbird2001"},"content":"        this.personId \u003d id;","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"Bombbird2001"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"     * Sets the {@code PersonId} of the {@code Person} that we are building","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"     * to a new PersonID, and frees it from the set so the next PersonID to","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"     * be created (from a command for example) will have the same ID for","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"     * comparison","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"    public PersonBuilder withNextIdAndFree() {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        PersonId id \u003d new PersonId();","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        PersonId.freeUsedPersonIds(id.value);","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"        return withId(id);","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"cxo05"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"cxo05"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"Bombbird2001"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.(","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"Bombbird2001"},"content":"     * Builds a person with the provided parameters","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"Bombbird2001"},"content":"        if (personId !\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"Bombbird2001"},"content":"            return new Person(personId, name, phone, email, address, tags);","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"-":85,"Bombbird2001":30}},{"path":"src/test/java/transact/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"import transact.logic.commands.AddStaffCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.logic.commands.EditStaffCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.PersonId;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"cxo05"},"content":"import transact.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public static String getAddStaffCommand(Person person) {","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        return AddStaffCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"cxo05"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"     * Returns the part of command string for the given","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"     * {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"     * Clears the {@code PersonId} used by {@code addressBook} to avoid duplicate IDs when testing","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"    public static void clearAddressBookPersonIdUniqueness(AddressBook addressBook) {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"Bombbird2001"},"content":"        for (Person person : addressBook.getPersonList()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"            PersonId.freeUsedPersonIds(person.getPersonId().value);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":11,"-":47,"Bombbird2001":14,"PetrichorPrecipice":1}},{"path":"src/test/java/transact/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":1,"-":71}},{"path":"src/test/java/transact/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import transact.commons.core.index.Index;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import transact.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"     * path.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":6,"-":50}},{"path":"src/test/java/transact/testutil/TransactionBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":" * A utility class to help with building TransactionBook objects.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Bombbird2001"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":" * {@code TransactionBook ab \u003d new TransactionBookBuilder().withTransaction(APPLES, BANANAS).build();}","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"public class TransactionBookBuilder {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"    private TransactionBook transactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBookBuilder() {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBookBuilder(TransactionBook transactionBook) {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"        this.transactionBook \u003d transactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"     * Adds a new {@code Transaction} to the {@code TransactionBook} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBookBuilder withTransaction(Transaction transaction) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"        transactionBook.addTransaction(transaction);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBook build() {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"        return transactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Bombbird2001":34}},{"path":"src/test/java/transact/testutil/TransactionBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.TransactionId;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Bombbird2001"},"content":" * A utility class to help with building Transaction objects.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public class TransactionBuilder {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    public static final Integer DEFAULT_ID \u003d 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"    public static final String DEFAULT_TYPE \u003d \"Expense\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Bombbird2001"},"content":"    public static final String DEFAULT_DESC \u003d \"Shibas\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Bombbird2001"},"content":"    public static final float DEFAULT_AMOUNT \u003d 10.34f;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"    public static final String DEFAULT_DATE \u003d \"11/11/23\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Bombbird2001"},"content":"    public static final Person DEFAULT_PERSON \u003d ALICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Bombbird2001"},"content":"    private TransactionId id;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"    private TransactionType transactionType;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Bombbird2001"},"content":"    private Description description;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Bombbird2001"},"content":"    private Amount amount;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"AlainS87"},"content":"    private Date date;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"    private Integer personId;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Bombbird2001"},"content":"     * Creates a {@code TransactionBuilder} with the default details.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBuilder() {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"        id \u003d new TransactionId(DEFAULT_ID);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"cxo05"},"content":"        transactionType \u003d TransactionType.getType(DEFAULT_TYPE);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"        description \u003d new Description(DEFAULT_DESC);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"        amount \u003d new Amount(DEFAULT_AMOUNT);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"AlainS87"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"cxo05"},"content":"        personId \u003d DEFAULT_PERSON.getPersonId().getValue();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"cxo05"},"content":"     * Initializes the TransactionBuilder with the data of","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"cxo05"},"content":"     * {@code transactionToCopy}.","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBuilder(Transaction transactionToCopy) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"        id \u003d transactionToCopy.getTransactionId();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"cxo05"},"content":"        transactionType \u003d transactionToCopy.getTransactionType();","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Bombbird2001"},"content":"        description \u003d transactionToCopy.getDescription();","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Bombbird2001"},"content":"        amount \u003d transactionToCopy.getAmount();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"AlainS87"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"cxo05"},"content":"        personId \u003d transactionToCopy.getPersonId();","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"cxo05"},"content":"     * Sets the {@code transactionType} of the {@code Transaction} that we are","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"cxo05"},"content":"     * building.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"    public TransactionBuilder withType(String transactionType) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"        this.transactionType \u003d TransactionType.getType(transactionType);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"cxo05"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Bombbird2001"},"content":"     * Sets the {@code id} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"cxo05"},"content":"    public TransactionBuilder withId(Integer id) {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"Bombbird2001"},"content":"        this.id \u003d new TransactionId(id);","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Bombbird2001"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Bombbird2001"},"content":"     * Sets the {@code Description} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBuilder withDescription(String desc) {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Bombbird2001"},"content":"        this.description \u003d new Description(desc);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Bombbird2001"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"Bombbird2001"},"content":"    /** Sets the {@code Amount} of the {@code Transaction} that we are building. */","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"Bombbird2001"},"content":"    public TransactionBuilder withAmount(float amount) {","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"Bombbird2001"},"content":"        this.amount \u003d new Amount(amount);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"Bombbird2001"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"AlainS87"},"content":"    /** Sets the {@code Date} of the {@code Transaction} that we are building. */","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"AlainS87"},"content":"    public TransactionBuilder withDate(String date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"AlainS87"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"AlainS87"},"content":"        return this;","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"AlainS87"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"AlainS87"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"cxo05"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"cxo05"},"content":"     * Sets the {@code personId} of the {@code Transaction} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"cxo05"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"cxo05"},"content":"    public TransactionBuilder withPersonId(Integer personId) {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"cxo05"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"Bombbird2001"},"content":"        return this;","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Bombbird2001"},"content":"    public Transaction build() {","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"cxo05"},"content":"        return new Transaction(id, transactionType, description, amount, date, personId);","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"AlainS87":9,"cxo05":26,"Bombbird2001":68,"PetrichorPrecipice":2}},{"path":"src/test/java/transact/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"cxo05"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"Sasmik23"},"content":" * A utility class containing a list of {@code Index} and {@code id} objects to be used in","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":" * tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"public class TypicalIndexes {","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"Sasmik23"},"content":"    public static final Integer ID_FIRST_PERSON \u003d 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Sasmik23"},"content":"    public static final Integer ID_SECOND_PERSON \u003d 2;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Sasmik23"},"content":"    public static final Integer ID_THIRD_PERSON \u003d 3;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Sasmik23"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":7,"Sasmik23":5}},{"path":"src/test/java/transact/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"cxo05"},"content":"import static transact.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"import transact.model.AddressBook;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"import transact.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":" * tests.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"cxo05"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"cxo05"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":17,"-":61}},{"path":"src/test/java/transact/testutil/TypicalTransactions.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bombbird2001"},"content":"package transact.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bombbird2001"},"content":"import static transact.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.TransactionBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.Transaction;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Amount;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Bombbird2001"},"content":"import transact.model.transaction.info.Description;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"PetrichorPrecipice"},"content":"import transact.model.transaction.info.TransactionType;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Bombbird2001"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"cxo05"},"content":" * A utility class containing a list of {@code Transaction} objects to be used","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":" * in tests.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Bombbird2001"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Bombbird2001"},"content":"public class TypicalTransactions {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    public static final Transaction APPLES \u003d new Transaction(TransactionType.EXPENSE,","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"            new Description(\"Apples\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"cxo05"},"content":"            new Amount(1.50), new Date(\"15/11/18\"), ALICE.getPersonId().getValue());","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"cxo05"},"content":"    public static final Transaction BANANAS \u003d new Transaction(TransactionType.EXPENSE,","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"cxo05"},"content":"            new Description(\"Bananas\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"cxo05"},"content":"            new Amount(1.50), new Date(\"15/11/18\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"cxo05"},"content":"    public static final Transaction CARROTS \u003d new Transaction(TransactionType.EXPENSE,","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"cxo05"},"content":"            new Description(\"Carrots\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"cxo05"},"content":"            new Amount(1.50), new Date(\"15/11/18\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"cxo05"},"content":"    public static final Transaction DATES \u003d new Transaction(TransactionType.EXPENSE,","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"cxo05"},"content":"            new Description(\"Dates\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"cxo05"},"content":"            new Amount(4.50), new Date(\"15/11/18\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"cxo05"},"content":"    public static final Transaction EGGS \u003d new Transaction(TransactionType.EXPENSE,","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"cxo05"},"content":"            new Description(\"Eggs\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"cxo05"},"content":"            new Amount(5.00), new Date(\"15/11/18\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"cxo05"},"content":"    public static final Transaction FISH \u003d new Transaction(TransactionType.REVENUE,","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"cxo05"},"content":"            new Description(\"Fish\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"cxo05"},"content":"            new Amount(6.50), new Date(\"15/11/18\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Bombbird2001"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Bombbird2001"},"content":"     * Returns a {@code TransactionBook} with all the typical transactions.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Bombbird2001"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Bombbird2001"},"content":"    public static TransactionBook getTypicalTransactionBook() {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Bombbird2001"},"content":"        TransactionBook tb \u003d new TransactionBook();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Bombbird2001"},"content":"        for (Transaction transaction : getTypicalTransactions()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Bombbird2001"},"content":"            tb.addTransaction(transaction);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Bombbird2001"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Bombbird2001"},"content":"        return tb;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Bombbird2001"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Bombbird2001"},"content":"    public static Transaction[] getTypicalTransactions() {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Bombbird2001"},"content":"        return new Transaction[] { APPLES, BANANAS, CARROTS, DATES, EGGS, FISH };","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Bombbird2001"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Bombbird2001"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"cxo05":20,"Bombbird2001":28,"PetrichorPrecipice":2}},{"path":"src/test/java/transact/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"cxo05"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"cxo05"},"content":" * toolkit being initialized.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"cxo05"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"cxo05"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":42}},{"path":"src/test/java/transact/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cxo05"},"content":"package transact.ui;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"cxo05"},"content":"import static transact.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"cxo05"},"content":"import transact.MainApp;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"cxo05"},"content":"     * It should only be used with invalid FXML files or the valid file located at","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"cxo05"},"content":"     * {@link VALID_FILE_PATH}.","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"cxo05":5,"-":110}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"\u003c?import transact.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cxo05":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"cxo05"},"content":"\u003cfx:root type\u003d\"transact.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cxo05":1,"-":5}}]

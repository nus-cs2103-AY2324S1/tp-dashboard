[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-T12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T12-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"[![pages-build-deployment](https://github.com/AY2324S1-CS2103T-T12-3/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2324S1-CS2103T-T12-3/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T12-3/tp/graph/badge.svg?token\u003dHFEG6YRILK)](https://codecov.io/gh/AY2324S1-CS2103T-T12-3/tp)","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"# About CampusCompanion","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"University is a busy but important time of everyoneâ€™s life! We want to provide students with an all-in-one solution to track their most important events that they would experience while in university.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"## Features","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"- [ ] Assignment tracker","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"  - [ ] Add assignments with due dates","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"  - [ ] Mark assignments as completed","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"  - [ ] List assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"- [ ] School events tracker","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"  - [ ] Add school events with due dates","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"  - [ ] List school events","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"- [ ] Internship tracker","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"  - [ ] Add internship applications with due dates","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"  - [ ] Tag internship application as in-progress/completed etc","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"seewhyjay":19,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"### Althea Chua","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"\u003cimg src\u003d\"images/chuababyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"[[github](https://github.com/chuababyy)]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"[[portfolio](team/chuababyy.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"### Chow Yuan Jing","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"\u003cimg src\u003d\"images/seewhyjay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"[[github](http://github.com/seewhyjay)]","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"[[portfolio](team/seewhyjay.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"* Responsibilities: Integration","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jrchoo"},"content":"### Jia Rong","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jrchoo"},"content":"\u003cimg src\u003d\"images/jrchoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jrchoo"},"content":"[[github](http://github.com/jrchoo)] [[portfolio](team/jrchoo.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jrchoo"},"content":"### Terrence","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jrchoo"},"content":"\u003cimg src\u003d\"images/badatprogrammiing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jrchoo"},"content":"[[github](https://github.com/Badatprogrammiing)]","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"[[portfolio](team/badatprogrammiing.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jellywaiyan"},"content":"### Htet Wai Yan Aung","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jellywaiyan"},"content":"\u003cimg src\u003d\"images/jellywaiyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jellywaiyan"},"content":"[[github](http://github.com/jellywaiyan)]","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"jellywaiyan"},"content":"[[portfolio](team/jellywaiyan.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"chuababyy":5,"seewhyjay":6,"jellywaiyan":4,"Badatprogrammiing":2,"jrchoo":6,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"chuababyy"},"content":"* has many assignments to keep track of as a student in university","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"chuababyy"},"content":"**Value proposition**: manage assignments and deadlines faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                    | I want to â€¦â€‹                            | So that I canâ€¦â€‹                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"chuababyy"},"content":"| ----- |----------------------------|-----------------------------------------|--------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| `* * *` | new user                   | see usage instructions                  | refer to instructions when I forget how to use the App |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"chuababyy"},"content":"| `* * *` | user                       | add a new assignment                    | keep track of what I need to complete                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"chuababyy"},"content":"| `* * *` | user                       | delete an assingmnet                    | remove entries that I no longer need                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"chuababyy"},"content":"| `* * *` | user                       | mark an assignment as completed         | track my progress of my assignments                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"chuababyy"},"content":"| `* * *` | user                       | unmark an assignment which is completed | track my progress if I marked something wrongly        |","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"chuababyy"},"content":"| `* * *` | user with many assignments | see all the current assignments         | see all my current assignments                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"chuababyy"},"content":"|`* * *`  | user                       | edit a previously added assignment      | change the requirements in the future                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"chuababyy"},"content":"(For all use cases below, the **System** is the `CampusCompanion` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"chuababyy"},"content":"**Use case: Add an assignment**","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"chuababyy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"chuababyy"},"content":"1.  User requests to add an assignment","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"chuababyy"},"content":"2.  CampusCompanion adds the assignment and shows success message","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"chuababyy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"chuababyy"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"chuababyy"},"content":"* 1a. The given command is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":302,"author":{"gitId":"chuababyy"},"content":"    * 1a1. CampusCompanion shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":303,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":304,"author":{"gitId":"chuababyy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-03"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"chuababyy"},"content":"1.  User requests to list all assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"chuababyy"},"content":"2.  CampusCompanion shows a list of assignments with their details","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"chuababyy"},"content":"3.  User requests to delete a specific assignment in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"chuababyy"},"content":"4.  CampusCompanion deletes the assignment","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":315,"author":{"gitId":"chuababyy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":317,"author":{"gitId":"chuababyy"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"chuababyy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"chuababyy"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"chuababyy"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":325,"author":{"gitId":"chuababyy"},"content":"    * 3a1. CampusCompanion shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"chuababyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"chuababyy"},"content":"**Use case: Mark an assignment**","lastModifiedDate":"2023-10-03"},{"lineNumber":330,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"chuababyy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":332,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"chuababyy"},"content":"1.  User requests to list all assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":334,"author":{"gitId":"chuababyy"},"content":"2.  CampusCompanion shows a list of assignments with their details","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"chuababyy"},"content":"3.  User requests to mark a specific assignment in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":336,"author":{"gitId":"chuababyy"},"content":"4.  CampusCompanion marks the assignment","lastModifiedDate":"2023-10-03"},{"lineNumber":337,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":338,"author":{"gitId":"chuababyy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":339,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":340,"author":{"gitId":"chuababyy"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":341,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"chuababyy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":343,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":344,"author":{"gitId":"chuababyy"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":345,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":346,"author":{"gitId":"chuababyy"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":347,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":348,"author":{"gitId":"chuababyy"},"content":"    * 3a1. CampusCompanion shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":349,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":350,"author":{"gitId":"chuababyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":351,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"chuababyy"},"content":"**Use case: UnMark an assignment**","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":354,"author":{"gitId":"chuababyy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":356,"author":{"gitId":"chuababyy"},"content":"1.  User requests to list all assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"chuababyy"},"content":"2.  CampusCompanion shows a list of assignments with their details","lastModifiedDate":"2023-10-03"},{"lineNumber":358,"author":{"gitId":"chuababyy"},"content":"3.  User requests to unmark a specific assignment in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"chuababyy"},"content":"4.  CampusCompanion unmarks the assignment","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"chuababyy"},"content":"    * 3a1. CampusCompanion shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":372,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":373,"author":{"gitId":"chuababyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":375,"author":{"gitId":"chuababyy"},"content":"**Use case: Edit an assignment**","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":377,"author":{"gitId":"chuababyy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":378,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":379,"author":{"gitId":"chuababyy"},"content":"1.  User requests to list all assignments","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"chuababyy"},"content":"2.  CampusCompanion shows a list of assignments with their details","lastModifiedDate":"2023-10-03"},{"lineNumber":381,"author":{"gitId":"chuababyy"},"content":"3.  User requests to edit a specific assignment in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":382,"author":{"gitId":"chuababyy"},"content":"4.  User specifies new item name for assignment","lastModifiedDate":"2023-10-03"},{"lineNumber":383,"author":{"gitId":"chuababyy"},"content":"5.  CampusCompanion changes the assignment name","lastModifiedDate":"2023-10-03"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":391,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"chuababyy"},"content":"    * 3a1. CampusCompanion shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":396,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"chuababyy"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":398,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":399,"author":{"gitId":"chuababyy"},"content":"* 3b. The user did not specify a new item name. ","lastModifiedDate":"2023-10-03"},{"lineNumber":400,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"chuababyy"},"content":"    * 3b1. CampusCompanion shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"Badatprogrammiing"},"content":"4.  The user interface should be intuitive enough for users who are not IT-savvy","lastModifiedDate":"2023-10-04"},{"lineNumber":413,"author":{"gitId":"Badatprogrammiing"},"content":"5. The product should be for a single user","lastModifiedDate":"2023-10-04"},{"lineNumber":414,"author":{"gitId":"Badatprogrammiing"},"content":"6. The software should work without requiring an installer.","lastModifiedDate":"2023-10-04"},{"lineNumber":415,"author":{"gitId":"Badatprogrammiing"},"content":"7. The GUI should work well for standard resolutions","lastModifiedDate":"2023-10-04"},{"lineNumber":416,"author":{"gitId":"Badatprogrammiing"},"content":"8. The file sizes of the deliverables should be reasonable and not exceed the limits given below.","lastModifiedDate":"2023-10-04"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"chuababyy"},"content":"### Deleting an assignment","lastModifiedDate":"2023-10-03"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"chuababyy"},"content":"1. Deleting an assignment while all assignments are being shown","lastModifiedDate":"2023-10-03"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"chuababyy"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple assignments in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"chuababyy"},"content":"      Expected: First assignment is deleted from the list. Details of the deleted assignment shown in the status message. ","lastModifiedDate":"2023-10-03"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"chuababyy"},"content":"      Expected: No assignment is deleted. Error details shown in the status message.","lastModifiedDate":"2023-10-03"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chuababyy":102,"Badatprogrammiing":5,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jellywaiyan"},"content":"Campus Companion (CC) is a **desktop app for tracking assignments, school events and internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CC can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jellywaiyan"},"content":"1. Download the latest `campuscompanion.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jellywaiyan"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Campus Companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jellywaiyan"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar campuscompanion.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jellywaiyan"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Campus Companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"jellywaiyan"},"content":"Adds a person to the campus companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"jellywaiyan"},"content":"Shows a list of all persons in the campus companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jellywaiyan"},"content":"Edits an existing person in the campus companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* You can remove all the personâ€™s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"jellywaiyan"},"content":"Deletes the specified person from the campus companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"jellywaiyan"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the campus companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"jellywaiyan"},"content":"## Assignments ","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"jellywaiyan"},"content":"### Adding an assignment : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"jellywaiyan"},"content":"### Mark an assignment : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"jellywaiyan"},"content":"### Delete an assignment : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"jellywaiyan"},"content":"### Edit an assignment : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"jellywaiyan"},"content":"### List all assignments : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"jellywaiyan"},"content":"## School Events","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"jellywaiyan"},"content":"### Adding a school event : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"jellywaiyan"},"content":"### Delete a school event : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"jellywaiyan"},"content":"### Edit a school event : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"jellywaiyan"},"content":"### List all school events : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"jellywaiyan"},"content":"## Internships","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"jellywaiyan"},"content":"### Adding an internship : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"jellywaiyan"},"content":"### Delete an internship : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"jellywaiyan"},"content":"### Edit an internship : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"jellywaiyan"},"content":"### List all internships : [coming soon]","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"jellywaiyan"},"content":"Clears all entries from the campus companion.","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"jellywaiyan"},"content":"CampusCompanion data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"jellywaiyan"},"content":"CampusCompanion data are saved automatically as a JSON file `[JAR file location]/data/campuscompanion.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":197,"author":{"gitId":"jellywaiyan"},"content":"If your changes to the data file makes its format invalid, Campus Companion will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-03"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"jellywaiyan"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Campus Companion home folder.","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jellywaiyan":47,"-":182}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"seewhyjay"},"content":"    content: \"CampusCompanion\";","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"seewhyjay":1,"-":294}},{"path":"docs/team/badatprogrammiing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"title: Terrence\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"### Project: CampusCompanion","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"CampusCompanion - your all-in-one solution to manage your university life.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dBadatprogrammiing\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Badatprogrammiing":28}},{"path":"docs/team/chuababyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"title: Althea\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"### Project: CampusCompanion","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"CampusCompanion - your all-in-one solution to manage your university life.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dchuababyy\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"chuababyy":28}},{"path":"docs/team/jellywaiyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jellywaiyan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jellywaiyan"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jellywaiyan"},"content":"title: Wai Yan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jellywaiyan"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jellywaiyan"},"content":"### Project: CampusCompanion","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jellywaiyan"},"content":"CampusCompanion - your all-in-one solution to manage your university life.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jellywaiyan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dchuababyy\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jellywaiyan"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jellywaiyan"},"content":"  * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jellywaiyan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jellywaiyan"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jellywaiyan"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jellywaiyan"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jellywaiyan"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jellywaiyan"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jellywaiyan"},"content":"  * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jellywaiyan"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jellywaiyan"},"content":"  * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jellywaiyan"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jellywaiyan"},"content":"  * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jellywaiyan":28}},{"path":"docs/team/jrchoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jrchoo"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"jrchoo"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"jrchoo"},"content":"title: Jia Rong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"jrchoo"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"jrchoo"},"content":"### Project: CampusCompanion","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"jrchoo"},"content":"CampusCompanion - your all-in-one solution to manage your university life.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"jrchoo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djrchoo\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"jrchoo"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"jrchoo"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"jrchoo"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"jrchoo"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"jrchoo"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"jrchoo"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"jrchoo"},"content":"        * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"jrchoo"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"jrchoo"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"jrchoo"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"jrchoo"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"jrchoo"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"jrchoo"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"jrchoo"},"content":"    * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"jrchoo":28}},{"path":"docs/team/seewhyjay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"title: Yuan Jing\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"### Project: CampusCompanion","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"CampusCompanion - your all-in-one solution to manage your university life.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dseewhyjay\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"  * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"* **Team-based tasks**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"  * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"* **Review and mentoring**:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"  * To be added","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"  * To be added","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"seewhyjay":29}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    ObservableList\u003cAssignment\u003e getFilteredAssignmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Badatprogrammiing":5,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"    public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"        return model.getFilteredAssignmentList();","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Badatprogrammiing":6,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.Prefix;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    public static final String MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX \u003d \"The assignment index provided is invalid\";","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"    public static String format(Assignment assignment) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"        builder.append(assignment.getName())","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"                .append(assignment.getDescription())","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"                .append(assignment.getStatus())","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"                .append(assignment.getEnd())","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"                .append(\"; Planned End date: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"                .append(assignment.getPlannedFinishDate())","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"        assignment.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chuababyy":21,"Badatprogrammiing":1,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/assignment/AddAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.commands.assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_PLANNEDFINISHDATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":" * Adds an assignment to the","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jellywaiyan"},"content":" * current list of assignments when executed.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"public class AddAssignmentCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String COMMAND_WORD \u003d \"add-a\";","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"            + \": Adds an assignment to the app. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION\" + \"]\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"            + PREFIX_ENDDATE + \"YYYY-MM-DD HH:mm \"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"            + \"[\" + PREFIX_PLANNEDFINISHDATE + \"YYYY-MM-DD HH:mm \" + \"]\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New assignment added: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"This assignment already exists in the address book\";","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    private final Assignment toAdd;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param assignment to be added","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    public AddAssignmentCommand(Assignment assignment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"        this.toAdd \u003d assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"        if (model.hasAssignment(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        model.addAssignment(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!(other instanceof AddAssignmentCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"        AddAssignmentCommand otherAddCommand \u003d (AddAssignmentCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"chuababyy":15,"jellywaiyan":1,"Badatprogrammiing":68}},{"path":"src/main/java/seedu/address/logic/commands/assignment/AssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.commands.assignment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"jellywaiyan"},"content":"public abstract class AssignmentCommand {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":20,"jellywaiyan":1}},{"path":"src/main/java/seedu/address/logic/commands/assignment/DeleteAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.logic.commands.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":" * Deletes a assignment identified using it\u0027s displayed index from the app.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"public class DeleteAssignmentCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"    public static final String COMMAND_WORD \u003d \"delete-a\";","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"            + \": Deletes the assignment identified by the index number used in the displayed assignment list.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    public static final String MESSAGE_DELETE_ASSIGNMENT_SUCCESS \u003d \"Deleted Assignment: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    public DeleteAssignmentCommand(Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"        List\u003cAssignment\u003e lastShownList \u003d model.getFilteredAssignmentList();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"        Assignment assignmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"        model.deleteAssignment(assignmentToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ASSIGNMENT_SUCCESS, Messages.format(assignmentToDelete)));","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"        if (!(other instanceof DeleteAssignmentCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand otherDeleteCommand \u003d (DeleteAssignmentCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":69}},{"path":"src/main/java/seedu/address/logic/commands/assignment/ListAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.commands.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ASSIGNMENTS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"public class ListAssignmentCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    public static final String COMMAND_WORD \u003d \"list-a\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all assignments\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"        model.updateFilteredAssignmentList(PREDICATE_SHOW_ALL_ASSIGNMENTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"seewhyjay":23,"Badatprogrammiing":3}},{"path":"src/main/java/seedu/address/logic/commands/assignment/MarkAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellywaiyan"},"content":"package seedu.address.logic.commands.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jellywaiyan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jellywaiyan"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jellywaiyan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jellywaiyan"},"content":"public class MarkAssignmentCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jellywaiyan"},"content":"    public static final String COMMAND_WORD \u003d \"mark-a\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jellywaiyan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks an assignment as completed, \"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jellywaiyan"},"content":"            + \"identified by the index number used in the displayed assignments list.\"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jellywaiyan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jellywaiyan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"jellywaiyan"},"content":"    public static final String MESSAGE_MARK_ASSIGNMENT_SUCCESS \u003d \"This assignment has been marked as complete: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"jellywaiyan"},"content":"    public static final String MESSAGE_ASSIGNMENT_ALREADY_COMPLETE \u003d \"This assignment is already completed.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"jellywaiyan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"jellywaiyan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"jellywaiyan"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"jellywaiyan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"jellywaiyan"},"content":"    public MarkAssignmentCommand(Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"jellywaiyan"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"jellywaiyan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"jellywaiyan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"jellywaiyan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"jellywaiyan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"jellywaiyan"},"content":"        List\u003cAssignment\u003e lastShownList \u003d model.getFilteredAssignmentList();","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"jellywaiyan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"jellywaiyan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"jellywaiyan"},"content":"        Assignment assignmentToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"jellywaiyan"},"content":"        if (assignmentToMark.getStatus().isCompleted()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"jellywaiyan"},"content":"            throw new CommandException(MESSAGE_ASSIGNMENT_ALREADY_COMPLETE);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"jellywaiyan"},"content":"        model.markAsComplete(assignmentToMark);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"jellywaiyan"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ASSIGNMENT_SUCCESS, Messages.format(assignmentToMark)));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"jellywaiyan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jellywaiyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jellywaiyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"jellywaiyan"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"jellywaiyan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"jellywaiyan"},"content":"        if (!(other instanceof MarkAssignmentCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"jellywaiyan"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"jellywaiyan"},"content":"        MarkAssignmentCommand otherMarkAssignmentCommand \u003d (MarkAssignmentCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"jellywaiyan"},"content":"        return targetIndex.equals(otherMarkAssignmentCommand.targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"jellywaiyan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"jellywaiyan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"jellywaiyan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"jellywaiyan"},"content":"                .add(\"mark\", targetIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"jellywaiyan"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jellywaiyan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jellywaiyan":77,"Badatprogrammiing":4}},{"path":"src/main/java/seedu/address/logic/commands/event/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":21}},{"path":"src/main/java/seedu/address/logic/commands/internship/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.commands.internship;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":21}},{"path":"src/main/java/seedu/address/logic/commands/person/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Badatprogrammiing":8,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/person/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Badatprogrammiing":3,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/person/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Badatprogrammiing":8,"-":236}},{"path":"src/main/java/seedu/address/logic/commands/person/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Badatprogrammiing":3,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/person/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Badatprogrammiing":3,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.assignment.AddAssignmentCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.assignment.DeleteAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.assignment.ListAssignmentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.commands.assignment.MarkAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.assignment.AddAssignmentParser;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.parser.assignment.DeleteAssignmentParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.parser.assignment.MarkAssignmentParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.AddCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.DeleteCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.EditCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.FindCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"        case AddAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"            return new AddAssignmentParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"jellywaiyan"},"content":"        case MarkAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"jellywaiyan"},"content":"            return new MarkAssignmentParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"        case ListAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"            return new ListAssignmentCommand();","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"        case DeleteAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"            return new DeleteAssignmentParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chuababyy":5,"jellywaiyan":5,"seewhyjay":3,"Badatprogrammiing":15,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.Prefix;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Badatprogrammiing":1,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.Prefix;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Badatprogrammiing":2,"-":148}},{"path":"src/main/java/seedu/address/logic/parser/assignment/AddAssignmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_PLANNEDFINISHDATE;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.assignment.AddAssignmentCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.Prefix;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Date;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.NoDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":" * Parses an input that starts with add-a","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"public class AddAssignmentParser implements Parser\u003cAddAssignmentCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    public AddAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION,","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"                PREFIX_STATUS, PREFIX_ENDDATE, PREFIX_PLANNEDFINISHDATE, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_NAME, PREFIX_ENDDATE)","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"        argumentMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_STATUS,","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"                PREFIX_ENDDATE, PREFIX_PLANNEDFINISHDATE);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        Name name \u003d ParserUtil.parseName(argumentMultimap","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"                .getValue(seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        Description description \u003d ParserUtil.parseDescription(argumentMultimap.getValue(PREFIX_DESCRIPTION)","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"                .orElseGet(() -\u003e \"\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"        Status status \u003d argumentMultimap.getValue(PREFIX_STATUS).isEmpty()","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"                ? new Status(false)","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"                : ParserUtil.parseStatus(argumentMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"        Date endDate \u003d ParserUtil.parseDate(argumentMultimap.getValue(PREFIX_ENDDATE).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        Date plannedFinishDate \u003d argumentMultimap.getValue(PREFIX_PLANNEDFINISHDATE).isEmpty()","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"                ? new NoDate()","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"                : ParserUtil.parseDate(argumentMultimap.getValue(PREFIX_PLANNEDFINISHDATE).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"        Set\u003cTag\u003e tagList \u003d seedu.address.logic.parser.person.ParserUtil","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"                .parseTags(argumentMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment assignment \u003d new Assignment(name, endDate, status, description, plannedFinishDate, tagList);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"        return new AddAssignmentCommand(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Badatprogrammiing":73}},{"path":"src/main/java/seedu/address/logic/parser/assignment/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.Prefix;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":" * Accepted syntax for adding a new assignment","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"public class CliSyntax {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Prefix PREFIX_ENDDATE \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Prefix PREFIX_PLANNEDFINISHDATE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"chuababyy":1,"Badatprogrammiing":14}},{"path":"src/main/java/seedu/address/logic/parser/assignment/DeleteAssignmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.logic.parser.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.assignment.DeleteAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"public class DeleteAssignmentParser implements Parser\u003cDeleteAssignmentCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"    public DeleteAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"            return new DeleteAssignmentCommand(index);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAssignmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":28}},{"path":"src/main/java/seedu/address/logic/parser/assignment/MarkAssignmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellywaiyan"},"content":"package seedu.address.logic.parser.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.commands.assignment.MarkAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"jellywaiyan"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"jellywaiyan"},"content":" * Parses input arguments and creates a new MarkAssignmentCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"jellywaiyan"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"jellywaiyan"},"content":"public class MarkAssignmentParser {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"jellywaiyan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"jellywaiyan"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAssignmentCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"jellywaiyan"},"content":"     * and returns a MarkAssignmentCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"jellywaiyan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"jellywaiyan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"jellywaiyan"},"content":"    public MarkAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"jellywaiyan"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"jellywaiyan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"jellywaiyan"},"content":"            return new MarkAssignmentCommand(index);","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"jellywaiyan"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"jellywaiyan"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"jellywaiyan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAssignmentCommand.MESSAGE_USAGE), parseException);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"jellywaiyan"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"jellywaiyan":25,"Badatprogrammiing":2}},{"path":"src/main/java/seedu/address/logic/parser/assignment/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Date;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":" * Utility parser for assignments","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"public class ParserUtil {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param name the taskname","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return a name object","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!Name.isValidTaskName(name)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new ParseException(\"Name cannot be empty\");","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param description the description of task","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return a description object","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"     * @throws ParseException","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    // Validation required? Currently, d/ is a valid input","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"    public static Description parseDescription(String description) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param status the completion status","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return a status object","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"     * @throws ParseException when input is not done or undone","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new ParseException(\"Enter a valid status input: s/complete, s/incomplete\");","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"        return new Status(trimmedStatus.equals(\"complete\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param date to be parsed","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return a date object","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"     * @throws ParseException when not in yyyy-mm-dd HH:mm format","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"        if (IsoDate.isValidIsoDate(trimmedDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"            return new IsoDate(LocalDateTime.parse(date, DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT)));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"        if (IsoDate.isValidIsoDateWithoutTime(trimmedDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"            return new IsoDate(LocalDateTime.parse(date + \" 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"                    DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT)));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"        throw new ParseException(\"Enter date in yyyy-mm-dd HH:mm or yyyy-mm-dd (default 23:59) format \"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"and given date must not be before today\u0027s date\");","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"     * trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"chuababyy":16,"Badatprogrammiing":82}},{"path":"src/main/java/seedu/address/logic/parser/event/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":16}},{"path":"src/main/java/seedu/address/logic/parser/internship/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.parser.internship;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":16}},{"path":"src/main/java/seedu/address/logic/parser/person/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Badatprogrammiing":10,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/person/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Badatprogrammiing":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/person/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Badatprogrammiing":3,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/person/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Badatprogrammiing":11,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/person/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Badatprogrammiing":3,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/person/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Badatprogrammiing":1,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/person/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Badatprogrammiing":1,"-":41}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"jellywaiyan"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.UniqueAssignmentList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    private final UniqueAssignmentList assignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"        assignments \u003d new UniqueAssignmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"    public void setAssignments(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"        this.assignments.setAssignments(assignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"        setAssignments(newData.getAssignmentList());","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param assignment to be checked","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return true if assignment is present, false otherwise","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"    // Assignments","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean hasAssignment(Assignment assignment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"Badatprogrammiing"},"content":"        return assignments.contains(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"Badatprogrammiing"},"content":"    public ObservableList\u003cAssignment\u003e getAssignmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"Badatprogrammiing"},"content":"        return assignments.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"Badatprogrammiing"},"content":"    public void addAssignment(Assignment assignment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"Badatprogrammiing"},"content":"        assignments.add(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"chuababyy"},"content":"    public void removeAssignment(Assignment key) {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"chuababyy"},"content":"        assignments.remove(key);","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"Badatprogrammiing"},"content":"     * Mark an assignment as complete","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param toMark the assignment to be marked","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"jellywaiyan"},"content":"    public void markAssignment(Assignment toMark) {","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"jellywaiyan"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"jellywaiyan"},"content":"        assignments.mark(toMark);","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuababyy":4,"jellywaiyan":6,"Badatprogrammiing":34,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"    Predicate\u003cAssignment\u003e PREDICATE_SHOW_ALL_ASSIGNMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"    boolean hasAssignment(Assignment assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"    void addAssignment(Assignment assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"    void deleteAssignment(Assignment target);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"jellywaiyan"},"content":"    /** Returns an unmodifiable view of the filtered assignment list */","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"    ObservableList\u003cAssignment\u003e getFilteredAssignmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"jellywaiyan"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"jellywaiyan"},"content":"     * Marks the given assignment as complete.","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"jellywaiyan"},"content":"     * The assignment must exist in Campus Companion.","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"jellywaiyan"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"jellywaiyan"},"content":"    void markAsComplete(Assignment target);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"seewhyjay"},"content":"     * Updates the filter of the filtered assignment list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"    void updateFilteredAssignmentList(Predicate\u003cAssignment\u003e predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chuababyy":2,"seewhyjay":7,"jellywaiyan":7,"Badatprogrammiing":7,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    private final FilteredList\u003cAssignment\u003e filteredAssignments;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"        filteredAssignments \u003d new FilteredList\u003c\u003e(this.addressBook.getAssignmentList());","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"jellywaiyan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d Filtered Assignment List Accessors\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"jellywaiyan"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"jellywaiyan"},"content":"    public void markAsComplete(Assignment toMark) {","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"jellywaiyan"},"content":"        addressBook.markAssignment(toMark);","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean hasAssignment(Assignment assignment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"        return addressBook.hasAssignment(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"chuababyy"},"content":"    public void deleteAssignment(Assignment target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"chuababyy"},"content":"        addressBook.removeAssignment(target);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"Badatprogrammiing"},"content":"    public void addAssignment(Assignment assignment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"Badatprogrammiing"},"content":"        addressBook.addAssignment(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"Badatprogrammiing"},"content":"    public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Badatprogrammiing"},"content":"        return filteredAssignments;","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"chuababyy"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"chuababyy"},"content":"    public void updateFilteredAssignmentList(Predicate\u003cAssignment\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"chuababyy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"chuababyy"},"content":"        filteredAssignments.setPredicate(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 filteredAssignments.equals(otherModelManager.filteredAssignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuababyy":11,"jellywaiyan":6,"Badatprogrammiing":21,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    ObservableList\u003cAssignment\u003e getAssignmentList();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Badatprogrammiing":3,"-":17}},{"path":"src/main/java/seedu/address/model/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":" * Represents an Assignment in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"public class Assignment {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"    private final Name name;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    private Date enddate;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    private Status status;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    private Description description;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    private Date plannedFinishDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    public Assignment(Name name, Date endDate, Status status, Description description,","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"                      Date plannedFinishDate, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"        requireAllNonNull(name, endDate, status, tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"        this.enddate \u003d endDate;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        this.plannedFinishDate \u003d plannedFinishDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"        return name;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"    public Date getEnd() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"        return this.enddate;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        return status;","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"        return description;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"    public Date getPlannedFinishDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"        return plannedFinishDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"jellywaiyan"},"content":"    public void mark() {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"jellywaiyan"},"content":"        this.status \u003d new Status(true);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"seewhyjay"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"seewhyjay"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"seewhyjay"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"seewhyjay"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"seewhyjay"},"content":"     * Returns true if both assignments have the same name.","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"seewhyjay"},"content":"     * This defines a weaker notion of equality between two assignments.","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"seewhyjay"},"content":"    public boolean isSameAssignment(Assignment otherAssignment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"seewhyjay"},"content":"        if (otherAssignment \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"seewhyjay"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"seewhyjay"},"content":"        return otherAssignment !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"seewhyjay"},"content":"                \u0026\u0026 otherAssignment.getName().equals(getName());","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"seewhyjay"},"content":"     * Returns true if both assignments have the same identity and data fields.","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"seewhyjay"},"content":"     * This defines a stronger notion of equality between two assignment.","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"seewhyjay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"seewhyjay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"seewhyjay"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"seewhyjay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"seewhyjay"},"content":"        if (!(other instanceof Assignment)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"seewhyjay"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"seewhyjay"},"content":"        Assignment otherAssignment \u003d (Assignment) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"seewhyjay"},"content":"        return name.equals(otherAssignment.name)","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 this.enddate.equals(otherAssignment.enddate)","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 this.status.equals(otherAssignment.status)","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 this.tags.equals(otherAssignment.tags)","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 this.description.equals(otherAssignment.description)","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"                \u0026\u0026 this.plannedFinishDate.equals(otherAssignment.plannedFinishDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"seewhyjay"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"seewhyjay"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"        return Objects.hash(name, enddate, status, tags, description, plannedFinishDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"seewhyjay"},"content":"        DateTimeFormatter toStringFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu h:mm a\");","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"seewhyjay"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"seewhyjay"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"Badatprogrammiing"},"content":"                .add(\"completeness\", status)","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"                .add(\"plannedFinishDate\", plannedFinishDate)","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"                .add(\"end\", enddate)","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"seewhyjay"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"seewhyjay"},"content":"                .toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":84,"jellywaiyan":3,"Badatprogrammiing":40}},{"path":"src/main/java/seedu/address/model/assignment/AssignmentNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":" * Tests that a {@code Assignment}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"public class AssignmentNameContainsKeywordsPredicate implements Predicate\u003cAssignment\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"    public AssignmentNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    public boolean test(Assignment assignment) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(assignment.getName().taskName, keyword));","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"        if (!(other instanceof AssignmentNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"        AssignmentNameContainsKeywordsPredicate otherAssignmentNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"                (AssignmentNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"        return keywords.equals(otherAssignmentNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"seewhyjay"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"seewhyjay"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"seewhyjay"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"seewhyjay":46}},{"path":"src/main/java/seedu/address/model/assignment/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a generic date","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"public abstract class Date {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"    public abstract String toSaveData();","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Badatprogrammiing":8}},{"path":"src/main/java/seedu/address/model/assignment/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a task description.","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"public class Description {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"    public final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    public Description(String description) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"        return description.equals(otherDescription.description);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        return description.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Badatprogrammiing":46}},{"path":"src/main/java/seedu/address/model/assignment/IsoDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a task\u0027s end date.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":" * Should be instantiated in the add-date","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":" * parser if date is given.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"public class IsoDate extends Date {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String DATE_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String DATE_FORMAT_WITHOUT_TIME \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"yyyy-MM-dd HH:mm\\\"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    public final LocalDateTime endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"     * Constructs a {@code EndDate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param endDate A valid date.","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"    public IsoDate(LocalDateTime endDate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(endDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param date to be verified","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return true if valid date, false otherwise","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"    public static boolean isValidIsoDate(String date) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"            DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"            LocalDateTime d \u003d LocalDateTime.parse(date, df);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"            return !d.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param date to be verified","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return true if valid date, false otherwise","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    public static boolean isValidIsoDateWithoutTime(String date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"            DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_WITHOUT_TIME);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"            LocalDate d \u003d LocalDate.parse(date, df);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"            return !d.isBefore(LocalDate.now());","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param date to be verified","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return true if valid date, false otherwise","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"    public static boolean isValidSavedDate(String date) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"            DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"            LocalDateTime.parse(date, df);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"        return endDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"Badatprogrammiing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!(other instanceof IsoDate)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"        IsoDate otherEndDate \u003d (IsoDate) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Badatprogrammiing"},"content":"        return endDate.equals(otherEndDate.endDate);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"Badatprogrammiing"},"content":"        return endDate.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toSaveData() {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"        return endDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Badatprogrammiing":107}},{"path":"src/main/java/seedu/address/model/assignment/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents a task name.","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"public class Name {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Empty string not allowed\";","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    // Matches everything except empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$).+\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"    public final String taskName;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param taskName A valid name.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    public Name(String taskName) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(taskName);","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param taskName be verified","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"     * @return true when not an empty string, false otherwise","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"    public static boolean isValidTaskName(String taskName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"        return taskName.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        return taskName;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"        return taskName.equals(otherName.taskName);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"        return taskName.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Badatprogrammiing":59}},{"path":"src/main/java/seedu/address/model/assignment/NoDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":" * Should be instantiated in the add-date parser","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":" * if no date is given","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"public class NoDate extends Date {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"        return (obj instanceof NoDate);","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toSaveData() {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"        return null;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"        return \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"        return 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Badatprogrammiing":27}},{"path":"src/main/java/seedu/address/model/assignment/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":" * Represents the completion status","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":" * of a task.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"public class Status {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"done or undone\";","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"    private final Boolean isCompleted;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param isCompleted A valid name.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    public Status(Boolean isCompleted) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(isCompleted);","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    public static boolean isValidStatus(String date) {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"        return date.equals(\"complete\") || date.equals(\"incomplete\");","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    public Boolean isCompleted() {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        return this.isCompleted;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        return isCompleted ? \"complete\" : \"incomplete\";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!(other instanceof Status)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"        Status otherStatus \u003d (Status) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        return isCompleted.equals(otherStatus.isCompleted);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"        return isCompleted.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Badatprogrammiing":56}},{"path":"src/main/java/seedu/address/model/assignment/UniqueAssignmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"public class UniqueAssignmentList implements Iterable\u003cAssignment\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    private final ObservableList\u003cAssignment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    private final ObservableList\u003cAssignment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"     * Returns true if the list contains an equivalent assignment as the given argument.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean contains(Assignment toCheck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAssignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"     * Adds a assignment to the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    public void add(Assignment toAdd) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"     * Replaces the person {@code target} in the list with {@code editedAssignment}.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"     * The assignment identity of {@code editedPerson} must not be","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"     * the same as another existing assignment in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"    public void setAssignment(Assignment target, Assignment editedAssignment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"        requireAllNonNull(target, editedAssignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new AssignmentNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!target.isSameAssignment(editedAssignment) \u0026\u0026 contains(editedAssignment)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"        internalList.set(index, editedAssignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"    public void remove(Assignment toRemove) {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new AssignmentNotFoundException();","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"     * Mark an assignment as complete","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"     * @param toMark assignment to be marked","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jellywaiyan"},"content":"    public void mark(Assignment toMark) {","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"jellywaiyan"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"jellywaiyan"},"content":"        int index \u003d internalList.indexOf(toMark);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"jellywaiyan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"jellywaiyan"},"content":"            throw new AssignmentNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"jellywaiyan"},"content":"        internalList.get(index).mark();","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"jellywaiyan"},"content":"        internalList.set(index, internalList.get(index));","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"jellywaiyan"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"    public void setAssignments(UniqueAssignmentList replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Badatprogrammiing"},"content":"    public void setAssignments(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Badatprogrammiing"},"content":"        requireAllNonNull(assignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!assignmentsAreUnique(assignments)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"Badatprogrammiing"},"content":"        internalList.setAll(assignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"    public ObservableList\u003cAssignment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Badatprogrammiing"},"content":"    public Iterator\u003cAssignment\u003e iterator() {","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Badatprogrammiing"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"Badatprogrammiing"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"Badatprogrammiing"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"Badatprogrammiing"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"Badatprogrammiing"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!(other instanceof UniqueAssignmentList)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Badatprogrammiing"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"        UniqueAssignmentList otherUniqueAssignmentList \u003d (UniqueAssignmentList) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"        return internalList.equals(otherUniqueAssignmentList.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"Badatprogrammiing"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"Badatprogrammiing"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"Badatprogrammiing"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"Badatprogrammiing"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"Badatprogrammiing"},"content":"     * Returns true if {@code assignments} contains only unique assignments.","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"Badatprogrammiing"},"content":"    private boolean assignmentsAreUnique(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Badatprogrammiing"},"content":"        for (int i \u003d 0; i \u003c assignments.size() - 1; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Badatprogrammiing"},"content":"            for (int j \u003d i + 1; j \u003c assignments.size(); j++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"Badatprogrammiing"},"content":"                if (assignments.get(i).isSameAssignment(assignments.get(j))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"Badatprogrammiing"},"content":"                    return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"Badatprogrammiing"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"Badatprogrammiing"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"Badatprogrammiing"},"content":"        return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"jellywaiyan":10,"Badatprogrammiing":140}},{"path":"src/main/java/seedu/address/model/assignment/exceptions/AssignmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.model.assignment.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"public class AssignmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":6}},{"path":"src/main/java/seedu/address/model/assignment/exceptions/DuplicateAssignmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.model.assignment.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":" * identity).","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"public class DuplicateAssignmentException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"    public DuplicateAssignmentException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"        super(\"Operation would result in duplicate assignments\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"seewhyjay":11}},{"path":"src/main/java/seedu/address/model/util/SampleAssignmentDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"public class SampleAssignmentDataUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    public static Assignment[] getSampleAssignments() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"        return new Assignment[]{","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"            new Assignment(new Name(\"CS2101 presentation\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"                        new IsoDate(LocalDateTime.parse(\"2023-12-01 18:00\",","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"                                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"                        new Status(false), new Description(\"Prepare presentation\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"                        new IsoDate(LocalDateTime.parse(\"2023-12-01 18:00\",","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"                                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"                        getTagSet(\"CS2101\")),","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"            new Assignment(new Name(\"CS2103T peer review\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"                        new IsoDate(LocalDateTime.parse(\"2023-11-31 18:00\",","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"                                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"                        new Status(false), new Description(\"Do peer review\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"                        new IsoDate(LocalDateTime.parse(\"2023-11-31 18:00\",","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"                                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"                        getTagSet(\"CS2103T\")),","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"            new Assignment(new Name(\"CS2103T milestone 1.2\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"                        new IsoDate(LocalDateTime.parse(\"2023-11-30 18:00\",","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"                                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"                        new Status(false), new Description(\"Prepare milstone\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"                        new IsoDate(LocalDateTime.parse(\"2023-11-29 18:00\",","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"                                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"                        getTagSet(\"CS2103T\"))","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"        };","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    public static ReadOnlyAddressBook getSampleAssignmment() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"        for (Assignment sampleAssignment : getSampleAssignments()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"            sampleAb.addAssignment(sampleAssignment);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        return sampleAb;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"                .map(Tag::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":65}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.NoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"    private static Assignment[] getSampleAssignments() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"        return new Assignment[] {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"            new Assignment(new seedu.address.model.assignment.Name(\"task1\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"                    new IsoDate(LocalDateTime.parse(\"2024-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"                            DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"                    new Status(true), new Description(\"description\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"                    new IsoDate(LocalDateTime.parse(\"2024-11-11 11:11\",","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"                            DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"                    Set.of(new Tag(\"cs2100\"))),","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"            new Assignment(new seedu.address.model.assignment.Name(\"task2\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"                    new IsoDate(LocalDateTime.parse(\"2024-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"                            DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"                    new Status(true), new Description(\"description\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"                    new NoDate(), Set.of(new Tag(\"cs2103\"))),","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"        };","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"        for (Assignment assignment : getSampleAssignments()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"            sampleAb.addAssignment(assignment);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Badatprogrammiing":28,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Date;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.NoDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"class JsonAdaptedAssignment {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Assignment\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"    private final String name;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"    private final String description;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    private final Boolean status;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    private final String endDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    private final String plannedFinishDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given assignment details.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    public JsonAdaptedAssignment(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"                                 @JsonProperty(\"status\") boolean status, @JsonProperty(\"endDate\") String endDate,","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"                                 @JsonProperty(\"plannedFinishDate\") String plannedFinishDate,","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"                                 @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"        this.plannedFinishDate \u003d plannedFinishDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"        this.name \u003d source.getName().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"        this.description \u003d source.getDescription().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"        this.status \u003d source.getStatus().isCompleted();","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"        this.endDate \u003d source.getEnd().toSaveData();","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"        this.plannedFinishDate \u003d source.getPlannedFinishDate().toSaveData();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"     * Converts this Jackson-friendly adapted assignment object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignment.","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"        final List\u003cTag\u003e assignmentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"            assignmentTags.add(tag.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!Name.isValidTaskName(name)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new IllegalValueException(\"Name Not Valid \" + Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"Badatprogrammiing"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new IllegalValueException(\"EndDate Null\"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Badatprogrammiing"},"content":"                    + String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"        if (!IsoDate.isValidSavedDate(endDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new IllegalValueException(\"EndDate Not Valid \" + IsoDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Badatprogrammiing"},"content":"        final Date modelEndDate \u003d new IsoDate(LocalDateTime.parse(endDate,","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Badatprogrammiing"},"content":"                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT)));","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"        if (plannedFinishDate !\u003d null \u0026\u0026 !IsoDate.isValidSavedDate(plannedFinishDate)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new IllegalValueException(\"PlannedFinishDate\" + IsoDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Badatprogrammiing"},"content":"        final Date modelPlannedFinishDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Badatprogrammiing"},"content":"        if (plannedFinishDate \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Badatprogrammiing"},"content":"            modelPlannedFinishDate \u003d new NoDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Badatprogrammiing"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"            modelPlannedFinishDate \u003d new IsoDate(LocalDateTime.parse(plannedFinishDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"                    DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT)));","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(assignmentTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"        return new Assignment(modelName, modelEndDate, modelStatus,","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"                modelDescription, modelPlannedFinishDate, modelTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Badatprogrammiing":129}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Badatprogrammiing":2,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENTS \u003d \"Assignments list contains duplicate assignment(s).\";","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    private final List\u003cJsonAdaptedAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given assignments.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"assignments\") List\u003cJsonAdaptedAssignment\u003e assignments,","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"                                       @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        this.assignments.addAll(assignments);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"        assignments.addAll(source.getAssignmentList().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"                .map(JsonAdaptedAssignment::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"        for (JsonAdaptedAssignment jsonAdaptedAssignment : assignments) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"            Assignment assignment \u003d jsonAdaptedAssignment.toModelType();","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"            if (addressBook.hasAssignment(assignment)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ASSIGNMENTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"            addressBook.addAssignment(assignment);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Badatprogrammiing":16,"-":61}},{"path":"src/main/java/seedu/address/ui/AssignmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":" * An UI component that displays information of a {@code Assignment}.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"public class AssignmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final String FXML \u003d \"AssignmentListCard.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    public final Assignment assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"    private Label description;","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    private Label endDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    private Label status;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"    private Label plannedFinishDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"    public AssignmentCard(Assignment assignment, int displayedIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"        name.setText(assignment.getName().toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        description.setText(\"Description: \" + assignment.getDescription().toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"        endDate.setText(\"Deadline: \" + assignment.getEnd().toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"        status.setText(\"Status: \" + assignment.getStatus().toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        plannedFinishDate.setText(\"Plan to finish by: \" + assignment.getPlannedFinishDate().toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        assignment.getTags().stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chuababyy":4,"Badatprogrammiing":15,"-":43}},{"path":"src/main/java/seedu/address/ui/AssignmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":" * Panel containing the list of assignments.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"public class AssignmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final String FXML \u003d \"AssignmentListPanel.fxml\";","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AssignmentListPanel.class);","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    private ListView\u003cAssignment\u003e assignmentListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"     * Creates a {@code AssignmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"    public AssignmentListPanel(ObservableList\u003cAssignment\u003e assignmentList) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"        assignmentListView.setItems(assignmentList);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        assignmentListView.setCellFactory(listView -\u003e new AssignmentListViewCell());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Assignment} using a {@code AssignmentCard}.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    class AssignmentListViewCell extends ListCell\u003cAssignment\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        protected void updateItem(Assignment assignment, boolean empty) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"            super.updateItem(assignment, empty);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"            if (empty || assignment \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"                setGraphic(new AssignmentCard(assignment, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Badatprogrammiing":16,"-":33}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    // Assignments","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    private AssignmentListPanel assignmentListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    // Persons","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"    private VBox personList;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"    private VBox assignmentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"    private StackPane assignmentListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"    private HBox viewSwitcher;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"    private VBox selectedList;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"    private StackPane selectedListPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Badatprogrammiing"},"content":"        assignmentListPanel \u003d new AssignmentListPanel(logic.getFilteredAssignmentList());","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"Badatprogrammiing"},"content":"        selectedListPanelPlaceholder.getChildren().add(assignmentListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"Badatprogrammiing"},"content":"    public AssignmentListPanel getAssignmentListPanel() {","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"Badatprogrammiing"},"content":"        return assignmentListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":227,"author":{"gitId":"Badatprogrammiing"},"content":"     * Display a list of person when","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"Badatprogrammiing"},"content":"     * button is clicked","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"Badatprogrammiing"},"content":"    public void handleSetPersonView() {","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"Badatprogrammiing"},"content":"        selectedListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"Badatprogrammiing"},"content":"        selectedListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"Badatprogrammiing"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":237,"author":{"gitId":"Badatprogrammiing"},"content":"     * Display a list of assignment","lastModifiedDate":"2023-10-15"},{"lineNumber":238,"author":{"gitId":"Badatprogrammiing"},"content":"     * when button is clicked","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"Badatprogrammiing"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":240,"author":{"gitId":"Badatprogrammiing"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":241,"author":{"gitId":"Badatprogrammiing"},"content":"    public void handleSetAssignmentView() {","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"Badatprogrammiing"},"content":"        selectedListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"Badatprogrammiing"},"content":"        selectedListPanelPlaceholder.getChildren().add(assignmentListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Badatprogrammiing":50,"-":195}},{"path":"src/main/resources/view/AssignmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"      \u003cLabel fx:id\u003d\"plannedFinishDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Badatprogrammiing":37}},{"path":"src/main/resources/view/AssignmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"  \u003cListView fx:id\u003d\"assignmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Badatprogrammiing":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cHBox fx:id\u003d\"viewSwitcher\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003cButton text\u003d\"Person\" onAction\u003d\"#handleSetPersonView\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003cButton text\u003d\"Assignment\" onAction\u003d\"#handleSetAssignmentView\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"        \u003cVBox fx:id\u003d\"selectedList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"          \u003cStackPane fx:id\u003d\"selectedListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Badatprogrammiing":14,"-":58}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Badatprogrammiing":3,"-":33}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Badatprogrammiing":2,"-":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Badatprogrammiing":2,"-":173}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Badatprogrammiing":1,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"        @Override public void addAssignment(Assignment assignment) {","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"Badatprogrammiing"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"Badatprogrammiing"},"content":"        public boolean hasAssignment(Assignment assignment) {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"chuababyy"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"chuababyy"},"content":"        public void deleteAssignment(Assignment target) {","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"chuababyy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"jellywaiyan"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"jellywaiyan"},"content":"        public void markAsComplete(Assignment toMark) {","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"jellywaiyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"Badatprogrammiing"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"Badatprogrammiing"},"content":"        public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"Badatprogrammiing"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"jellywaiyan"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"jellywaiyan"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"jellywaiyan"},"content":"        public void updateFilteredAssignmentList(Predicate\u003cAssignment\u003e predicate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"jellywaiyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"jellywaiyan"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"chuababyy":5,"jellywaiyan":10,"Badatprogrammiing":16,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandAssignmentTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_PLANNEDFINISHDATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.assignment.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":" * CommandAssignmentUtils","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"public class CommandAssignmentTestUtil {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"    public static final String VALID_NAME_ASSIGNMENT \u003d \"CS2105 Assignment 2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    public static final String VALID_NAME_PROJECT \u003d \"CS2103T Quiz\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    public static final String VALID_DESCRIPTION_ASSIGNMENT \u003d \"Assignment until K-maps\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    public static final String VALID_DESCRIPTION_PROJECT \u003d \"Lecture Quiz\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"    public static final Boolean VALID_STATUS_DONE \u003d false;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"    public static final Boolean VALID_STATUS_UNDONE \u003d false;","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"    public static final LocalDateTime VALID_DEADLINE_ASSIGNMENT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-11-31 18:45\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"    public static final LocalDateTime VALID_PLANNED_DATE \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-12-02 18:45\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"    public static final String VALID_TAG_ASSIGNMENT \u003d \"assignment\";","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"    public static final String VALID_TAG_PROJECT \u003d \"CS2103T\";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"    public static final String NAME_DESC_ASSIGNMENT \u003d \" \" + PREFIX_NAME + VALID_NAME_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"    public static final String NAME_DESC_PROJECT \u003d \" \" + PREFIX_NAME + VALID_NAME_PROJECT;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    public static final String DESCRIPTION_DESC_ASSIGNMENT \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"    public static final String DESCRIPTION_DESC_PROJECT \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_PROJECT;","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    public static final String STATUS_DESC_ASSIGNMENT \u003d \" \" + PREFIX_STATUS + VALID_STATUS_DONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"    public static final String STATUS_DESC_PROJECT \u003d \" \" + PREFIX_STATUS + VALID_STATUS_UNDONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    public static final String DEADLINE_DESC \u003d \" \" + PREFIX_ENDDATE + VALID_DEADLINE_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"    public static final String PLANNED_DATE_DESC \u003d \" \" + PREFIX_PLANNEDFINISHDATE + VALID_PLANNED_DATE;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"    public static final String TAG_DESC_ASSIGNMENT \u003d \" \" + PREFIX_TAG + VALID_TAG_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"    public static final String TAG_DESC_PROJECT \u003d \" \" + PREFIX_TAG + VALID_TAG_PROJECT;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Assignment\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"    public static final String INVALID_DESC_DESC \u003d \" \" + PREFIX_DESCRIPTION + \"!!!\"; // \u0027!\u0027 not allowed in description","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"yay\"; // wrong format for status","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"    public static final String INVALID_ENDDATE_DESC \u003d \" \" + PREFIX_ENDDATE + \"11-22-2021\"; // wrong format","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"    public static final String INVALID_PLANNED_DESC \u003d \" \" + PREFIX_PLANNEDFINISHDATE + \"11-22-2021\"; // wrong format","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"CS2103T*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"chuababyy"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"chuababyy"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"        List\u003cAssignment\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredAssignmentList());","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"chuababyy"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"chuababyy"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"chuababyy"},"content":"     * Updates {@code model}\u0027s filtered list to show only the assignment at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"chuababyy"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"chuababyy"},"content":"    public static void showAssignmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"chuababyy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAssignmentList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"chuababyy"},"content":"        Assignment assignment \u003d model.getFilteredAssignmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"chuababyy"},"content":"        final String name \u003d assignment.getName().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"chuababyy"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":111,"seewhyjay":1,"Badatprogrammiing":6}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.assignment.AssignmentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"seewhyjay"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"seewhyjay"},"content":"     * Updates {@code model}\u0027s filtered list to show only the assignment at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"seewhyjay"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"seewhyjay"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"seewhyjay"},"content":"    public static void showAssignmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"seewhyjay"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAssignmentList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"seewhyjay"},"content":"        Assignment assignment \u003d model.getFilteredAssignmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"seewhyjay"},"content":"        final String[] splitName \u003d assignment.getName().taskName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"seewhyjay"},"content":"        model.updateFilteredAssignmentList(","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"seewhyjay"},"content":"                new AssignmentNameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"seewhyjay"},"content":"                        Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"seewhyjay"},"content":"        assertEquals(1, model.getFilteredAssignmentList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"seewhyjay":18,"Badatprogrammiing":6,"-":123}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.testutil.TypicalAssignments.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.assignment.DeleteAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":" * {@code DeleteAssignmentCommand}.","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"public class DeleteAssignmentCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"        Assignment assignmentToDelete \u003d model.getFilteredAssignmentList().get(INDEX_FIRST_ASSIGNMENT.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand deleteCommand \u003d new DeleteAssignmentCommand(INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"        String expectedMessage \u003d String.format(DeleteAssignmentCommand.MESSAGE_DELETE_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"                Messages.format(assignmentToDelete));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"        expectedModel.deleteAssignment(assignmentToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAssignmentList().size() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand deleteCommand \u003d new DeleteAssignmentCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand deleteFirstCommand \u003d new DeleteAssignmentCommand(INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand deleteSecondCommand \u003d new DeleteAssignmentCommand(INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand deleteFirstCommandCopy \u003d new DeleteAssignmentCommand(INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"        DeleteAssignmentCommand deleteCommand \u003d new DeleteAssignmentCommand(targetIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"        String expected \u003d DeleteAssignmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"    private void showNoAssignment(Model model) {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"        model.updateFilteredAssignmentList(p -\u003e false);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":90}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Badatprogrammiing":1,"-":120}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Badatprogrammiing":2,"-":183}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Badatprogrammiing":1,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Badatprogrammiing":1,"-":91}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Badatprogrammiing":1,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/assignment/ListAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seewhyjay"},"content":"package seedu.address.logic.commands.assignment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"seewhyjay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"seewhyjay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAssignmentAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"seewhyjay"},"content":"import static seedu.address.testutil.TypicalAssignments.getTypicalAddressBook;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"seewhyjay"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"seewhyjay"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"seewhyjay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"seewhyjay"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"seewhyjay"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"seewhyjay"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"seewhyjay"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"seewhyjay"},"content":"public class ListAssignmentCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"seewhyjay"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"seewhyjay"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"seewhyjay"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"seewhyjay"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"seewhyjay"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"seewhyjay"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"seewhyjay"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"seewhyjay"},"content":"        assertCommandSuccess(new ListAssignmentCommand(), model, ListAssignmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"seewhyjay"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"seewhyjay"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"seewhyjay"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"seewhyjay"},"content":"        showAssignmentAtIndex(model, INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"seewhyjay"},"content":"        assertCommandSuccess(new ListAssignmentCommand(), model, ListAssignmentCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"seewhyjay"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"seewhyjay"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"seewhyjay":40}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.AddCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Badatprogrammiing":6,"-":191}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Badatprogrammiing":6,"-":95}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.Prefix;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Badatprogrammiing":2,"-":150}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.commands.assignment.DeleteAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.parser.assignment.DeleteAssignmentParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    private DeleteAssignmentParser parser \u003d new DeleteAssignmentParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAssignmentCommand(INDEX_FIRST_ASSIGNMENT));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chuababyy":7,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.EditCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Badatprogrammiing":7,"-":202}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.FindCommandParser;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Badatprogrammiing":2,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.person.ParserUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Badatprogrammiing":2,"-":195}},{"path":"src/test/java/seedu/address/logic/parser/assigment/AddAssignmentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.assigment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.assignment.AddAssignmentCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.assignment.AddAssignmentParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Name;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.NoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"// LAZY TO MAKE UNIT TEST WITH CURRENT DATE WITH AND WITHOUT TIME, BUT I USER TESTED IT!!!!!!!!!","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"public class AddAssignmentParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    private final AddAssignmentParser parser \u003d new AddAssignmentParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    private final String invalidCommandMessage \u003d \"Invalid command format! \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"            + \"add-a: Adds an assignment to the app. Parameters: n/NAME [d/DESCRIPTION]\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"            + \"s/STATUS e/YYYY-MM-DD HH:mm [p/YYYY-MM-DD HH:mm ]\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"            + \"Example: add-a\";","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_allFieldsPresentSingleTag_success() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment validAssignment \u003d new Assignment(new Name(\"task1\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"                new Status(true), new Description(\"description\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 11:11\",","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"                Set.of(new Tag(\"cs2100\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(parser.parse(validInput), new AddAssignmentCommand(validAssignment));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_allFieldsPresentMultipleTag_success() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 d/description p/2025-11-11 11:11 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"t/cs2100 t/cs2103 t/gg\";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment validAssignment \u003d new Assignment(new Name(\"task1\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"                new Status(true), new Description(\"description\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 11:11\",","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"                Set.of(new Tag(\"cs2100\"), new Tag(\"cs2103\"), new Tag(\"gg\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(parser.parse(validInput), new AddAssignmentCommand(validAssignment));","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_missingStatus_success() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 e/2025-11-11 23:59 d/description p/2025-11-11 11:11 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"t/cs2100 t/cs2103 t/gg\";","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment validAssignment \u003d new Assignment(new Name(\"task1\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"                new Status(false), new Description(\"description\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 11:11\",","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"                Set.of(new Tag(\"cs2100\"), new Tag(\"cs2103\"), new Tag(\"gg\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(parser.parse(validInput), new AddAssignmentCommand(validAssignment));","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_missingPlannedDate_success() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 d/description t/cs2100 t/cs2103 t/gg\";","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment validAssignment \u003d new Assignment(new Name(\"task1\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"Badatprogrammiing"},"content":"                new Status(true), new Description(\"description\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"Badatprogrammiing"},"content":"                new NoDate(),","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"Badatprogrammiing"},"content":"                Set.of(new Tag(\"cs2100\"), new Tag(\"cs2103\"), new Tag(\"gg\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(parser.parse(validInput), new AddAssignmentCommand(validAssignment));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_missingDescription_success() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 p/2025-11-11 11:11 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"t/cs2100 t/cs2103 t/gg\";","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment validAssignment \u003d new Assignment(new Name(\"task1\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"Badatprogrammiing"},"content":"                new Status(true), new Description(\"\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 11:11\",","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"Badatprogrammiing"},"content":"                Set.of(new Tag(\"cs2100\"), new Tag(\"cs2103\"), new Tag(\"gg\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(parser.parse(validInput), new AddAssignmentCommand(validAssignment));","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_validDateWithoutTime_success() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2025-11-11 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"Badatprogrammiing"},"content":"        Assignment validAssignment \u003d new Assignment(new Name(\"task1\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 23:59\",","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"Badatprogrammiing"},"content":"                new Status(true), new Description(\"description\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Badatprogrammiing"},"content":"                new IsoDate(LocalDateTime.parse(\"2025-11-11 11:11\",","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"Badatprogrammiing"},"content":"                        DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))),","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"Badatprogrammiing"},"content":"                Set.of(new Tag(\"cs2100\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(parser.parse(validInput), new AddAssignmentCommand(validAssignment));","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_invalidDateWithoutTime_fail() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2021-11-11 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(validInput));","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Enter date in yyyy-mm-dd HH:mm or yyyy-mm-dd (default 23:59) \"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"format and given date must not be before today\u0027s date\");","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_invalidDateWithoutTime2_fail() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"Badatprogrammiing"},"content":"        String validInput \u003d \" n/task1 s/complete e/2021-11-1 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(validInput));","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Enter date in yyyy-mm-dd HH:mm or yyyy-mm-dd (default 23:59) \"","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"format and given date must not be before today\u0027s date\");","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_multipleName_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"d/description p/2025-11-11 11:11 t/cs2100 n/task2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Multiple values specified for the following single-valued field(s): n/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_multipleStatus_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/incomplete s/complete e/2025-11-11 23:59 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Multiple values specified for the following single-valued field(s): s/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_multipleEndDate_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 e/2025-11-11 11:11 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Multiple values specified for the following single-valued field(s): e/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_multipleDescription_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/incomplete e/2025-11-11 23:59 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"d/description d/description1 d/description3 p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Multiple values specified for the following single-valued field(s): d/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_multiplePlannedDate_fail() throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/incomplete e/2025-11-11 23:59 \"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"d/description p/2025-11-11 11:11 p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Multiple values specified for the following single-valued field(s): p/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_invalidName_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/ s/complete e/2025-11-11 23:59 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Name cannot be empty\");","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_invalidDate_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/complete e/1111-11-11 23:59 d/description p/1111-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Enter date in yyyy-mm-dd HH:mm or yyyy-mm-dd (default 23:59) format \"","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"and given date must not be before today\u0027s date\");","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_invalidStatus_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/completee e/2025-11-11 23:59 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":200,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Enter a valid status input: s/complete, s/incomplete\");","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_invalidPlannedDate_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/complete e/2025-11-11 23:59 d/description p/1111-11-1 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(e.getMessage(), \"Enter date in yyyy-mm-dd HH:mm or yyyy-mm-dd (default 23:59) format \"","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"Badatprogrammiing"},"content":"                + \"and given date must not be before today\u0027s date\");","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_missingName_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" s/complete e/2025-11-11 23:59 d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(invalidCommandMessage, e.getMessage());","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"Badatprogrammiing"},"content":"    public void parse_missingEndDate_fail() throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"Badatprogrammiing"},"content":"        String invalidInput \u003d \" n/task1 s/complete d/description p/2025-11-11 11:11 t/cs2100\";","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"Badatprogrammiing"},"content":"        ParseException e \u003d assertThrows(ParseException.class, () -\u003e parser.parse(invalidInput));","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(invalidCommandMessage, e.getMessage());","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Badatprogrammiing":225}},{"path":"src/test/java/seedu/address/logic/parser/assigment/DeleteAssignmentParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.logic.parser.assigment;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.assignment.DeleteAssignmentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chuababyy"},"content":"import seedu.address.logic.parser.assignment.DeleteAssignmentParser;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"public class DeleteAssignmentParserTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    private DeleteAssignmentParser parser \u003d new DeleteAssignmentParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAssignmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"                DeleteAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":29,"Badatprogrammiing":5}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"Badatprogrammiing"},"content":"        private final ObservableList\u003cAssignment\u003e assignments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Badatprogrammiing"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Badatprogrammiing"},"content":"        public ObservableList\u003cAssignment\u003e getAssignmentList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Badatprogrammiing"},"content":"            return assignments;","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Badatprogrammiing"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Badatprogrammiing":9,"-":108}},{"path":"src/test/java/seedu/address/model/assignment/IsoDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"public class IsoDateTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"    private String invalidDate \u003d \"1111-11-40 11:50\";","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    private String invalidDate2 \u003d \"1111-11-40\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    private String validDate \u003d \"2025-11-11 11:50\";","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    private String validDate2 \u003d \"2025-11-11 11:51\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"    private String validDate3 \u003d \"2025-11-11\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"        // Date with time","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"        assertTrue(IsoDate.isValidIsoDate(validDate));","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"        assertFalse(IsoDate.isValidIsoDate(invalidDate));","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"        //Date without time","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        assertTrue(IsoDate.isValidIsoDateWithoutTime(validDate3));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"        assertFalse(IsoDate.isValidIsoDateWithoutTime(invalidDate2));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    public void returnsCorrectSaveData() {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"        Date d \u003d new IsoDate(LocalDateTime.parse(validDate, DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT)));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(validDate, d.toSaveData());","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        assertNotEquals(invalidDate, d.toSaveData());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"        Date d \u003d new IsoDate(LocalDateTime.parse(validDate, DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT)));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        assertNotEquals(null, d);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"        assertNotEquals(d, new IsoDate(LocalDateTime.parse(validDate2,","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"Badatprogrammiing"},"content":"                DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))));","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(d, new IsoDate(LocalDateTime.parse(validDate, DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT))));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(d, d);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Badatprogrammiing":53}},{"path":"src/test/java/seedu/address/model/assignment/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"public class NameTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    public void isValidName() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidTaskName(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"        assertTrue(Name.isValidTaskName(\"task\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"        assertFalse(Name.isValidTaskName(\"\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    public void equals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(name, new Name(\"Valid Name\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"        assertEquals(name, name);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"        assertNotEquals(null, name);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"        assertNotEquals(name, new Name(\"Other Valid Name\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Badatprogrammiing":46}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Badatprogrammiing"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"public class JsonAdaptedAssignmentTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"    private String invalidName \u003d \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"Badatprogrammiing"},"content":"    private String invalidDate \u003d \"1111-23-11\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"Badatprogrammiing"},"content":"    private String validName \u003d \"task1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"Badatprogrammiing"},"content":"    private String validDescription \u003d \"description\";","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"Badatprogrammiing"},"content":"    private boolean validStatus \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    private String validDate \u003d \"2025-10-15 23:59\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModel_validAssignment_doesNotThrow() {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"        assertDoesNotThrow(() -\u003e new JsonAdaptedAssignment(validName, validDescription, validStatus, validDate,","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"                validDate, List.of(new JsonAdaptedTag(\"cs2100\"))).toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModel_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, () -\u003e new JsonAdaptedAssignment(invalidName, validDescription,","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"                validStatus, validDate, validDate, List.of(new JsonAdaptedTag(\"cs2100\"))).toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModel_invalidEndDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, () -\u003e new JsonAdaptedAssignment(validName, validDescription,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"                validStatus, invalidDate, validDate, List.of(new JsonAdaptedTag(\"cs2100\"))).toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModel_invalidPlannedDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, () -\u003e new JsonAdaptedAssignment(validName, validDescription,","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"Badatprogrammiing"},"content":"                validStatus, validDate, invalidDate, List.of(new JsonAdaptedTag(\"cs2100\"))).toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Badatprogrammiing"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"Badatprogrammiing":44}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final Path DUPLICATE_ASSIGNMENT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Badatprogrammiing"},"content":"            .resolve(\"duplicateAssignmentAddressBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final Path INVALID_NAME_ASSGN_FILE \u003d TEST_DATA_FOLDER.resolve(\"emptyAssignmentNameAddressBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final Path INVALID_DATE_ASSGN_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":"            .resolve(\"invalidAssignmentDateAddressBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Badatprogrammiing"},"content":"    private static final Path INVALID_PLAN_DATE_ASSGN_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"            .resolve(\"invalidPlanAssignmentDateAddressBook.json\");","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModelType_duplicateAssignments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Badatprogrammiing"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ASSIGNMENT_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Badatprogrammiing"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_ASSIGNMENTS,","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Badatprogrammiing"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModelType_emptyAssignmentName_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Badatprogrammiing"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_NAME_ASSGN_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Badatprogrammiing"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModelType_invalidAssignmentDate_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Badatprogrammiing"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DATE_ASSGN_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Badatprogrammiing"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Badatprogrammiing"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Badatprogrammiing"},"content":"    public void toModelType_invalidAssignmentPlanDate_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Badatprogrammiing"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PLAN_DATE_ASSGN_FILE,","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Badatprogrammiing"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Badatprogrammiing"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Badatprogrammiing"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Badatprogrammiing":37,"-":46}},{"path":"src/test/java/seedu/address/testutil/AssignmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chuababyy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chuababyy"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Date;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.model.assignment.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":" * A utility class to help with building Assignment objects.","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"public class AssignmentBuilder {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"    public static final String DEFAULT_NAME \u003d \"CS2105 Assignment 0\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"    public static final LocalDateTime DEFAULT_DATE \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-11-29 18:00\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"chuababyy"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Programming assignment\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chuababyy"},"content":"    public static final Boolean DEFAULT_STATUS \u003d false;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chuababyy"},"content":"    private Name name;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"chuababyy"},"content":"    private Status status;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"chuababyy"},"content":"    private Date deadline;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"chuababyy"},"content":"    private Date plannedEndDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"chuababyy"},"content":"    private Description description;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chuababyy"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"chuababyy"},"content":"     * Creates a {@code AssignmentBuilder} with the default details.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"chuababyy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"chuababyy"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"        deadline \u003d new IsoDate(DEFAULT_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"        plannedEndDate \u003d new IsoDate(DEFAULT_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"     * Initializes the AssignmentBuilder with the data of {@code assignmentToCopy}.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder(Assignment assignmentToCopy) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"        name \u003d assignmentToCopy.getName();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"        status \u003d assignmentToCopy.getStatus();","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"        deadline \u003d assignmentToCopy.getEnd();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"        plannedEndDate \u003d assignmentToCopy.getPlannedFinishDate();","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"        description \u003d assignmentToCopy.getDescription();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"        tags \u003d new HashSet\u003c\u003e(assignmentToCopy.getTags());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"     * Sets the {@code Name} of the {@code Assignment} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder withName(String name) {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Assignment} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"     * Sets the {@code Status} of the {@code Assignment} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder withStatus(Boolean status) {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"     * Sets the {@code Deadline} of the {@code Assignment} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder withDeadline(LocalDateTime deadline) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"        this.deadline \u003d new IsoDate(deadline);","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"chuababyy"},"content":"     * Sets the {@code PlannedDate} of the {@code Assignment} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder withPlannedDate(LocalDateTime plannedDate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"chuababyy"},"content":"        this.plannedEndDate \u003d new IsoDate(plannedDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"chuababyy"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"chuababyy"},"content":"     * Sets the {@code Description} of the {@code Assignment} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"chuababyy"},"content":"    public AssignmentBuilder withDescription(String description) {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"chuababyy"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"chuababyy"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"chuababyy"},"content":"    public Assignment build() {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"chuababyy"},"content":"        return new Assignment(name, deadline, status, description, plannedEndDate, tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":109,"Badatprogrammiing":2}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Badatprogrammiing":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.parser.person.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Badatprogrammiing":7,"-":55}},{"path":"src/test/java/seedu/address/testutil/TypicalAssignments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chuababyy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_DEADLINE_ASSIGNMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_DESCRIPTION_ASSIGNMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_DESCRIPTION_PROJECT;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_NAME_ASSIGNMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_NAME_PROJECT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_PLANNED_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_STATUS_DONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_STATUS_UNDONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_TAG_ASSIGNMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Badatprogrammiing"},"content":"import static seedu.address.logic.commands.CommandAssignmentTestUtil.VALID_TAG_PROJECT;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chuababyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"chuababyy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"chuababyy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"chuababyy"},"content":"import seedu.address.model.assignment.IsoDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"Badatprogrammiing"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Badatprogrammiing"},"content":" * Typical Assignments","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Badatprogrammiing"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chuababyy"},"content":"public class TypicalAssignments {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Badatprogrammiing"},"content":"    // Manually added - Assignment\u0027s details found in {@code CommandAssignmentTestUtil}","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Assignment ASSIGNMENT5 \u003d new AssignmentBuilder().withName(VALID_NAME_ASSIGNMENT)","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"Badatprogrammiing"},"content":"            .withStatus(VALID_STATUS_DONE).withDescription(VALID_DESCRIPTION_ASSIGNMENT)","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Badatprogrammiing"},"content":"            .withDeadline(VALID_DEADLINE_ASSIGNMENT)","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"Badatprogrammiing"},"content":"            .withPlannedDate(VALID_PLANNED_DATE)","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"Badatprogrammiing"},"content":"            .withTags(VALID_TAG_ASSIGNMENT).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Badatprogrammiing"},"content":"    public static final Assignment ASSIGNMENT6 \u003d new AssignmentBuilder().withName(VALID_NAME_PROJECT)","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Badatprogrammiing"},"content":"            .withStatus(VALID_STATUS_UNDONE).withDescription(VALID_DESCRIPTION_PROJECT)","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Badatprogrammiing"},"content":"            .withDeadline(VALID_DEADLINE_ASSIGNMENT)","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Badatprogrammiing"},"content":"            .withPlannedDate(VALID_PLANNED_DATE)","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Badatprogrammiing"},"content":"            .withTags(VALID_TAG_PROJECT).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Badatprogrammiing"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chuababyy"},"content":"    private static final LocalDateTime exampleDate1 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-11-29 18:00\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chuababyy"},"content":"    private static final LocalDateTime exampleDate2 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-12-12 21:30\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chuababyy"},"content":"    private static final LocalDateTime exampleDate3 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-12-15 21:30\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"chuababyy"},"content":"    private static final LocalDateTime exampleDate4 \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"chuababyy"},"content":"            LocalDateTime.parse(\"2023-12-16 22:30\", DateTimeFormatter.ofPattern(IsoDate.DATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chuababyy"},"content":"    public static final Assignment ASSIGNMENT1 \u003d new AssignmentBuilder().withName(\"CS2100 Lab 7\")","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chuababyy"},"content":"            .withStatus(false).withDescription(\"Draw diagrams\")","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chuababyy"},"content":"            .withDeadline(exampleDate1)","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chuababyy"},"content":"            .withPlannedDate(exampleDate1)","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chuababyy"},"content":"            .withTags(\"CS2100\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"chuababyy"},"content":"    public static final Assignment ASSIGNMENT2 \u003d new AssignmentBuilder().withName(\"CS2101 UG\")","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"chuababyy"},"content":"            .withStatus(false).withDescription(\"Check formatting\")","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"chuababyy"},"content":"            .withDeadline(exampleDate2)","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"chuababyy"},"content":"            .withPlannedDate(exampleDate2)","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"chuababyy"},"content":"            .withTags(\"CS2101\", \"Group\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chuababyy"},"content":"    public static final Assignment ASSIGNMENT3 \u003d new AssignmentBuilder().withName(\"CS2105 Assignment\")","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chuababyy"},"content":"            .withStatus(false).withDescription(\"Do programming assignment\")","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chuababyy"},"content":"            .withDeadline(exampleDate3)","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chuababyy"},"content":"            .withPlannedDate(exampleDate3)","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"chuababyy"},"content":"            .withTags(\"Programming\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chuababyy"},"content":"    public static final Assignment ASSIGNMENT4 \u003d new AssignmentBuilder().withName(\"CS2103T Milestone 2\")","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chuababyy"},"content":"            .withStatus(false).withDescription(\"Add test cases\")","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"chuababyy"},"content":"            .withDeadline(exampleDate4)","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chuababyy"},"content":"            .withPlannedDate(exampleDate4)","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"chuababyy"},"content":"            .withTags(\"Milestone\").build();","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"chuababyy"},"content":"    private TypicalAssignments() {} // prevents instantiation","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"chuababyy"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"chuababyy"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"chuababyy"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"chuababyy"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"chuababyy"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"chuababyy"},"content":"        for (Assignment assignment : getTypicalAssignment()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"chuababyy"},"content":"            ab.addAssignment(assignment);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"chuababyy"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"chuababyy"},"content":"        return ab;","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"chuababyy"},"content":"    public static List\u003cAssignment\u003e getTypicalAssignment() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"chuababyy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ASSIGNMENT1, ASSIGNMENT2, ASSIGNMENT3,","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"chuababyy"},"content":"                ASSIGNMENT4, ASSIGNMENT5, ASSIGNMENT6));","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"chuababyy"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"chuababyy"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chuababyy":62,"Badatprogrammiing":27}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"chuababyy"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chuababyy"},"content":"    public static final Index INDEX_FIRST_ASSIGNMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"chuababyy"},"content":"    public static final Index INDEX_SECOND_ASSIGNMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chuababyy"},"content":"    public static final Index INDEX_THIRD_ASSIGNMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chuababyy":4,"-":12}}]

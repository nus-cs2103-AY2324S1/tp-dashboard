[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"# ToothTracker","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W10-3/tp/actions)","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"## Overview","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"Welcome to the **ToothTracker**! Toothtracker is designed to help Front Desk Dental Clinic Administrative Staff manage their dentist and patient records.","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"**ToothTracker** bridges the best of both worlds by providing a powerful command-line interface coupled with the user-friendliness of a graphical user interface. Designed with the needs of dental clinics in mind, our application ensures seamless management of both dentist and patient records, allowing clinics to focus on what they do best: providing quality dental care.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"### Core Features:","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"1. **Dentist and Patient Information Storage**","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"2. **Easy Record Retrieval**","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"3. **Appointment Tracking**","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"### Users","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"Check out our [User Guide](https://ay2324s1-cs2103t-w10-3.github.io/tp/UserGuide.html) to get started!","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"### Developers","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"Check out our [Developer Guide](https://ay2324s1-cs2103t-w10-3.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"### Credits","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"This project is based off AddressBook-Level3 by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"SynapseProgramming":25,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ruth-lim"},"content":"title: About Us","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"### Chew En Le Jaryl","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"\u003cimg src\u003d\"images/techjay-c.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"[[github](http://github.com/techjay-c)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"ruth-lim"},"content":"[[portfolio](team/techjay-c.md)]","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"### Freddy Chen You Ren","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"\u003cimg src\u003d\"images/freddychenyouren2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"[[github](https://github.com/freddychenyouren2)]","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"[[portfolio](team/freddychenyouren2.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"* Responsibilities: Team Lead","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"### Qin Yan Er","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"\u003cimg src\u003d\"images/qyaner.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"[[github](http://github.com/qyaner)]","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"ruth-lim"},"content":"[[portfolio](team/qyaner.md)]","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ruth-lim"},"content":"### Ruth Lim Sze Ern","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ruth-lim"},"content":"\u003cimg src\u003d\"images/ruth-lim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ruth-lim"},"content":"[[github](http://github.com/ruth-lim)]","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"ruth-lim"},"content":"[[portfolio](team/ruth-lim.md)]","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"### Roald Ong","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"\u003cimg src\u003d\"images/synapseprogramming.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"[[github](http://github.com/SynapseProgramming)]","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"ruth-lim"},"content":"[[portfolio](team/synapseprogramming.md)]","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SynapseProgramming":3,"ruth-lim":8,"-":39,"freddychenyouren2":8,"techjay-c":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"  original source as well}","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"and edit diagrams.","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"**`Main`** (consisting of","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"the command `delete 1`.","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"techjay-c"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"techjay-c"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"techjay-c"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"techjay-c"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"techjay-c"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"techjay-c"},"content":"visible GUI.","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"techjay-c"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"techjay-c"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"techjay-c"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"techjay-c"},"content":"is specified","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"techjay-c"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"techjay-c"},"content":"**API","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"techjay-c"},"content":"** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"techjay-c"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"techjay-c"},"content":"call as an example.","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"techjay-c"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"techjay-c"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"techjay-c"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"techjay-c"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"techjay-c"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"techjay-c"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"techjay-c"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"techjay-c"},"content":"  a `Command` object.","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"techjay-c"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"techjay-c"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"techjay-c"},"content":"**API","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"techjay-c"},"content":"** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"techjay-c"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"techjay-c"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"techjay-c"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"techjay-c"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"techjay-c"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"techjay-c"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"techjay-c"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"techjay-c"},"content":"**API","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"techjay-c"},"content":"** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"techjay-c"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"techjay-c"},"content":"  objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"techjay-c"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"techjay-c"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"techjay-c"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-10-07"},{"lineNumber":185,"author":{"gitId":"techjay-c"},"content":"  that belong to the `Model`)","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"techjay-c"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"techjay-c"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"techjay-c"},"content":"following operations:","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"techjay-c"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"techjay-c"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2023-10-07"},{"lineNumber":207,"author":{"gitId":"techjay-c"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"techjay-c"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"techjay-c"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"techjay-c"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-10-07"},{"lineNumber":215,"author":{"gitId":"techjay-c"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"techjay-c"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2023-10-07"},{"lineNumber":220,"author":{"gitId":"techjay-c"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2023-10-07"},{"lineNumber":221,"author":{"gitId":"techjay-c"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2023-10-07"},{"lineNumber":222,"author":{"gitId":"techjay-c"},"content":"state.","lastModifiedDate":"2023-10-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"techjay-c"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2023-10-07"},{"lineNumber":227,"author":{"gitId":"techjay-c"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2023-10-07"},{"lineNumber":228,"author":{"gitId":"techjay-c"},"content":"the `addressBookStateList`.","lastModifiedDate":"2023-10-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"techjay-c"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2023-10-07"},{"lineNumber":237,"author":{"gitId":"techjay-c"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2023-10-07"},{"lineNumber":238,"author":{"gitId":"techjay-c"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"techjay-c"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2023-10-07"},{"lineNumber":256,"author":{"gitId":"techjay-c"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"techjay-c"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2023-10-07"},{"lineNumber":263,"author":{"gitId":"techjay-c"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-10-07"},{"lineNumber":264,"author":{"gitId":"techjay-c"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"techjay-c"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-10-07"},{"lineNumber":269,"author":{"gitId":"techjay-c"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2023-10-07"},{"lineNumber":270,"author":{"gitId":"techjay-c"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2023-10-07"},{"lineNumber":271,"author":{"gitId":"techjay-c"},"content":"desktop applications follow.","lastModifiedDate":"2023-10-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"SynapseProgramming"},"content":"Front Desk Dental Clinic Administrative Staff who","lastModifiedDate":"2023-10-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"SynapseProgramming"},"content":"* need to obtain patient/dentist personal details quickly","lastModifiedDate":"2023-10-04"},{"lineNumber":319,"author":{"gitId":"SynapseProgramming"},"content":"* need find out the most recent appointments","lastModifiedDate":"2023-10-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"SynapseProgramming"},"content":"**Value proposition**: Easily obtain patient/dentist records through a CLI","lastModifiedDate":"2023-10-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"| Priority | As a …​      | I want to …​                                                      | So that I can…​                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"techjay-c"},"content":"|----------|--------------|-------------------------------------------------------------------|-------------------------------------------------|","lastModifiedDate":"2023-10-07"},{"lineNumber":333,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | create new patient profiles by entering their name, address, etc. | i can maintain patient records                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":334,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | create a new dentist profile                                      | maintain dentist records                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | delete a patient/dentist                                          | remove people who are no longer with the clinic |","lastModifiedDate":"2023-10-04"},{"lineNumber":336,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | list all patients/dentists                                        | find out the total number of patients/dentists  |","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | edit a dentist/patient profile                                    | keep my records up to date                      |","lastModifiedDate":"2023-10-04"},{"lineNumber":338,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | search for patients by name or ID                                 | i have quick access to patient profiles         |","lastModifiedDate":"2023-10-04"},{"lineNumber":339,"author":{"gitId":"SynapseProgramming"},"content":"| `* * *`  | receptionist | search for dentists by name or ID                                 | i have quick access to dentist profiles         |","lastModifiedDate":"2023-10-04"},{"lineNumber":340,"author":{"gitId":"SynapseProgramming"},"content":"| `* *`    | receptionist | view costs of various dental treatments                           | tell customers the price of a dental treatment  |","lastModifiedDate":"2023-10-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"techjay-c"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2023-10-07"},{"lineNumber":347,"author":{"gitId":"techjay-c"},"content":"otherwise)","lastModifiedDate":"2023-10-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"SynapseProgramming"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"techjay-c"},"content":"**Use case: Add a Dentist**","lastModifiedDate":"2023-10-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":355,"author":{"gitId":"techjay-c"},"content":"1. User submits a request to create a new dentist, and provides information about the dentist.","lastModifiedDate":"2023-10-07"},{"lineNumber":356,"author":{"gitId":"techjay-c"},"content":"2. ToothTracker acknowledges the request to add a new dentist.","lastModifiedDate":"2023-10-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":358,"author":{"gitId":"techjay-c"},"content":"Use case ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"techjay-c"},"content":"- **1a. User inputs an invalid command.**","lastModifiedDate":"2023-10-07"},{"lineNumber":363,"author":{"gitId":"SynapseProgramming"},"content":"    - ToothTracker identifies the command error.","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker prompts the user to make the necessary adjustments and provide the command in the correct format.","lastModifiedDate":"2023-10-07"},{"lineNumber":365,"author":{"gitId":"techjay-c"},"content":"    - Steps within 1a repeat until a valid `add-dentist` command is provided.","lastModifiedDate":"2023-10-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":367,"author":{"gitId":"techjay-c"},"content":"      Use case continues from step 2.","lastModifiedDate":"2023-10-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":370,"author":{"gitId":"SynapseProgramming"},"content":"- **1b. ToothTracker finds a pre-existing dentist entry.**","lastModifiedDate":"2023-10-05"},{"lineNumber":371,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker alerts the user about the duplicate entry.","lastModifiedDate":"2023-10-07"},{"lineNumber":372,"author":{"gitId":"SynapseProgramming"},"content":"    - Steps within 1b loop until a new, unique entry is provided.","lastModifiedDate":"2023-10-05"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"techjay-c"},"content":"      Use case continues from step 2.","lastModifiedDate":"2023-10-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"techjay-c"},"content":"**Use Case: Search Dentist**","lastModifiedDate":"2023-10-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"techjay-c"},"content":"**MSS**","lastModifiedDate":"2023-10-09"},{"lineNumber":379,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":380,"author":{"gitId":"techjay-c"},"content":"1. User submits a request to search for a dentist:","lastModifiedDate":"2023-10-07"},{"lineNumber":381,"author":{"gitId":"techjay-c"},"content":"    - User specifies search criteria, which can be either a dentist ID [PATIENT ID] or a dentist name [dentist name].","lastModifiedDate":"2023-10-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"techjay-c"},"content":"2. ToothTracker searches for the dentist based on the criteria:","lastModifiedDate":"2023-10-07"},{"lineNumber":384,"author":{"gitId":"techjay-c"},"content":"    - If the request specifies [PATIENT ID]:","lastModifiedDate":"2023-10-07"},{"lineNumber":385,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker looks for a dentist with the matching ID.","lastModifiedDate":"2023-10-07"},{"lineNumber":386,"author":{"gitId":"techjay-c"},"content":"    - If the request specifies [dentist name]:","lastModifiedDate":"2023-10-07"},{"lineNumber":387,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker searches for a dentist with the matching name.","lastModifiedDate":"2023-10-07"},{"lineNumber":388,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":389,"author":{"gitId":"techjay-c"},"content":"3. ToothTracker displays the search results:","lastModifiedDate":"2023-10-07"},{"lineNumber":390,"author":{"gitId":"techjay-c"},"content":"    - If one or more matching dentists are found:","lastModifiedDate":"2023-10-07"},{"lineNumber":391,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker lists the matching dentists and their details.","lastModifiedDate":"2023-10-07"},{"lineNumber":392,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":393,"author":{"gitId":"techjay-c"},"content":"   Use Case Ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"techjay-c"},"content":"* 2a. The list of dentists is empty:","lastModifiedDate":"2023-10-07"},{"lineNumber":398,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker displays a message indicating that no dentists are available.","lastModifiedDate":"2023-10-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"techjay-c"},"content":"      Use Case Ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":401,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":402,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":403,"author":{"gitId":"techjay-c"},"content":"* 3a. No matching dentist found:","lastModifiedDate":"2023-10-07"},{"lineNumber":404,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker displays a message indicating no matching dentists were found.","lastModifiedDate":"2023-10-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"techjay-c"},"content":"      Use Case Ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"techjay-c"},"content":"* 3b. Invalid dentist ID or name format:","lastModifiedDate":"2023-10-07"},{"lineNumber":410,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker displays an error message.","lastModifiedDate":"2023-10-07"},{"lineNumber":411,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":412,"author":{"gitId":"techjay-c"},"content":"      Use Case Ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":413,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":414,"author":{"gitId":"techjay-c"},"content":"**Use Case: Delete a Dentist**","lastModifiedDate":"2023-10-07"},{"lineNumber":415,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":416,"author":{"gitId":"techjay-c"},"content":"**MSS**","lastModifiedDate":"2023-10-09"},{"lineNumber":417,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":418,"author":{"gitId":"techjay-c"},"content":"1. User submits a request to delete a dentist:","lastModifiedDate":"2023-10-07"},{"lineNumber":419,"author":{"gitId":"techjay-c"},"content":"    - User specifies the dentist ID [PATIENT ID] or dentist name [dentist name] to delete.","lastModifiedDate":"2023-10-07"},{"lineNumber":420,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":421,"author":{"gitId":"techjay-c"},"content":"2. ToothTracker searches for the dentist entry:","lastModifiedDate":"2023-10-07"},{"lineNumber":422,"author":{"gitId":"techjay-c"},"content":"    - If the request specifies [PATIENT ID]:","lastModifiedDate":"2023-10-07"},{"lineNumber":423,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker looks for a dentist with the matching ID.","lastModifiedDate":"2023-10-07"},{"lineNumber":424,"author":{"gitId":"techjay-c"},"content":"    - If the request specifies [dentist name]:","lastModifiedDate":"2023-10-07"},{"lineNumber":425,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker searches for a dentist with the matching name.","lastModifiedDate":"2023-10-07"},{"lineNumber":426,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":427,"author":{"gitId":"techjay-c"},"content":"3. ToothTracker shows the dentist entry that matches the request:","lastModifiedDate":"2023-10-07"},{"lineNumber":428,"author":{"gitId":"techjay-c"},"content":"    - If a match is found:","lastModifiedDate":"2023-10-07"},{"lineNumber":429,"author":{"gitId":"techjay-c"},"content":"        - User confirms the deletion of the specified dentist.","lastModifiedDate":"2023-10-07"},{"lineNumber":430,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":431,"author":{"gitId":"techjay-c"},"content":"4. ToothTracker deletes the dentist:","lastModifiedDate":"2023-10-07"},{"lineNumber":432,"author":{"gitId":"techjay-c"},"content":"    - Dentist entry is removed from the database.","lastModifiedDate":"2023-10-07"},{"lineNumber":433,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":434,"author":{"gitId":"techjay-c"},"content":"      Use Case Ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":435,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":436,"author":{"gitId":"techjay-c"},"content":"**Extensions**","lastModifiedDate":"2023-10-07"},{"lineNumber":437,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":438,"author":{"gitId":"techjay-c"},"content":"* 2a. The list is empty:","lastModifiedDate":"2023-10-07"},{"lineNumber":439,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker displays a message indicating no dentists are available.","lastModifiedDate":"2023-10-07"},{"lineNumber":440,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":441,"author":{"gitId":"techjay-c"},"content":"      Use Case Ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":444,"author":{"gitId":"techjay-c"},"content":"* 3a. No matching dentist found:","lastModifiedDate":"2023-10-07"},{"lineNumber":445,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker displays an error message.","lastModifiedDate":"2023-10-07"},{"lineNumber":446,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":447,"author":{"gitId":"techjay-c"},"content":"      Use Case resumes at step 2.","lastModifiedDate":"2023-10-07"},{"lineNumber":448,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":449,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":450,"author":{"gitId":"techjay-c"},"content":"* 3b. Invalid dentist ID or name format:","lastModifiedDate":"2023-10-07"},{"lineNumber":451,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker displays an error message.","lastModifiedDate":"2023-10-07"},{"lineNumber":452,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":453,"author":{"gitId":"techjay-c"},"content":"      Use Case ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":454,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":455,"author":{"gitId":"techjay-c"},"content":"* 4a. Deletion is cancelled by the user:","lastModifiedDate":"2023-10-07"},{"lineNumber":456,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker cancels the deletion process.","lastModifiedDate":"2023-10-07"},{"lineNumber":457,"author":{"gitId":"techjay-c"},"content":"    - Use Case ends.","lastModifiedDate":"2023-10-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"techjay-c"},"content":"**Use case: List Dentist Data**","lastModifiedDate":"2023-10-08"},{"lineNumber":460,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":461,"author":{"gitId":"techjay-c"},"content":"**MSS**","lastModifiedDate":"2023-10-08"},{"lineNumber":462,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":463,"author":{"gitId":"techjay-c"},"content":"1. User submits a request to list all dentist data.","lastModifiedDate":"2023-10-08"},{"lineNumber":464,"author":{"gitId":"techjay-c"},"content":"2. ToothTracker retrieves the list of all dentist data saved in the system.","lastModifiedDate":"2023-10-08"},{"lineNumber":465,"author":{"gitId":"techjay-c"},"content":"3. ToothTracker displays the list of dentist data to the user.","lastModifiedDate":"2023-10-08"},{"lineNumber":466,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":467,"author":{"gitId":"techjay-c"},"content":"   Use case ends.","lastModifiedDate":"2023-10-08"},{"lineNumber":468,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":469,"author":{"gitId":"techjay-c"},"content":"**Extensions**","lastModifiedDate":"2023-10-08"},{"lineNumber":470,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":471,"author":{"gitId":"techjay-c"},"content":"- **1a. User inputs an invalid command.**","lastModifiedDate":"2023-10-08"},{"lineNumber":472,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker identifies the command error.","lastModifiedDate":"2023-10-08"},{"lineNumber":473,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker prompts the user to make the necessary adjustments and provide the command in the correct format.","lastModifiedDate":"2023-10-08"},{"lineNumber":474,"author":{"gitId":"techjay-c"},"content":"    - Steps within 1a repeat until a valid `list-dentist` command is provided.","lastModifiedDate":"2023-10-08"},{"lineNumber":475,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":476,"author":{"gitId":"techjay-c"},"content":"      Use case continues from step 2.","lastModifiedDate":"2023-10-08"},{"lineNumber":477,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":478,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":479,"author":{"gitId":"techjay-c"},"content":"- **2a. No dentist data available.**","lastModifiedDate":"2023-10-08"},{"lineNumber":480,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker checks and finds that there are no dentist records in the system.","lastModifiedDate":"2023-10-08"},{"lineNumber":481,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker informs the user that no dentist data is available.","lastModifiedDate":"2023-10-08"},{"lineNumber":482,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":483,"author":{"gitId":"techjay-c"},"content":"      Use case continues from step 2.","lastModifiedDate":"2023-10-08"},{"lineNumber":484,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":485,"author":{"gitId":"techjay-c"},"content":"**Use case: Add Treatment**","lastModifiedDate":"2023-10-08"},{"lineNumber":486,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":487,"author":{"gitId":"techjay-c"},"content":"**MSS**","lastModifiedDate":"2023-10-08"},{"lineNumber":488,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":489,"author":{"gitId":"techjay-c"},"content":"1. User submits a request to add a new type of dental treatment, providing information about the treatment name and its","lastModifiedDate":"2023-10-08"},{"lineNumber":490,"author":{"gitId":"techjay-c"},"content":"   cost.","lastModifiedDate":"2023-10-08"},{"lineNumber":491,"author":{"gitId":"techjay-c"},"content":"2. ToothTracker acknowledges the request to add the new treatment.","lastModifiedDate":"2023-10-08"},{"lineNumber":492,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":493,"author":{"gitId":"techjay-c"},"content":"   Use case ends.","lastModifiedDate":"2023-10-08"},{"lineNumber":494,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":495,"author":{"gitId":"techjay-c"},"content":"**Extensions**","lastModifiedDate":"2023-10-08"},{"lineNumber":496,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":497,"author":{"gitId":"techjay-c"},"content":"- **1a. User inputs an invalid command.**","lastModifiedDate":"2023-10-08"},{"lineNumber":498,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker identifies the command error.","lastModifiedDate":"2023-10-08"},{"lineNumber":499,"author":{"gitId":"techjay-c"},"content":"        - ToothTracker prompts the user to make the necessary adjustments and provide the command in the correct format.","lastModifiedDate":"2023-10-08"},{"lineNumber":500,"author":{"gitId":"techjay-c"},"content":"    - Steps within 1a repeat until a valid `add-treatment` is provided.","lastModifiedDate":"2023-10-08"},{"lineNumber":501,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":502,"author":{"gitId":"techjay-c"},"content":"      Use case continues from step 2.","lastModifiedDate":"2023-10-08"},{"lineNumber":503,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":504,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":505,"author":{"gitId":"techjay-c"},"content":"- **1b. User inputs incomplete or missing information.**","lastModifiedDate":"2023-10-08"},{"lineNumber":506,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker detects that the user did not provide all required information, such as the treatment name or cost.","lastModifiedDate":"2023-10-08"},{"lineNumber":507,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker prompts the user to provide both the treatment name and its cost.","lastModifiedDate":"2023-10-08"},{"lineNumber":508,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":509,"author":{"gitId":"techjay-c"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-08"},{"lineNumber":510,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":511,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":512,"author":{"gitId":"techjay-c"},"content":"- **1c. User inputs an invalid cost.**","lastModifiedDate":"2023-10-08"},{"lineNumber":513,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker checks the provided cost and determines that it is not a valid numeric value.","lastModifiedDate":"2023-10-08"},{"lineNumber":514,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker prompts the user to provide a valid numeric value.","lastModifiedDate":"2023-10-08"},{"lineNumber":515,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":516,"author":{"gitId":"techjay-c"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-08"},{"lineNumber":517,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":518,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":519,"author":{"gitId":"techjay-c"},"content":"- **1d. Duplicate treatment name.**","lastModifiedDate":"2023-10-08"},{"lineNumber":520,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker checks the database and finds that a treatment with the same name.","lastModifiedDate":"2023-10-08"},{"lineNumber":521,"author":{"gitId":"techjay-c"},"content":"    - ToothTracker alerts the user about the duplicate entry.","lastModifiedDate":"2023-10-08"},{"lineNumber":522,"author":{"gitId":"techjay-c"},"content":"    - Steps within 1d loop until a new, unique treatment name is provided.","lastModifiedDate":"2023-10-08"},{"lineNumber":523,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":524,"author":{"gitId":"techjay-c"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-08"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":526,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"SynapseProgramming"},"content":"2. Should be able to hold up to 1000 Dentists and 1000 Patients without any major performance issues.","lastModifiedDate":"2023-10-06"},{"lineNumber":532,"author":{"gitId":"techjay-c"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-10-07"},{"lineNumber":533,"author":{"gitId":"techjay-c"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-07"},{"lineNumber":534,"author":{"gitId":"SynapseProgramming"},"content":"4. Should not use more than 2GB of RAM","lastModifiedDate":"2023-10-06"},{"lineNumber":535,"author":{"gitId":"SynapseProgramming"},"content":"5. Jar file size should not exceed 150MB","lastModifiedDate":"2023-10-06"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"SynapseProgramming"},"content":"* **CLI**: command line interface","lastModifiedDate":"2023-10-06"},{"lineNumber":541,"author":{"gitId":"SynapseProgramming"},"content":"* **GUI**: graphical user interface, a visual way of interacting with a computer program","lastModifiedDate":"2023-10-06"},{"lineNumber":542,"author":{"gitId":"SynapseProgramming"},"content":"* **PlantUML**: A tool which is used to create diagrams","lastModifiedDate":"2023-10-06"},{"lineNumber":543,"author":{"gitId":"SynapseProgramming"},"content":"* **API**: Application Programming Interface","lastModifiedDate":"2023-10-06"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"techjay-c"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2023-10-07"},{"lineNumber":563,"author":{"gitId":"techjay-c"},"content":"       optimum.","lastModifiedDate":"2023-10-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"techjay-c"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2023-10-07"},{"lineNumber":582,"author":{"gitId":"techjay-c"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SynapseProgramming":24,"-":325,"techjay-c":249}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"ToothTracker is an **All-in-One solution for Effortless Dental Clinic Record Management**.","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"From adding new patient and dentist profiles to seamlessly deleting records,","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"ToothTracker is engineered to simplify every aspect of your administrative responsibilities.","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"1. Download the latest `ToothTracker.jar` from [here]().","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ToothTracker.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ToothTracker.jar`","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    * `list-dentists` : Lists all dentists.","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"    * `add-dentist n/Bob p/12345678 e/bobjune@gmail.com y/6 s/braces` : Adds a dentist named `Bob`","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"      to the ToothTracker.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    * `delete-dentist 3` : Deletes the dentist with id 2.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"ruth-lim"},"content":"## Dentist Features","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"### Adding a dentist : `add-dentist`","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"Adds a dentist to ToothTracker list of dentists. This is helpful when:","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"* You are using ToothTracker for the first time and you have to add your dentists\u0027 particulars.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"* A new dentist has joined your dental clinic.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"**Format:** `add-dentist n/NAME p/PHONE e/EMAIL s/SPECIALIZATION y/YOE [t/TAG]…​`","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"techjay-c"},"content":"* `add-dentist n/Bob p/12345678 e/bobjune@gmail.com y/6 s/braces`  adds a dentist named \u0027Bob\u0027 with phone number \u0027","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"techjay-c"},"content":"  12345678\u0027 and email ‘bobjune@gmail.com’, who has 6 years of experience and specializing in \u0027braces\u0027 into ToothTracker","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"techjay-c"},"content":"  dentist list.","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"techjay-c"},"content":"* `add-dentist n/Emmanuel Chua p/99887766 y/8 s/surgery t/extraction` adds a dentist named \u0027Emmanuel Chua\u0027 with phone","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"techjay-c"},"content":"  number \u002799887766\u0027 who has 8 years of experience specializing in \u0027surgery\u0027 with a tag of \u0027extraction\u0027 into ToothTracker","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"techjay-c"},"content":"  dentist list.","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"### Editing a dentist: `edit-dentist`","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"Edits one or more details of the dentist at the specified Dentist ID. This is helpful when:","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"The particulars of a dentist need to be updated.","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"You accidentally entered incorrect information about a dentist into the ToothTrack database.","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"You can edit the particulars in any order and you can edit more than one detail of the dentist.","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"To check the Dentist ID for a dentist, you can simply enter the command `list-dentist`.","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"When editing tags, you have to include any previous tags that was already included in the dentist, or else these tags will be removed. This also means that you can use `t/` to remove all tags from a dentist using the edit-dentist command.","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"**Format:** `edit-dentist DENTIST_ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/SPECIALIZATION] [y/YOE] [t/TAG]…​`","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"techjay-c"},"content":"* `edit-dentist 1 p/98987676 e/bobjuly@gmail.com` edits the phone number and email of the dentist with Dentist ID of 1","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"techjay-c"},"content":"  into 98987676 and bobjuly@gmail.com respectively.","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"techjay-c"},"content":"* `edit-dentist 2 n/Emmanuel Alexandra t/` edits the name of the dentist with Dentist ID of 2 into ‘Emmanual Alexandra’","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"techjay-c"},"content":"  and removes all tags of the dentist.","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"### Searching a dentist by Dentist ID: `search-dentist DENTIST_ID`","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"Searches for the dentist at the specified Dentist ID in ToothTracker","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"The `DENTIST_ID` refers to the index number shown in the displayed list of dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"You may use `list-dentists` to check out the dentists\u0027 ID first.","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"**Format:** `search-dentist DENTIST_ID`","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"### Searching a dentist by name: `search-dentist NAME`","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"Searches for the dentist whose name contains `NAME`  in ToothTracker","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"The `DENTIST_ID` refers to the index number shown in the displayed list of dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"You may use `list-dentists` to check out the dentists\u0027 ID first.","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"**Format:** `search-dentist NAME`","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"### Deleting a dentist: `delete-dentist DENTIST_ID`","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"Deletes the specified dentist from ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"This command is DESTRUCTIVE!","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"Dentists deleted will need to be added back and their previous records may be removed.","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"Proceed with caution!","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":167,"author":{"gitId":"freddychenyouren2"},"content":"The `DENTIST_ID` refers to the index number shown in the displayed list of dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":168,"author":{"gitId":"freddychenyouren2"},"content":"You may use `list-dentists` to check out the dentists\u0027 ID first.","lastModifiedDate":"2023-10-06"},{"lineNumber":169,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":171,"author":{"gitId":"freddychenyouren2"},"content":"**Format:** `delete-dentist DENTIST_ID`","lastModifiedDate":"2023-10-06"},{"lineNumber":172,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":173,"author":{"gitId":"freddychenyouren2"},"content":"Examples:","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"freddychenyouren2"},"content":"* `delete-dentist 2` deletes dentist with DENTIST_ID 2 from ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"### Listing all dentists : `list-dentists`","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"Shows a list of all dentists in ToothTracker. This is useful when:","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"* You want to retrieve the information of all dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"* You want to verify a dentist is added successfully in ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"* You want to verify a dentist is updated successfully in ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"freddychenyouren2"},"content":"**Format:** `list-dentists` (No extra parameters required)","lastModifiedDate":"2023-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":188,"author":{"gitId":"techjay-c"},"content":"## Patient Features","lastModifiedDate":"2023-10-08"},{"lineNumber":189,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":190,"author":{"gitId":"techjay-c"},"content":"### Adding a patient: `add-patient`","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"ruth-lim"},"content":"Adds a patient to ToothTracker list of patients. This is helpful when:","lastModifiedDate":"2023-10-08"},{"lineNumber":193,"author":{"gitId":"ruth-lim"},"content":"- You are using ToothTracker for the first time and you have to add your patients\u0027 particulars.","lastModifiedDate":"2023-10-08"},{"lineNumber":194,"author":{"gitId":"ruth-lim"},"content":"- A new patient has joined your clinic.","lastModifiedDate":"2023-10-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"ruth-lim"},"content":"Format: `add-patient n/NAME p/PHONE e/EMAIL b/BIRTHDATE g/GENDER a/APPOINTMENT s/SERVICE h/ADDRESS `","lastModifiedDate":"2023-10-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"ruth-lim"},"content":"* `Add-patient n/John Tan p/90676622 e/johntan@gmail.com b/06-06-1998 g/M a/10-08-2023 s/Cleaning h/60 Jalan Kempinski Road` \u003cbr\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":201,"author":{"gitId":"ruth-lim"},"content":"Adds a new patient named ‘John Tan’, with phone number ‘90676622’ and email of ‘johntan@gmail.com’,","lastModifiedDate":"2023-10-08"},{"lineNumber":202,"author":{"gitId":"ruth-lim"},"content":"birthdate of 06 June 1998, Gender Male, appointment date of 10 August 2023, requesting for cleaning treatment","lastModifiedDate":"2023-10-08"},{"lineNumber":203,"author":{"gitId":"ruth-lim"},"content":"and with an address at 60 Jalan Kempinski Road.","lastModifiedDate":"2023-10-08"},{"lineNumber":204,"author":{"gitId":"ruth-lim"},"content":"* `Add-patient n/Megan Chua p/88756298 e/megan@outlook.com b/10-09-1993 g/F a/02-11-2023 s/Cleaning h/34 Changi Rise` \u003cbr\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":205,"author":{"gitId":"ruth-lim"},"content":"Adds a new patient named ‘Megan Chua’, with phone number ‘88756298’ and email of ‘megan@outlook.com’,","lastModifiedDate":"2023-10-08"},{"lineNumber":206,"author":{"gitId":"ruth-lim"},"content":"birthdate of 10 Sep 1993, Gender Female, appointment date of 02 Nov 2023, requesting for cleaning treatment and with","lastModifiedDate":"2023-10-08"},{"lineNumber":207,"author":{"gitId":"ruth-lim"},"content":"an address at 34 Changi Rise.","lastModifiedDate":"2023-10-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":210,"author":{"gitId":"techjay-c"},"content":"### Listing all patients : `list-patient`","lastModifiedDate":"2023-10-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"freddychenyouren2"},"content":"Shows a list of all patients in ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"techjay-c"},"content":"Format: `list-patient`","lastModifiedDate":"2023-10-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":218,"author":{"gitId":"techjay-c"},"content":"* `list-patient 296` shows the details of the patient with PATIENT_ID 296 from ToothTracker.","lastModifiedDate":"2023-10-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"qyaner"},"content":"### Deleting a patient : `delete-patient`","lastModifiedDate":"2023-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"freddychenyouren2"},"content":"Deletes the specified patient from ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":225,"author":{"gitId":"ruth-lim"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-10-08"},{"lineNumber":226,"author":{"gitId":"ruth-lim"},"content":"This command is DESTRUCTIVE! Dentists deleted will need to be added back and their previous records may be removed.","lastModifiedDate":"2023-10-08"},{"lineNumber":227,"author":{"gitId":"qyaner"},"content":"**Proceed with caution!**","lastModifiedDate":"2023-10-07"},{"lineNumber":228,"author":{"gitId":"ruth-lim"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"freddychenyouren2"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2023-10-06"},{"lineNumber":231,"author":{"gitId":"freddychenyouren2"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-10-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-06"},{"lineNumber":233,"author":{"gitId":"techjay-c"},"content":"* You may use `list-patient` to obtain the patient\u0027s ID first.","lastModifiedDate":"2023-10-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"qyaner"},"content":"Format: `delete-patient PATIENT_ID`","lastModifiedDate":"2023-10-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":239,"author":{"gitId":"freddychenyouren2"},"content":"* `delete-patient 034` deletes patient with PATIENT_ID 34 from ToothTracker.","lastModifiedDate":"2023-10-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":242,"author":{"gitId":"techjay-c"},"content":"### Searching patients by ID or keyword: `search-patient`","lastModifiedDate":"2023-10-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"ruth-lim"},"content":"Searches for the patient with the specified ID or patients that matches the keyword. This command allows you to find patient records that match your","lastModifiedDate":"2023-10-08"},{"lineNumber":245,"author":{"gitId":"ruth-lim"},"content":"search criteria.","lastModifiedDate":"2023-10-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"techjay-c"},"content":"Format: `search-patient [KEYWORD]`, `search-patient [PATIENT_ID]`","lastModifiedDate":"2023-10-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"ruth-lim"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":250,"author":{"gitId":"ruth-lim"},"content":"The `PATIENT_ID` refers to the index number shown in the displayed list of patients. \u003cbr\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":251,"author":{"gitId":"ruth-lim"},"content":"You may use `list-patients` to check out the patient\u0027 ID first.","lastModifiedDate":"2023-10-08"},{"lineNumber":252,"author":{"gitId":"ruth-lim"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":253,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":254,"author":{"gitId":"ruth-lim"},"content":"**Important Notes:**","lastModifiedDate":"2023-10-08"},{"lineNumber":255,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":256,"author":{"gitId":"techjay-c"},"content":"* The search is case-insensitive, meaning that the search will match both uppercase and lowercase characters. For","lastModifiedDate":"2023-10-08"},{"lineNumber":257,"author":{"gitId":"techjay-c"},"content":"  example, searching for `Thomas` will match both `Thomas` and `thomas`.","lastModifiedDate":"2023-10-08"},{"lineNumber":258,"author":{"gitId":"techjay-c"},"content":"* The order of the keywords in the name does not matter. For instance, searching for `Thomas Tan` will","lastModifiedDate":"2023-10-08"},{"lineNumber":259,"author":{"gitId":"techjay-c"},"content":"  match `Tan Thomas` as well.","lastModifiedDate":"2023-10-08"},{"lineNumber":260,"author":{"gitId":"techjay-c"},"content":"* The search is performed only on the patient\u0027s name.","lastModifiedDate":"2023-10-08"},{"lineNumber":261,"author":{"gitId":"techjay-c"},"content":"* Only full words will be matched. For example, if you search for `Mel`, it will not match `Melissa`.","lastModifiedDate":"2023-10-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":266,"author":{"gitId":"techjay-c"},"content":"* `search-patient Thomas` will search for patients with the name containing the keyword `Thomas`.","lastModifiedDate":"2023-10-08"},{"lineNumber":267,"author":{"gitId":"techjay-c"},"content":"* `search-patient 088` will search for a patient with the ID `088`. If one or more matching patients are found based on","lastModifiedDate":"2023-10-08"},{"lineNumber":268,"author":{"gitId":"techjay-c"},"content":"  your search criteria, the system will list the matching patients along with their details.","lastModifiedDate":"2023-10-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"qyaner"},"content":"## General Features","lastModifiedDate":"2023-10-10"},{"lineNumber":271,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":272,"author":{"gitId":"qyaner"},"content":"### Adding a treatment: `add-treatment`","lastModifiedDate":"2023-10-10"},{"lineNumber":273,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":274,"author":{"gitId":"qyaner"},"content":"You can add a new dental treatment to the ToothTracker system using the `add-treatment` command. This command allows you","lastModifiedDate":"2023-10-10"},{"lineNumber":275,"author":{"gitId":"qyaner"},"content":"to specify the name of the treatment and its associated price.","lastModifiedDate":"2023-10-10"},{"lineNumber":276,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":277,"author":{"gitId":"qyaner"},"content":"Format: `add-treatment [name] [price]`","lastModifiedDate":"2023-10-10"},{"lineNumber":278,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":279,"author":{"gitId":"qyaner"},"content":"Examples:","lastModifiedDate":"2023-10-10"},{"lineNumber":280,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":281,"author":{"gitId":"qyaner"},"content":"* `add-treatment \"Tooth Extraction\" 150` adds a Tooth Extraction Treatment to ToothTracker with a cost of $150.","lastModifiedDate":"2023-10-10"},{"lineNumber":282,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":283,"author":{"gitId":"qyaner"},"content":"**Important Notes:**","lastModifiedDate":"2023-10-10"},{"lineNumber":284,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":285,"author":{"gitId":"qyaner"},"content":"- Ensure that you provide both the treatment name and its cost when using the `add-treatment` command.","lastModifiedDate":"2023-10-10"},{"lineNumber":286,"author":{"gitId":"qyaner"},"content":"- The system will not allow duplicate treatment names. If a treatment with the same name already exists, you will be","lastModifiedDate":"2023-10-10"},{"lineNumber":287,"author":{"gitId":"qyaner"},"content":"  prompted to provide a unique name.","lastModifiedDate":"2023-10-10"},{"lineNumber":288,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":289,"author":{"gitId":"qyaner"},"content":"### Filter Appointments by service type, date or dentist: `filter KEYWORD`","lastModifiedDate":"2023-10-10"},{"lineNumber":290,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":291,"author":{"gitId":"qyaner"},"content":"You can filter appointments by their service type, date or dentists in the ToothTracker system","lastModifiedDate":"2023-10-10"},{"lineNumber":292,"author":{"gitId":"qyaner"},"content":"using the `filter` command.","lastModifiedDate":"2023-10-10"},{"lineNumber":293,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":294,"author":{"gitId":"qyaner"},"content":"Format: `filter s/SERVICE_TYPE`, `filter t/DATE`, `filter d/DENTIST`","lastModifiedDate":"2023-10-10"},{"lineNumber":295,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":296,"author":{"gitId":"qyaner"},"content":"Examples:","lastModifiedDate":"2023-10-10"},{"lineNumber":297,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":298,"author":{"gitId":"qyaner"},"content":"* `filter s/Tooth Extraction` return all Tooth Extraction appointments.","lastModifiedDate":"2023-10-10"},{"lineNumber":299,"author":{"gitId":"qyaner"},"content":"* `filter t/20-11-2023` return all appointments happening on 20 November 2023.","lastModifiedDate":"2023-10-10"},{"lineNumber":300,"author":{"gitId":"qyaner"},"content":"* `filter d/Tom` return all appointments with Tom as the dentist.","lastModifiedDate":"2023-10-10"},{"lineNumber":301,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"techjay-c"},"content":"Clears all entries from ToothTracker.","lastModifiedDate":"2023-10-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"techjay-c"},"content":"ToothTracker data is saved in the hard disk automatically after any command that changes the data. There is no need to","lastModifiedDate":"2023-10-08"},{"lineNumber":318,"author":{"gitId":"freddychenyouren2"},"content":"save manually.","lastModifiedDate":"2023-10-06"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":322,"author":{"gitId":"techjay-c"},"content":"ToothTracker data is saved automatically as a JSON file `[JAR file location]/data/toothtracker.json`. Advanced users are","lastModifiedDate":"2023-10-08"},{"lineNumber":323,"author":{"gitId":"freddychenyouren2"},"content":"welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-06"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":326,"author":{"gitId":"techjay-c"},"content":"If your changes to the data file makes its format invalid, ToothTracker will discard all data and start with an empty","lastModifiedDate":"2023-10-08"},{"lineNumber":327,"author":{"gitId":"techjay-c"},"content":"data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"freddychenyouren2"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2023-10-06"},{"lineNumber":340,"author":{"gitId":"ruth-lim"},"content":"the data of your previous ToothTracker home folder.","lastModifiedDate":"2023-10-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":346,"author":{"gitId":"freddychenyouren2"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only","lastModifiedDate":"2023-10-06"},{"lineNumber":347,"author":{"gitId":"freddychenyouren2"},"content":"   the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the","lastModifiedDate":"2023-10-06"},{"lineNumber":348,"author":{"gitId":"freddychenyouren2"},"content":"   application before running the application again.","lastModifiedDate":"2023-10-06"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"freddychenyouren2"},"content":"| Action                                  | Format, Examples                                                                                                                                                                                                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":355,"author":{"gitId":"qyaner"},"content":"|-----------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-10"},{"lineNumber":356,"author":{"gitId":"qyaner"},"content":"| **Add Dentist**                         | `add-dentist n/NAME p/PHONE e/EMAIL s/SPECIALIZATION y/YOE [t/TAG]…​` \u003cbr\u003e e.g., `add-dentist n/Bob p/12345678 e/bobjune@gmail.com y/6 s/braces`                                                                                  |","lastModifiedDate":"2023-10-07"},{"lineNumber":357,"author":{"gitId":"qyaner"},"content":"| **Edit Dentist**                        | `edit-dentist DENTIST_ID [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/SPECIALIZATION] [y/YOE] [t/TAG]…​` \u003cbr\u003e e.g., `edit-dentist 1 p/98987676 e/bobjuly@gmail.com`                                                                |","lastModifiedDate":"2023-10-07"},{"lineNumber":358,"author":{"gitId":"qyaner"},"content":"| **Delete Dentist**                      | `delete-dentist DENTIST_ID`\u003cbr\u003e e.g., `delete-dentist 3`                                                                                                                                                                          |","lastModifiedDate":"2023-10-07"},{"lineNumber":359,"author":{"gitId":"qyaner"},"content":"| **List Dentists**                       | `list-dentists`                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-07"},{"lineNumber":360,"author":{"gitId":"qyaner"},"content":"| **Search Dentist by Dentist ID**        | `search-dentist DENTIST_ID` \u003cbr\u003e e.g., `search-dentist 2`                                                                                                                                                                         |","lastModifiedDate":"2023-10-10"},{"lineNumber":361,"author":{"gitId":"qyaner"},"content":"| **Search Dentist by Name**              | `search-dentist NAME` \u003cbr\u003e e.g., `search-dentist Tom`                                                                                                                                                                             |","lastModifiedDate":"2023-10-10"},{"lineNumber":362,"author":{"gitId":"ruth-lim"},"content":"| **Add Patient**                         | `add-patient n/NAME p/PHONE e/EMAIL b/BIRTHDATE g/GENDER a/APPOINTMENT s/SERVICE h/ADDRESS` \u003cbr\u003e e.g., `add-patient n/John Tan p/90676622 e/johntan@gmail.com b/06-06-1998 g/M a/10-08-2023 s/Cleaning h/60 Jalan Kempinski Road` |","lastModifiedDate":"2023-10-08"},{"lineNumber":363,"author":{"gitId":"ruth-lim"},"content":"| **Delete Patient**                      | `delete-patient PATIENT_ID`\u003cbr\u003e e.g., `delete-patient 3`                                                                                                                                                                          |","lastModifiedDate":"2023-10-08"},{"lineNumber":364,"author":{"gitId":"qyaner"},"content":"| **List Patients**                       | `list-patients`                                                                                                                                                                                                                   |","lastModifiedDate":"2023-10-07"},{"lineNumber":365,"author":{"gitId":"qyaner"},"content":"| **Search Patient by Patient ID**        | `search-patient PATIENT_ID`  \u003cbr\u003e e.g., `search-patient 3`                                                                                                                                                                        |","lastModifiedDate":"2023-10-10"},{"lineNumber":366,"author":{"gitId":"qyaner"},"content":"| **Search Patient by Name**              | `search-patient NAME` \u003cbr\u003e e.g., `search-patient John`                                                                                                                                                                            |","lastModifiedDate":"2023-10-10"},{"lineNumber":367,"author":{"gitId":"qyaner"},"content":"| **Add a Treatment**                     | `add-treatment [NAME] [PRICE]` \u003cbr\u003e e.g., `add-treatment \"Tooth Extraction\" 150`                                                                                                                                                  |","lastModifiedDate":"2023-10-10"},{"lineNumber":368,"author":{"gitId":"qyaner"},"content":"| **Filter Appointments by Service Type** | `filter s/SERVICE_TYPE` \u003cbr\u003e e.g., `filter s/Tooth Extraction`                                                                                                                                                                    |","lastModifiedDate":"2023-10-10"},{"lineNumber":369,"author":{"gitId":"qyaner"},"content":"| **Filter Appointments by Date**         | `filter t/DATE` \u003cbr\u003e e.g., `filter t/20-11-2023`                                                                                                                                                                                  |","lastModifiedDate":"2023-10-10"},{"lineNumber":370,"author":{"gitId":"qyaner"},"content":"| **Filter Appointments by Dentist**      | `filter d/DENTIST_ID` \u003cbr\u003e e.g., `filter d/Tom`                                                                                                                                                                                   |","lastModifiedDate":"2023-10-10"},{"lineNumber":371,"author":{"gitId":"qyaner"},"content":"| **Clear all Profiles**                  | `clear`                                                                                                                                                                                                                           |","lastModifiedDate":"2023-10-07"},{"lineNumber":372,"author":{"gitId":"ruth-lim"},"content":"| **Exit Programme**                      | `exit`                                                                                                                                                                                                                            |","lastModifiedDate":"2023-10-08"},{"lineNumber":373,"author":{"gitId":"freddychenyouren2"},"content":"| **Help**                                | `help`                                                                                                                                                                                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":375,"author":{"gitId":"freddychenyouren2"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-04"},{"lineNumber":376,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"qyaner":61,"ruth-lim":29,"-":148,"freddychenyouren2":102,"techjay-c":36}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"SynapseProgramming"},"content":"    content: \"ToothTracker\";","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"SynapseProgramming":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ruth-lim"},"content":"title: Tooth Tracker","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ruth-lim"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W10-3/tp/actions)","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"ruth-lim"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W10-3/tp/graph/badge.svg?token\u003dNYCWQITURP)](https://codecov.io/gh/AY2324S1-CS2103T-W10-3/tp)","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ruth-lim"},"content":"ToothTracker is an **All-in-One solution for Effortless Dental Clinic Record Management.**","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"ruth-lim"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ruth-lim"},"content":"* If you are interested in using ToothTracker, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"ruth-lim"},"content":"* If you are interested about developing ToothTracker, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ruth-lim":7,"-":13}},{"path":"docs/team/freddychenyouren2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"title: Freddy Chen You Ren - Project Portfolio","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"### Project: ToothTracker","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"### Overview","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"ToothTracker, an all-in-one solution for Front Desk Dental Clinic Administrative Staff to manage patient and dentist records efficiently.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"You can interact with ToothTracker via a Command Line Interface (CLI)","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"along with a Graphical User Interface (GUI) created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"ToothTracker is written in Java and only Java 11 supports ToothTracker.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"ToothTracker is optimized for fast-typers interacting with it through CLI.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"With ToothTracker, you can add new student and dentist profiles, delete records, and even list all available profiles in the database, all with just a few simple commands!","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"### Summary of my contributions","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"* **New Feature [Coming Soon]**: Added the ability for receptionists to add, delete, and view dentists in the dental clinic.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"  * What it does: The receptionist will be able to add details of a dentist practising in the dental clinic.","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"  * Justification: This feature is a critical backbone of ToothTracker as it is the starting point for more functionalities relating to dentists. The dental clinic must be able to track the dentist profiles to assign suitable dentists to patients.","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"  * Highlights: This enhancement affects dentist commands to be added in the future. It required an in-depth analysis of design such as handling parameters. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"* **New Feature [Coming Soon]**: Added the ability to see the cost of different types of dental treatments.","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"  * [To be added soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"  * [To be added soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    * [Coming Soon] Added documentation for Dentist command feature","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    * [Coming Soon] Added documentation for Dentist command feature","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"  * PRs reviewed (with non-trivial review comments): [To be added soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"  * Contributed to forum discussions: [To be added soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"  * Reported bugs and suggestions for other teams in the class: [To be added soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"  * [To be added soon]","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"### Contributions to User Guide","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"The following section describes my contributions to the User Guide of ToothTracker.","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"These documentations are meant for ToothTracker\u0027s end-users: Front line dental clinic administrative staff","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"freddychenyouren2":52}},{"path":"docs/team/qyaner.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"title: Qin Yan Er\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"### Project: ToothTracker","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"**Overview**","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"ToothTracker is an all-in-one solution designed to revolutionize","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"the management of dental clinic records.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dqyaner\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"        * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"* **Team-based Tasks**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"* **Beyond the project team**:","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    * to be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"qyaner":33}},{"path":"docs/team/ruth-lim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ruth-lim"},"content":"---","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"ruth-lim"},"content":"layout: page","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"ruth-lim"},"content":"title: Ruth Lim\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"ruth-lim"},"content":"---","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"ruth-lim"},"content":"### Project: ToothTracker","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"ruth-lim"},"content":"ToothTracker is an all-in-one solution for front desk administration staff in dental clinics to manage","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"ruth-lim"},"content":"patients/dentists/appointments. It is optimized for CLI users.","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"ruth-lim"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"ruth-lim"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"ruth-lim"},"content":"  * What it does:","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"ruth-lim"},"content":"  * Justification:","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"ruth-lim"},"content":"  * Highlights:","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"ruth-lim"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"ruth-lim"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"ruth-lim"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003druth-lim\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"ruth-lim"},"content":"* **Project management**:","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"ruth-lim"},"content":"  * Managed releases `v` - `v` (3 releases) on GitHub","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"ruth-lim"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"ruth-lim"},"content":"  * to be added soon","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"ruth-lim"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"ruth-lim"},"content":"  * User Guide:","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"ruth-lim"},"content":"    * to be added soon","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"ruth-lim"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"ruth-lim"},"content":"    * to be added soon","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"ruth-lim"},"content":"* **Community**:","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"ruth-lim"},"content":"  * to be added soon","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"ruth-lim"},"content":"* **Tools**:","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"ruth-lim"},"content":"  * to be added soon","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"ruth-lim"},"content":"","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"ruth-lim":40}},{"path":"docs/team/synapseprogramming.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"title: Roald Ong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"### Project: ToothTracker","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"ToothTracker helps front desk administration staff in dental clinics manage","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"patients/dentists/appointments. It is optimized for CLI users.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"    * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"      * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"        * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"    * to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"SynapseProgramming":38}},{"path":"docs/team/techjay-c.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"layout: page","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"title: Jaryl Chew\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"---","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"### Project: ToothTracker","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"ToothTracker is a simple to use, all-in-one application that allows front desk administration staff to easily manage a","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"clinic. Manage patients, dentists and increase the efficiency of operations, all in one place.","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":"* **New Feature**: Added the ability to","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"    * What it does:","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"    * Justification:","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"* **Project management**:","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    * Managed releases `v` - `v` ( releases) on GitHub","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"    * Updated (Pull requests [\\#](), [\\#]())","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"    * Wrote  [\\#](), [\\#]())","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"    * User Guide:","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"        * Added documentation for the features `add`, `list`, `delete` and `search` [\\#]()","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"        * Did cosmetic tweaks to existing documentation of features ``, ``: [\\#]()","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"        * Added implementation details of the `` feature.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"* **Community**:","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#](), [\\#](), [\\#](), [\\#]()","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"    * Contributed to forum discussions (examples: [](), [](), [](), []())","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [](), [](), []())","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([](), []())","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"* **Tools**:","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"    * Integrated","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"techjay-c":44}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":" * Provides the users with guiding messages in ToothTracker.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"public class Messages {","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"OOPS! You have entered an unknown command \"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"            + \"and I don\u0027t understand it. Please double check your commands!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_INVALID_DENTIST_DISPLAYED_INDEX \u003d \"The dentist index provided is invalid!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_DENTISTS_LISTED \u003d \"%1$d dentist(s) listed!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_PATIENTS_LISTED \u003d \"%1$d patient(s) listed!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"freddychenyouren2":15}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    /** Returns an unmodifiable view of the filtered list of dentists */","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    ObservableList\u003cDentist\u003e getFilteredDentistList();","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SynapseProgramming":3,"qyaner":3,"-":51,"freddychenyouren2":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"            throw new CommandException(","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"    public ObservableList\u003cDentist\u003e getFilteredDentistList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"        return model.getFilteredDentistList();","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SynapseProgramming":8,"qyaner":6,"-":87,"freddychenyouren2":7}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"     * Formats the {@code patient} for display to the user.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"    public static String format(Patient person) {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"        builder.append(person.getName())","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getPhone())","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; BirthDate: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getBirthdate())","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Gender: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getGender())","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Appointment: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getAppointmentdate())","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Service: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getService())","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getAddress())","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"            .append(person.getEmail())","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"            .append(\"; Tags: \");","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"     * Formats the given appointment as a string.","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"     * The string format includes information about the dentist, patient, appointment start time, and duration.","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"     * @param appointment The appointment to be formatted.","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"     * @return A formatted string representation of the appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"     * @throws NullPointerException if the appointment is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"    public static String format(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"qyaner"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"        builder.append(\"; Dentist: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"                .append(appointment.getDentist())","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"                .append(\"; Patient: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"                .append(appointment.getPatient())","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"                .append(\"; Appointment: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"                .append(appointment.getAppointmentTime().startToString())","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"                .append(\"; Duration: \")","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"                .append(appointment.getAppointmentTime().durationToString());","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SynapseProgramming":26,"qyaner":22,"-":51,"techjay-c":1}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DENTIST;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":" * Adds an appointment to ToothTracker.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"    public static final String COMMAND_WORD \u003d \"add-appointment\";","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to ToothTracker. \"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"            + PREFIX_DENTIST + \"DENTIST \"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"            + PREFIX_PATIENT + \"PATIENT \"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"            + PREFIX_START + \"START_TIME \"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"            + PREFIX_DURATION + \"DURATION \"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"            + PREFIX_SERVICE + \"SERVICE \\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"            + PREFIX_DENTIST + \"TOM \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"            + PREFIX_PATIENT + \"JOHN \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"            + PREFIX_START + \"2023-10-12 16:00 \"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"            + PREFIX_DURATION + \"PT1H30M \"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"            + PREFIX_SERVICE + \"Braces\";","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Appointment added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"    public static final String MESSAGE_CLASHING_APPOINTMENTS \u003d \"This Appointment clashes with a current one\";","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"     * Constructs an AddAppointmentCommand with the specified appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"     * @param appointment The appointment to be added.","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"     * Executes the command to add the appointment to the model.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"     * @param model The model in which the appointment is to be added.","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"     * @throws CommandException If the appointment clashes with an existing one.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"            throw new CommandException(MESSAGE_CLASHING_APPOINTMENTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":69}},{"path":"src/main/java/seedu/address/logic/commands/AddDentistCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALIZATION;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * Adds a dentist to ToothTracker address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"public class AddDentistCommand extends Command {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String COMMAND_WORD \u003d \"add-dentist\";","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String SHORTHAND_COMMAND_WORD \u003d \"ad\";","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" (short form: \" + SHORTHAND_COMMAND_WORD + \")\"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"            + \": Adds a dentist to the address book. \"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_SPECIALIZATION + \"SPECIALIZATION \"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_YOE + \"YEARS OF EXPERIENCE \"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_ADDRESS + \"My Dental Clinics Serangoon Road S123456 \"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_SPECIALIZATION + \"Orthodontics \"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_YOE + \"5 \"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"            + PREFIX_TAG + \"Braces\";","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"New dentist added: %1$s\";","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String MESSAGE_DUPLICATE_DENTIST \u003d \"This dentist already exists in ToothTracker address book!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"    private final Dentist toAdd;","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"     * Creates an AddDentistCommand to add the specified {@code Dentist}","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"    public AddDentistCommand(Dentist dentist) {","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(dentist);","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        toAdd \u003d dentist;","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"        if (model.hasDentist(toAdd)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DENTIST);","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"        model.addDentist(toAdd);","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"                toAdd);","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"    public static String getCommandUsage() {","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"        return MESSAGE_USAGE;","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"    public static String getMessageSuccess() {","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"        return MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"    public static String getMessageDuplicateDoctor() {","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"        return MESSAGE_DUPLICATE_DENTIST;","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"                || (other instanceof AddDentistCommand // instanceof handles nulls","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 toAdd.equals(((AddDentistCommand) other).toAdd));","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"freddychenyouren2":86}},{"path":"src/main/java/seedu/address/logic/commands/AddPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"public class AddPatientCommand extends Command {","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String COMMAND_WORD \u003d \"add-patient\";","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_BIRTHDATE + \"BIRTHDATE \"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_APPOINTMENT + \"APPOINTMENT \"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_SERVICE + \"SERVICE \"","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_PHONE + \"90676622 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_BIRTHDATE + \"06-06-1998 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_APPOINTMENT + \"10-08-2023 \"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_SERVICE + \"Cleaning \"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_EMAIL + \"johntan@gmail.com \"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_ADDRESS + \"60 Jalan Road \"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            + PREFIX_TAG + \"hello \";","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Patient added: %1$s\";","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This Patient already exists in ToothTracker\";","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    public AddPatientCommand(Patient patient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof AddPatientCommand)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"SynapseProgramming"},"content":"        AddPatientCommand otherAddCommand \u003d (AddPatientCommand) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"SynapseProgramming"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"            .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":96}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    /** This command interacts directly with the GUI. Default value is {@code false}. */","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"    private boolean hasGuiInteraction \u003d false;","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    /** Dentist selected by user. This value can be null. */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    private Dentist selectedDentist \u003d null;","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a {@code CommandResult} with selected dentist.","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"    public CommandResult(String feedbackToUser,","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"                         Dentist selectedDentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"        this.selectedDentist \u003d requireNonNull(selectedDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        this.hasGuiInteraction \u003d true;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean hasGuiInteraction() {","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"        return this.hasGuiInteraction;","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"    public Optional\u003cDentist\u003e getSelectedDentist() {","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"        return Optional.ofNullable(selectedDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 hasGuiInteraction \u003d\u003d otherCommandResult.hasGuiInteraction;","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, hasGuiInteraction);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"                .add(\"hasGuiInteraction\", hasGuiInteraction)","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":80,"freddychenyouren2":32}},{"path":"src/main/java/seedu/address/logic/commands/SearchPatientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":" * Represents a command to search for patients whose names contain specified keywords.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":" * The search is case-insensitive, and the matching patients are displayed as a list","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":" * with index numbers.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"public class SearchPatientCommand extends Command {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"    public static final String COMMAND_WORD \u003d \"search-patient\";","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all dentists whose names contain any of \"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"        + \"Example: \" + COMMAND_WORD + \" John Tan\";","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"     * Constructs a SearchPatientCommand with the specified predicate.","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"     * @param predicate The predicate used for searching patients.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"    public SearchPatientCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"techjay-c"},"content":"     * Executes the search operation on the provided model.","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"techjay-c"},"content":"     * @param model The model containing the patient data.","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"techjay-c"},"content":"     * @return A CommandResult containing the search result message.","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"techjay-c"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"techjay-c"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"techjay-c"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"techjay-c"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"techjay-c"},"content":"            String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"techjay-c"},"content":"     * Checks if this SearchPatientCommand is equal to another object.","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"techjay-c"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"techjay-c"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"techjay-c"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"techjay-c"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"techjay-c"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"techjay-c"},"content":"        if (!(other instanceof SearchPatientCommand)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"techjay-c"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"techjay-c"},"content":"        SearchPatientCommand otherSearchPatientCommand \u003d (SearchPatientCommand) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"techjay-c"},"content":"        return predicate.equals(otherSearchPatientCommand.predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"techjay-c"},"content":"     * Returns a string representation of this SearchPatientCommand.","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"     * @return A string containing information about the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"techjay-c"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"techjay-c"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"techjay-c"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"            .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"            .toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"techjay-c":81}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DENTIST;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.AppointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"     * Parses the given {@code args} of arguments into an AddAppointmentCommand.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"     * @param args User input string.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"     * @return The parsed AddAppointmentCommand.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DENTIST, PREFIX_PATIENT, PREFIX_START,","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"                        PREFIX_DURATION, PREFIX_SERVICE);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DENTIST, PREFIX_PATIENT, PREFIX_START,","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"                PREFIX_DURATION, PREFIX_SERVICE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        String dentist \u003d argMultimap.getValue(PREFIX_DENTIST).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"        String patient \u003d argMultimap.getValue(PREFIX_PATIENT).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"        String start \u003d argMultimap.getValue(PREFIX_START).get();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"        String[] parts \u003d start.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"        String startParsed \u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"        if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"            startParsed \u003d parts[0] + \"T\" + parts[1];","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"            throw new ParseException(\"Please enter start time in correct format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"        String duration \u003d argMultimap.getValue(PREFIX_DURATION).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        AppointmentTime appointmentTime \u003d ParserUtil.parseAppointmentTime(startParsed, duration);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"        String treatment \u003d argMultimap.getValue(PREFIX_SERVICE).get();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"        Appointment appointment \u003d new Appointment(dentist, patient, appointmentTime, duration, treatment);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"     * Checks if all the specified prefixes are present in the given {@code argumentMultimap}.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"     * @param argumentMultimap The argumentMultimap to check.","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"     * @param prefixes The prefixes to check for presence.","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"     * @return True if all specified prefixes are present, false otherwise.","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"                                              Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"        return Stream.of(prefixes)","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"                .allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":69}},{"path":"src/main/java/seedu/address/logic/parser/AddDentistCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIALIZATION;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_YOE;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.logic.commands.AddDentistCommand;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Yoe;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"public class AddDentistCommandParser implements Parser\u003cAddDentistCommand\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDentistCommand","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"     * and returns an AddDentistCommand object for execution.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    public AddDentistCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"                        PREFIX_SPECIALIZATION, PREFIX_YOE, PREFIX_TAG);","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"                PREFIX_SPECIALIZATION, PREFIX_YOE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"                    AddDentistCommand.getCommandUsage()));","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        Specialization specialty \u003d ParserUtil.parseSpecialization(argMultimap.getValue(PREFIX_SPECIALIZATION).get());","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"        Yoe yoe \u003d ParserUtil.parseYoe(argMultimap.getValue(PREFIX_YOE).get());","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        Dentist dentist \u003d new Dentist(name, phone, email, address, specialty, yoe, tags);","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"        return new AddDentistCommand(dentist);","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"freddychenyouren2":69}},{"path":"src/main/java/seedu/address/logic/parser/AddPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SERVICE;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Service;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"public class AddPatientCommandParser implements Parser\u003cAddPatientCommand\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand and returns an","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"     * AddCommand object for execution.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    public AddPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_BIRTHDATE,","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"                PREFIX_GENDER, PREFIX_APPOINTMENT, PREFIX_SERVICE, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"                PREFIX_TAG);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_BIRTHDATE,","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            PREFIX_GENDER, PREFIX_APPOINTMENT, PREFIX_SERVICE, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"            PREFIX_TAG)","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_BIRTHDATE,","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"            PREFIX_GENDER, PREFIX_APPOINTMENT, PREFIX_SERVICE, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"            PREFIX_TAG);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"        Birthdate birthdate \u003d ParserUtil.parseBirthdate(","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"            argMultimap.getValue(PREFIX_BIRTHDATE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"        AppointmentDate appointmentdate \u003d ParserUtil.parseAppointment(","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"            argMultimap.getValue(PREFIX_APPOINTMENT).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"        Service service \u003d ParserUtil.parseService(argMultimap.getValue(PREFIX_SERVICE).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"        Patient patient \u003d new Patient(name, phone, birthdate, gender, appointmentdate, service,","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"            address, email, tagList);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"        return new AddPatientCommand(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"        Prefix... prefixes) {","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"        return Stream.of(prefixes)","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"            .allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":87}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.logic.commands.AddDentistCommand;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"import seedu.address.logic.commands.AddPatientCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"import seedu.address.logic.commands.SearchPatientCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"        \"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        case AddDentistCommand.SHORTHAND_COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"        case AddDentistCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            return new AddDentistCommandParser().parse(arguments);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"techjay-c"},"content":"        case SearchPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"techjay-c"},"content":"            return new SearchPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"SynapseProgramming"},"content":"        case AddPatientCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"            return new AddPatientCommandParser().parse(arguments);","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SynapseProgramming":7,"qyaner":5,"-":81,"freddychenyouren2":5,"techjay-c":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"    // Commands for both patients and dentists.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"h/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"    public static final Prefix PREFIX_BIRTHDATE \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"    public static final Prefix PREFIX_SERVICE \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    // Commands for dentists only","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"    public static final Prefix PREFIX_DENTIST \u003d new Prefix(\"dentist/\");","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    public static final Prefix PREFIX_SPECIALIZATION \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"    public static final Prefix PREFIX_YOE \u003d new Prefix(\"y/\");","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    // Commands for patients only","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    public static final Prefix PREFIX_PATIENT \u003d new Prefix(\"patient/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"duration/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"start/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SynapseProgramming":5,"qyaner":4,"-":15,"freddychenyouren2":9}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.AppointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Service;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Yoe;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"     * Parses a {@code String birthdate} into an {@code birthdate}.","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws ParseException if the given {@code Birthdate} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"SynapseProgramming"},"content":"    public static Birthdate parseBirthdate(String birthdate) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"SynapseProgramming"},"content":"        String trimmedbirthdate \u003d birthdate.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Birthdate.isValidDate(trimmedbirthdate)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"SynapseProgramming"},"content":"            throw new ParseException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"SynapseProgramming"},"content":"        return new Birthdate(trimmedbirthdate);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"SynapseProgramming"},"content":"     * Parses a {@code String gender} into an {@code gender}.","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"SynapseProgramming"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws ParseException if the given {@code Gender} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"SynapseProgramming"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"SynapseProgramming"},"content":"        String trimmedgender \u003d gender.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Gender.isValidGender(trimmedgender)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"SynapseProgramming"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"SynapseProgramming"},"content":"        return new Gender(trimmedgender);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"SynapseProgramming"},"content":"     * Parses a {@code String Appointment} into an {@code Appointment}.","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"SynapseProgramming"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws ParseException if the given {@code Appointment} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"SynapseProgramming"},"content":"    public static AppointmentDate parseAppointment(String appointment) throws ParseException {","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"SynapseProgramming"},"content":"        String trimmedAppointment \u003d appointment.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"SynapseProgramming"},"content":"        if (!AppointmentDate.isValidDate(trimmedAppointment)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"SynapseProgramming"},"content":"            throw new ParseException(AppointmentDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"SynapseProgramming"},"content":"        return new AppointmentDate(trimmedAppointment);","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"qyaner"},"content":"     * Parses the given start time and duration strings to create an AppointmentTime object.","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"qyaner"},"content":"     * @param startTime The string representation of the appointment start time.","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"qyaner"},"content":"     * @param duration  The string representation of the appointment duration.","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"qyaner"},"content":"     * @return An AppointmentTime object representing the parsed start time and duration.","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"qyaner"},"content":"     * @throws ParseException if the start time or duration is in an invalid format.","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"qyaner"},"content":"     * @throws NullPointerException if either startTime or duration is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"qyaner"},"content":"    public static AppointmentTime parseAppointmentTime(String startTime, String duration) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"qyaner"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"qyaner"},"content":"        requireNonNull(duration);","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"qyaner"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"qyaner"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"qyaner"},"content":"        if (!AppointmentDate.isValidDate(trimmedStartTime)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"qyaner"},"content":"            throw new ParseException(AppointmentDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"qyaner"},"content":"        return new AppointmentTime(trimmedStartTime, trimmedDuration);","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":156,"author":{"gitId":"SynapseProgramming"},"content":"     * Parses a {@code String service} into an {@code Service}.","lastModifiedDate":"2023-10-07"},{"lineNumber":157,"author":{"gitId":"SynapseProgramming"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws ParseException if the given {@code Service} is invalid.","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"SynapseProgramming"},"content":"    public static Service parseService(String service) throws ParseException {","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(service);","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"SynapseProgramming"},"content":"        String trimmedService \u003d service.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Service.isValidService(trimmedService)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"SynapseProgramming"},"content":"            throw new ParseException(AppointmentDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"SynapseProgramming"},"content":"        return new Service(trimmedService);","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"freddychenyouren2"},"content":"    // Parse Methods for Dentists","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":215,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":216,"author":{"gitId":"freddychenyouren2"},"content":"     * Parses a {@code String specialization} into an {@code Specialization}.","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"freddychenyouren2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws ParseException if the given {@code specialization} is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":220,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":221,"author":{"gitId":"freddychenyouren2"},"content":"    public static Specialization parseSpecialization(String specialization) throws ParseException {","lastModifiedDate":"2023-10-05"},{"lineNumber":222,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(specialization);","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"freddychenyouren2"},"content":"        String trimmedSpecialization \u003d specialization.trim();","lastModifiedDate":"2023-10-05"},{"lineNumber":224,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Specialization.isValidSpecialization(trimmedSpecialization)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"freddychenyouren2"},"content":"            throw new ParseException(Specialization.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-05"},{"lineNumber":226,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"freddychenyouren2"},"content":"        return new Specialization(trimmedSpecialization);","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":229,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":231,"author":{"gitId":"freddychenyouren2"},"content":"     * Parses a {@code String yoe} into an {@code String}.","lastModifiedDate":"2023-10-05"},{"lineNumber":232,"author":{"gitId":"freddychenyouren2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-05"},{"lineNumber":233,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws ParseException if the given {@code yoe} is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"freddychenyouren2"},"content":"    public static Yoe parseYoe(String yoe) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":237,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(yoe);","lastModifiedDate":"2023-10-05"},{"lineNumber":238,"author":{"gitId":"freddychenyouren2"},"content":"        String trimmedYoe \u003d yoe.trim();","lastModifiedDate":"2023-10-05"},{"lineNumber":239,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":240,"author":{"gitId":"freddychenyouren2"},"content":"        // The following code is used if yoe becomes a custom class.","lastModifiedDate":"2023-10-10"},{"lineNumber":241,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Yoe.isValidYoe(trimmedYoe)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":242,"author":{"gitId":"freddychenyouren2"},"content":"            throw new ParseException(Yoe.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":243,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":244,"author":{"gitId":"freddychenyouren2"},"content":"        return new Yoe(trimmedYoe);","lastModifiedDate":"2023-10-10"},{"lineNumber":245,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SynapseProgramming":65,"qyaner":21,"-":124,"freddychenyouren2":36}},{"path":"src/main/java/seedu/address/logic/parser/SearchPatientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"techjay-c"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"techjay-c"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"techjay-c"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"techjay-c"},"content":"import seedu.address.logic.commands.SearchPatientCommand;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"techjay-c"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"techjay-c"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"techjay-c"},"content":" * Parses input arguments and creates a new SearchDentistCommand object","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"techjay-c"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"techjay-c"},"content":"public class SearchPatientCommandParser implements Parser\u003cSearchPatientCommand\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"techjay-c"},"content":"     * Parses the given {@code String} of arguments in the context of the SearchDentistCommand","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"     * and returns a SearchDentistCommand object for execution.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    public SearchPatientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"techjay-c"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"techjay-c"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"techjay-c"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchPatientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"techjay-c"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"techjay-c"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"techjay-c"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"techjay-c"},"content":"        return new SearchPatientCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"techjay-c"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"techjay-c"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"techjay-c":33}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.UniqueAppointmentList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.UniquePatientList;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.UniqueDentistList;","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":" * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":" * comparison)","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    private final UniqueDentistList dentists;","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"    private long patientId;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"        dentists \u003d new UniqueDentistList();","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    // ID operations","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"    public void setPatientId(long id) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"        patientId \u003d id;","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"    public long getPatientId() {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"        return patientId;","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"    public void incrementPatientId() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"        patientId \u003d patientId + 1;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"     * Replaces the contents of the person list with {@code persons}. {@code persons} must not","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"     * contain duplicate persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"     * Replaces the contents of the patients list with {@code persons}. {@code persons} must not","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"     * contain duplicate persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"SynapseProgramming"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"SynapseProgramming"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"     * Replaces the contents of the dentist list with {@code dentists}. {@code dentists} must not","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"     * contain duplicate dentists.","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"    public void setDentists(List\u003cDentist\u003e dentists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"        this.dentists.setDentists(dentists);","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":109,"author":{"gitId":"SynapseProgramming"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"        setDentists(newData.getDentistList());","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"qyaner"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"SynapseProgramming"},"content":"        setPatientId(newData.getPatientId());","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"SynapseProgramming"},"content":"     * book.","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"SynapseProgramming"},"content":"     * book.","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"SynapseProgramming"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"SynapseProgramming"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a dentist with the same identity as {@code dentist} exists in the address","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"SynapseProgramming"},"content":"     * book.","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean hasDentist(Dentist dentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"        return dentists.contains(dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"qyaner"},"content":"     * Returns true if the internal list of appointments contains the specified appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"qyaner"},"content":"     * @param appointment The appointment to check for existence.","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"qyaner"},"content":"     * @return True if the appointment is found in the list, false otherwise.","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"qyaner"},"content":"     * @throws NullPointerException if the given appointment is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"qyaner"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"qyaner"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"qyaner"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"SynapseProgramming"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"SynapseProgramming"},"content":"     * Adds a patient to the address book. The patient must not already exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"SynapseProgramming"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"SynapseProgramming"},"content":"        if (p.getId() \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"SynapseProgramming"},"content":"            p.setId(patientId);","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"SynapseProgramming"},"content":"            patients.add(p);","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"SynapseProgramming"},"content":"            incrementPatientId();","lastModifiedDate":"2023-10-13"},{"lineNumber":172,"author":{"gitId":"SynapseProgramming"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"SynapseProgramming"},"content":"            patients.add(p);","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"SynapseProgramming"},"content":"     * Adds a dentist to the address book. The dentist must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"     * @param dentist to be added to the address book","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"    public void addDentist(Dentist dentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"        dentists.add(dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":185,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"qyaner"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"qyaner"},"content":"        appointments.add(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":188,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":189,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code target} must exist in the address book. The person identity of {@code editedPerson}","lastModifiedDate":"2023-10-07"},{"lineNumber":193,"author":{"gitId":"SynapseProgramming"},"content":"     * must not be the same as another existing person in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"SynapseProgramming"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-10-07"},{"lineNumber":203,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code target} must exist in the address book. The person identity of {@code editedPerson}","lastModifiedDate":"2023-10-07"},{"lineNumber":204,"author":{"gitId":"SynapseProgramming"},"content":"     * must not be the same as another existing person in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":205,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":206,"author":{"gitId":"SynapseProgramming"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":207,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-10-07"},{"lineNumber":208,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":209,"author":{"gitId":"SynapseProgramming"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2023-10-07"},{"lineNumber":210,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":211,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":212,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":213,"author":{"gitId":"SynapseProgramming"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"SynapseProgramming"},"content":"     * book. Replaces the given dentist {@code target} in the list with {@code editedDentist}.","lastModifiedDate":"2023-10-13"},{"lineNumber":215,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code target} must exist in the address book. The person identity of {@code editedDentist}","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"SynapseProgramming"},"content":"     * must not be the same as another existing person in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":218,"author":{"gitId":"freddychenyouren2"},"content":"    public void setDentist(Dentist target, Dentist editedDentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":219,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(editedDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":220,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":221,"author":{"gitId":"freddychenyouren2"},"content":"        dentists.setDentist(target, editedDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":222,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":223,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":224,"author":{"gitId":"freddychenyouren2"},"content":"    public Dentist getDentist(int targetIndex) {","lastModifiedDate":"2023-10-06"},{"lineNumber":225,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":226,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":227,"author":{"gitId":"freddychenyouren2"},"content":"        return dentists.getDentist(targetIndex);","lastModifiedDate":"2023-10-06"},{"lineNumber":228,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":229,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":231,"author":{"gitId":"SynapseProgramming"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address","lastModifiedDate":"2023-10-13"},{"lineNumber":232,"author":{"gitId":"SynapseProgramming"},"content":"     * book.","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":239,"author":{"gitId":"SynapseProgramming"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address","lastModifiedDate":"2023-10-07"},{"lineNumber":240,"author":{"gitId":"SynapseProgramming"},"content":"     * book.","lastModifiedDate":"2023-10-07"},{"lineNumber":241,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":242,"author":{"gitId":"SynapseProgramming"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-10-07"},{"lineNumber":243,"author":{"gitId":"SynapseProgramming"},"content":"        patients.remove(key);","lastModifiedDate":"2023-10-07"},{"lineNumber":244,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":245,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"patients\", patients)","lastModifiedDate":"2023-10-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":261,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":262,"author":{"gitId":"SynapseProgramming"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":263,"author":{"gitId":"SynapseProgramming"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-07"},{"lineNumber":264,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":266,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":267,"author":{"gitId":"freddychenyouren2"},"content":"    public ObservableList\u003cDentist\u003e getDentistList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":268,"author":{"gitId":"freddychenyouren2"},"content":"        return dentists.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-06"},{"lineNumber":269,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":270,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":271,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"qyaner"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"qyaner"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"freddychenyouren2"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2023-10-06"},{"lineNumber":289,"author":{"gitId":"freddychenyouren2"},"content":"            \u0026\u0026 dentists.equals(otherAddressBook.dentists);","lastModifiedDate":"2023-10-06"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SynapseProgramming":102,"qyaner":30,"-":121,"freddychenyouren2":43}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"techjay-c"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"techjay-c"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"techjay-c"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"techjay-c"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if a person with the same identity as {@code person} exists in ToothTracker address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a patient with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"    boolean hasPatient(Patient person);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if a dentist with the same identity as {@code dentist} exists in ToothTracker address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"    boolean hasDentist(Dentist dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"     * {@code person} must not already exist in ToothTracker address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"     * Adds the given Patient.","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code Patient} must not already exist in the address book.","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"SynapseProgramming"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"     * Adds the given dentist.","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"     * {@code dentist} must not already exist in ToothTracker address book.","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"    void addDentist(Dentist dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"qyaner"},"content":"     * Adds the given appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"qyaner"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"techjay-c"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"techjay-c"},"content":"     * Returns an unmodifiable view of the filtered patient list","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"SynapseProgramming"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"techjay-c"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"techjay-c"},"content":"     * Returns an unmodifiable view of the filtered dentist list","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"    ObservableList\u003cDentist\u003e getFilteredDentistList();","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"qyaner"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"     * Updates the filter of the filtered dentist list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"techjay-c"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"techjay-c"},"content":"    void updateFilteredPatientList(NameContainsKeywordsPredicate predicate);","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SynapseProgramming":19,"qyaner":10,"-":82,"freddychenyouren2":17,"techjay-c":20}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"techjay-c"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    private final FilteredList\u003cDentist\u003e filteredDentists;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"        logger.fine(","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"            \"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        filteredDentists \u003d new FilteredList\u003c\u003e(this.addressBook.getDentistList());","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentList());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"SynapseProgramming"},"content":"        return addressBook.hasPatient(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean hasDentist(Dentist dentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"        return addressBook.hasDentist(dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"qyaner"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"qyaner"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"qyaner"},"content":"        return addressBook.hasAppointment(appointment);","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"SynapseProgramming"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"SynapseProgramming"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"    public void addDentist(Dentist dentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"        addressBook.addDentist(dentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"qyaner"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"qyaner"},"content":"        addressBook.addAppointment(appointment);","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"SynapseProgramming"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"SynapseProgramming"},"content":"        return filteredPatients;","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":178,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"    public ObservableList\u003cDentist\u003e getFilteredDentistList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"        return filteredDentists;","lastModifiedDate":"2023-10-06"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":184,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"qyaner"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"qyaner"},"content":"        return filteredAppointments;","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":196,"author":{"gitId":"techjay-c"},"content":"    public void updateFilteredPatientList(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":197,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"SynapseProgramming"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-10-07"},{"lineNumber":199,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":200,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-07"},{"lineNumber":216,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 filteredPatients.equals(otherModelManager.filteredPatients);","lastModifiedDate":"2023-10-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SynapseProgramming":33,"qyaner":19,"-":146,"freddychenyouren2":19,"techjay-c":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns an unmodifiable view of the patients list.","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns an unmodifiable view of the dentists list.","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"     * This list will not contain any duplicate dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    ObservableList\u003cDentist\u003e getDentistList();","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns an integer which represents the next available patient id","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"    long getPatientId();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SynapseProgramming":9,"qyaner":4,"-":17,"freddychenyouren2":9}},{"path":"src/main/java/seedu/address/model/appointments/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.model.appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":" * Represents an Appointment in ToothTracker.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"public class Appointment {","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"    private final String dentist;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"    private final String patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"    private final AppointmentTime appointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"    private final String duration;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"    private final String treatment;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"     * Constructs an Appointment with the specified details.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"     * @param dentist The name of the dentist for the appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     * @param patient The name of the patient for the appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"     * @param appointmentTime The time and date of the appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"     * @param duration The duration of the appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     * @param treatment The treatment provided.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    public Appointment(String dentist, String patient, AppointmentTime appointmentTime,","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"                       String duration, String treatment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        this.dentist \u003d dentist;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"        this.treatment \u003d treatment;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    public String getDentist() {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"        return this.dentist;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    public String getPatient() {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        return this.patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"    public String getDuration() {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        return this.duration;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    public AppointmentTime getAppointmentTime() {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"        return this.appointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"    public String getTreatment() {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"        return this.treatment;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"     * Checks whether this appointment clashes with another.","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"     * @param appointment The other appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"     * @return true if this appointment clashes with another","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"     *         false if it does not clash with another appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"    public boolean isSameAppointmentTime(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"        return this.appointmentTime.isClashingAppointment(appointment.getAppointmentTime());","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":61}},{"path":"src/main/java/seedu/address/model/appointments/AppointmentTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.model.appointments;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import java.time.Duration;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":" * Represents the date and time of an appointment in ToothTracker.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":" * Provides methods for manipulation and validation of appointment times.","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"public class AppointmentTime {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"    private Duration duration;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"     * Constructs an AppointmentTime object with the specified start time and duration.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"     * @param start The start time of the appointment in string format.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"     * @param duration The duration of the appointment in string format.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    public AppointmentTime(String start, String duration) {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"        this.start \u003d LocalDateTime.parse(start);","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"        this.duration \u003d Duration.parse(duration);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"        return this.start;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    public Duration getDuration() {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"        return this.duration;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        return this.start.plus(duration);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"     * Checks whether this appointment clashes with another.","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"     * @param other The other appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"     * @return true if this appointment clashes with another","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"     *         false if it does not clash with another appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"    public boolean isClashingAppointment(AppointmentTime other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"        LocalDateTime otherStartTime \u003d other.getStart();","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        LocalDateTime otherEndTime \u003d other.getEnd();","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"        return ((this.getStart().isBefore(otherEndTime))","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"                \u0026\u0026 (this.getStart().isAfter(otherStartTime)))","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"                || (otherStartTime.isEqual(this.getStart()))","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"                || ((this.getEnd().isBefore(otherEndTime))","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"                        \u0026\u0026 (this.getEnd().isAfter(otherStartTime)));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"    public String startToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"        return this.start.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"    public String durationToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"        return this.duration.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"    public String endTimeToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"        return getEnd().toLocalTime().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"    public String startTimeToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"        return this.start.toLocalTime().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"    public String dateToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"        return this.start.toLocalDate().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"    public String appointmentTimeToString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"        return startTimeToString() + \" - \" + endTimeToString();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"qyaner":87}},{"path":"src/main/java/seedu/address/model/appointments/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.model.appointments;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":" * A unique appointment is determined by {@link Appointment#isSameAppointmentTime(Appointment)}.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":" *","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":" * @see Appointment#isSameAppointmentTime(Appointment)","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"     * @param toAdd The appointment to add.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"     * @throws NullPointerException if the appointment is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"     * Sets the appointments in the list with another list of appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"     * @param appointments List of appointments to set.","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"     * @throws NullPointerException if the list of appointments is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"     * Returns an unmodifiable view of the list of appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"     * @return Unmodifiable view of the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"     * Checks if the list contains the specified appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"     * @param toCheck The appointment to check.","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"     * @return True if the list contains the appointment, false otherwise.","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"     * @throws NullPointerException if the appointment to check is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointmentTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"     * Returns an iterator over the elements in this list in proper sequence.","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"     * @return An iterator.","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"     * Indicates whether some other object is \"equal to\" this one.","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"     * @param other The object to compare.","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"     * @return True if equal, false otherwise.","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"qyaner"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"qyaner"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"qyaner"},"content":"        if (!(other instanceof UniqueAppointmentList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"        UniqueAppointmentList otherUniqueAppointmentList \u003d (UniqueAppointmentList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"        return internalList.equals(otherUniqueAppointmentList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"qyaner"},"content":"     * Returns a hash code value for the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"qyaner"},"content":"     * @return The hash code.","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"qyaner"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"qyaner"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"qyaner"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"qyaner"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"qyaner"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":115}},{"path":"src/main/java/seedu/address/model/person/AppointmentDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":" * Represents a Date in the address book. Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":" * {@link #isValidDate(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"public class AppointmentDate {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Appointment date should be in the following format: dd-mm-yy\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"     * Constructs a {@code Appointmentdate}.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"     * @param date A valid date","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public AppointmentDate(String date) {","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"        value \u003d date;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a given string is valid","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof AppointmentDate)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        AppointmentDate otherBirthdate \u003d (AppointmentDate) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"        return value.equals(otherBirthdate.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":65}},{"path":"src/main/java/seedu/address/model/person/Birthdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":" * Represents a Date in the address book. Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":" * {@link #isValidDate(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"public class Birthdate {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birthday should be in the following format: dd-mm-yy\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"     * Constructs a {@code Birthdate}.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"     * @param date A valid date","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public Birthdate(String date) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"        value \u003d date;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a given string is a valid date","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof Birthdate)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        Birthdate otherBirthdate \u003d (Birthdate) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"        return value.equals(otherBirthdate.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":65}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":" * Represents a Date in the address book. Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":" * {@link #isValidGender(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"public class Gender {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender should be either M/F\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"     * Constructs an {@code Gender}.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"        value \u003d gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        Gender othergender \u003d (Gender) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"        return value.equals(othergender.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":65}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"techjay-c"},"content":"                .anyMatch(keyword -\u003e person.getName().fullName.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":42,"techjay-c":1}},{"path":"src/main/java/seedu/address/model/person/Service.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":" * Represents a Service in the address book. Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":" * {@link #isValidService(String)}","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"public class Service {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Should be a valid string\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"    /*","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"    public final String value;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"     * @param service A valid service.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public Service(String service) {","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(service);","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        checkArgument(isValidService(service), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"        value \u003d service;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if a given string is a valid service.","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"    public static boolean isValidService(String test) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"        return value;","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof Service)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        Service otherDate \u003d (Service) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"        return value.equals(otherDate.value);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":65}},{"path":"src/main/java/seedu/address/model/person/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":" * A list of patients which is unique","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"     * Adds a person to the list. The person must not already exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}. {@code target} must","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"     * exist in the list. The person identity of {@code editedPerson} must not be the same as","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"     * another existing person in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        if (!target.isSamePerson(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"     * Removes the equivalent person from the list. The person must exist in the list.","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"     * Replaces the contents of this list with {@code persons}. {@code persons} must not contain","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"     * duplicate persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"SynapseProgramming"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"SynapseProgramming"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"SynapseProgramming"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"SynapseProgramming"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"SynapseProgramming"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"SynapseProgramming"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof UniquePatientList)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"SynapseProgramming"},"content":"        UniquePatientList otherUniquePatientList \u003d (UniquePatientList) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"SynapseProgramming"},"content":"        return internalList.equals(otherUniquePatientList.internalList);","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"SynapseProgramming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"SynapseProgramming"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"SynapseProgramming"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"SynapseProgramming"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"SynapseProgramming"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"SynapseProgramming"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"SynapseProgramming"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"SynapseProgramming"},"content":"                    return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"SynapseProgramming"},"content":"                }","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"SynapseProgramming"},"content":"            }","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"SynapseProgramming"},"content":"        return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":143}},{"path":"src/main/java/seedu/address/model/person/dentist/Dentist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.model.person.dentist;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Dentist in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"public class Dentist extends Person {","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    // Identity fields","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"    private final Specialization specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    private final Yoe yoe;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"     * Initializes {@code Dentist} object without {@code patients}.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public Dentist(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"                   Specialization specialization, Yoe yoe, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"        requireAllNonNull(name, phone, email, address, specialization, yoe, tags);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"        this.specialization \u003d specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"        this.yoe \u003d yoe;","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    public Specialization getSpecialization() {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        return specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    public Yoe getYoe() {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"        return yoe;","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if both dentists have the same name.","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean isSameDentist(Dentist otherDentist) {","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        if (otherDentist \u003d\u003d this) {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"            return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"        return otherDentist !\u003d null","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 otherDentist.getName().equals(getName());","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if both dentists have all identical data fields.","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"     * This defines a stronger notion of equality between two dentists.","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"            return true;","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"        if (!(other instanceof Dentist)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"            return false;","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"        Dentist otherDentist \u003d (Dentist) other;","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"        return otherDentist.getName().equals(getName())","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 otherDentist.getPhone().equals(getPhone())","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 otherDentist.getEmail().equals(getEmail())","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 otherDentist.getSpecialization().equals(getSpecialization())","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 otherDentist.getYoe().equals(getYoe())","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 otherDentist.getTags().equals(getTags());","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getSpecialization(), getYoe(), getTags());","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"        builder.append(getName())","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"                .append(getPhone())","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"                .append(getEmail())","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"                .append(\"; Specialization: \")","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"                .append(getSpecialization())","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"                .append(\"; Years Of Experience: \")","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"                .append(getYoe());","lastModifiedDate":"2023-10-05"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"freddychenyouren2":105}},{"path":"src/main/java/seedu/address/model/person/dentist/Specialization.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.model.person.dentist;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a Doctor\u0027s specialty in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSpecialization(String)}","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"public class Specialization {","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"            \"Specialization should only contain alphanumeric characters and spaces, and it should not be blank!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"    /*","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"     * The first character of the specialty must not be a whitespace,","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    private final String specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a {@code Specialization}.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"     * @param specialization A valid specialization.","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    public Specialization(String specialization) {","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(specialization);","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"        checkArgument(isValidSpecialization(specialization), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"        this.specialization \u003d specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if a given string is a valid specialization.","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    public static boolean isValidSpecialization(String test) {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"        return specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"                || (other instanceof Specialization // instanceof handles nulls","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 specialization.equals(((Specialization) other).specialization)); // state check","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        return specialization.hashCode();","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"        return specialization;","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"freddychenyouren2":61}},{"path":"src/main/java/seedu/address/model/person/dentist/UniqueDentistList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.model.person.dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":" * A list of dentists that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":" * A dentist is considered unique by comparing using {@code Dentist#isSameDentist(Dentist)}.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":" * As such, adding and updating of dentists uses Dentist#isSameDentist(Dentist) for equality","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":" * so as to ensure that the dentist being added or updated isunique in terms of identity in the UniqueDentistList.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":" * However, the removal of a dentist uses Dentist#equals(Object) so as to ensure that the dentist with","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":" * exactly the same fields will be removed.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":" *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":" * @see Dentist#isSameDentist(Dentist)","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"public class UniqueDentistList implements Iterable\u003cDentist\u003e {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    private final ObservableList\u003cDentist\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    private final ObservableList\u003cDentist\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if the list contains an equivalent dentist as the given argument.","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean contains(Dentist toCheck) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"     * Adds a dentist to the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"     * The dentist must not already exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"    public void add(Dentist toAdd) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"     * Replaces the dentist {@code target} in the list with {@code editedDentist}.","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"     * The dentist identity of {@code editedDentist} must not be the same as another existing dentist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"    public void setDentist(Dentist target, Dentist editedDentist) {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"        requireAllNonNull(target, editedDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"        if (!target.isSameDentist(editedDentist) \u0026\u0026 contains(editedDentist)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"        internalList.set(index, editedDentist);","lastModifiedDate":"2023-10-06"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns the dentist with the given target integer {@code target}.","lastModifiedDate":"2023-10-06"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"    public Dentist getDentist(int target) {","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"        Dentist dentist \u003d internalList.get(target);","lastModifiedDate":"2023-10-06"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"        if (isNull(dentist)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"        return dentist;","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"     * Removes the equivalent dentist from the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"     * The dentist must exist in the list.","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"    public void remove(Dentist toRemove) {","lastModifiedDate":"2023-10-06"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"    public void setDentists(UniqueDentistList replacement) {","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"     * Replaces the contents of this list with {@code dentists}.","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"     * {@code dentists} must not contain duplicate dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"    public void setDentists(List\u003cDentist\u003e dentists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"        requireAllNonNull(dentists);","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"        if (!dentistsAreUnique(dentists)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-10-06"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"        internalList.setAll(dentists);","lastModifiedDate":"2023-10-06"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"    public ObservableList\u003cDentist\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-06"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"    public Iterator\u003cDentist\u003e iterator() {","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-06"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"        if (!(other instanceof UniqueDentistList)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"        UniqueDentistList otherUniqueDentistList \u003d (UniqueDentistList) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"        return internalList.equals(otherUniqueDentistList.internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if {@code dentists} contains only unique dentists.","lastModifiedDate":"2023-10-06"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"    private boolean dentistsAreUnique(List\u003cDentist\u003e dentists) {","lastModifiedDate":"2023-10-06"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"        for (int i \u003d 0; i \u003c dentists.size() - 1; i++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"            for (int j \u003d i + 1; j \u003c dentists.size(); j++) {","lastModifiedDate":"2023-10-06"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"                if (dentists.get(i).isSamePerson(dentists.get(j))) {","lastModifiedDate":"2023-10-06"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"                    return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"                }","lastModifiedDate":"2023-10-06"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"        return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"freddychenyouren2":166}},{"path":"src/main/java/seedu/address/model/person/dentist/Yoe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.model.person.dentist;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":" * Represents a dentist\u0027s Years of Expetience (YoE) in ToothTracker address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidYoe(String)}","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"public class Yoe {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"            \"Years of Experience (YOE) should only contain numbers, and it should be at most 2 digits long\";","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String VALIDATION_REGEX \u003d \"^0*[0-9][0-9]{0,1}$\";","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    private final String value;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a {@code YOE}.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"     * @param yearsOfExperience A valid number of years.","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    public Yoe(String yearsOfExperience) {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"        requireNonNull(yearsOfExperience);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"        checkArgument(isValidYoe(yearsOfExperience), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"        yearsOfExperience \u003d yearsOfExperience.replaceFirst(\"^0+(?!S)\", \"\");","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"        value \u003d yearsOfExperience;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"     * Returns true if a given string is a valid format for Years of Experience.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"     * @param test The input of years of experience to be tested.","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    public static boolean isValidYoe(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"        return other \u003d\u003d this // Short Circuit","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"                || (other instanceof Yoe)","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"                \u0026\u0026 value.equals(((Yoe) other).value);","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        return value;","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"freddychenyouren2":58}},{"path":"src/main/java/seedu/address/model/person/patients/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.model.person.patients;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Service;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":" * Represents a Patient in the address book. Guarantees: details are present and not null, field","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":" * values are validated, immutable.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"    private final Birthdate birthdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"    private final AppointmentDate appointmentdate;","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    private final Service service;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    private long id;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"     * A class which represents a patient","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"     * @param name        name of patient","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"     * @param phone       phone number of patient","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"     * @param birthdate   patients birthday","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"     * @param gender      patients gender","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"     * @param appointment patients dental appointment date","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"     * @param service     dental service that the patients needs","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"     * @param address     address of patient","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"     * @param email       email of patient","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"     * @param tags        tags","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"    public Patient(Name name, Phone phone, Birthdate birthdate, Gender gender,","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"        AppointmentDate appointment, Service service, Address address, Email email, Set\u003cTag\u003e tags","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"    ) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        requireAllNonNull(name, phone, birthdate, gender, appointment, service, address, email,","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            tags);","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"        this.appointmentdate \u003d appointment;","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"        this.service \u003d service;","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"        this.id \u003d -1;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"     * A class which represents a patient","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"     * @param name        name of patient","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"     * @param phone       phone number of patient","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"     * @param birthdate   patients birthday","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"     * @param gender      patients gender","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"     * @param appointment patients dental appointment date","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"     * @param service     dental service that the patients needs","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"     * @param address     address of patient","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"     * @param email       email of patient","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"     * @param id          id of patient","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"     * @param tags        tags","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"    public Patient(Name name, Phone phone, Birthdate birthdate, Gender gender,","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"        AppointmentDate appointment, Service service, Address address, Email email, long id,","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"        Set\u003cTag\u003e tags","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"    ) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"        requireAllNonNull(name, phone, birthdate, gender, appointment, service, address, email,","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"            tags, id);","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"SynapseProgramming"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"SynapseProgramming"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"SynapseProgramming"},"content":"        this.appointmentdate \u003d appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"SynapseProgramming"},"content":"        this.service \u003d service;","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"SynapseProgramming"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"    public void setId(long id) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"SynapseProgramming"},"content":"    public long getId() {","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"SynapseProgramming"},"content":"        return id;","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"SynapseProgramming"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"SynapseProgramming"},"content":"        return gender;","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"SynapseProgramming"},"content":"    public Birthdate getBirthdate() {","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"SynapseProgramming"},"content":"        return birthdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"SynapseProgramming"},"content":"    public AppointmentDate getAppointmentdate() {","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"SynapseProgramming"},"content":"        return appointmentdate;","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":112,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":113,"author":{"gitId":"SynapseProgramming"},"content":"    public Service getService() {","lastModifiedDate":"2023-10-07"},{"lineNumber":114,"author":{"gitId":"SynapseProgramming"},"content":"        return service;","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if both patients have the same name. This defines a weaker notion of equality","lastModifiedDate":"2023-10-07"},{"lineNumber":120,"author":{"gitId":"SynapseProgramming"},"content":"     * between two persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":122,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-10-07"},{"lineNumber":123,"author":{"gitId":"SynapseProgramming"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":124,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":125,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":126,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2023-10-07"},{"lineNumber":128,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-10-07"},{"lineNumber":129,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":132,"author":{"gitId":"SynapseProgramming"},"content":"     * Returns true if both patients have the same identity and data fields. This defines a stronger","lastModifiedDate":"2023-10-07"},{"lineNumber":133,"author":{"gitId":"SynapseProgramming"},"content":"     * notion of equality between two patients.","lastModifiedDate":"2023-10-07"},{"lineNumber":134,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":135,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"SynapseProgramming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"SynapseProgramming"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-07"},{"lineNumber":138,"author":{"gitId":"SynapseProgramming"},"content":"            return true;","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":140,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":141,"author":{"gitId":"SynapseProgramming"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-07"},{"lineNumber":142,"author":{"gitId":"SynapseProgramming"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":143,"author":{"gitId":"SynapseProgramming"},"content":"            return false;","lastModifiedDate":"2023-10-07"},{"lineNumber":144,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":145,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":146,"author":{"gitId":"SynapseProgramming"},"content":"        Patient otherPerson \u003d (Patient) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":147,"author":{"gitId":"SynapseProgramming"},"content":"        return super.getName().equals(otherPerson.getName())","lastModifiedDate":"2023-10-07"},{"lineNumber":148,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 super.getPhone().equals(otherPerson.getPhone())","lastModifiedDate":"2023-10-07"},{"lineNumber":149,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 super.getEmail().equals(otherPerson.getEmail())","lastModifiedDate":"2023-10-07"},{"lineNumber":150,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 super.getAddress().equals(otherPerson.getAddress())","lastModifiedDate":"2023-10-07"},{"lineNumber":151,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 super.getTags().equals(otherPerson.getTags())","lastModifiedDate":"2023-10-07"},{"lineNumber":152,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 getGender().equals(otherPerson.getGender())","lastModifiedDate":"2023-10-07"},{"lineNumber":153,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 getBirthdate().equals(otherPerson.getBirthdate())","lastModifiedDate":"2023-10-07"},{"lineNumber":154,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 getAppointmentdate().equals(otherPerson.getAppointmentdate())","lastModifiedDate":"2023-10-07"},{"lineNumber":155,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 getService().equals(otherPerson.getService())","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"SynapseProgramming"},"content":"            \u0026\u0026 id \u003d\u003d otherPerson.getId();","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":158,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":159,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":160,"author":{"gitId":"SynapseProgramming"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-07"},{"lineNumber":161,"author":{"gitId":"SynapseProgramming"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"SynapseProgramming"},"content":"        return Objects.hash(super.getName(), super.getPhone(), super.getEmail(), super.getAddress(),","lastModifiedDate":"2023-10-07"},{"lineNumber":163,"author":{"gitId":"SynapseProgramming"},"content":"            super.getTags(), getGender(), getBirthdate(), getAppointmentdate(), getService(), id);","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":165,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":166,"author":{"gitId":"SynapseProgramming"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":167,"author":{"gitId":"SynapseProgramming"},"content":"    public String toString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":168,"author":{"gitId":"SynapseProgramming"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"name\", super.getName())","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"phone\", super.getPhone())","lastModifiedDate":"2023-10-07"},{"lineNumber":171,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"birthday\", getBirthdate())","lastModifiedDate":"2023-10-07"},{"lineNumber":172,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"gender\", getGender())","lastModifiedDate":"2023-10-07"},{"lineNumber":173,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"appointment\", getAppointmentdate())","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"service\", getService())","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"address\", super.getAddress())","lastModifiedDate":"2023-10-07"},{"lineNumber":176,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"email\", super.getEmail())","lastModifiedDate":"2023-10-07"},{"lineNumber":177,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"id\", id)","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"SynapseProgramming"},"content":"            .add(\"tags\", super.getTags())","lastModifiedDate":"2023-10-07"},{"lineNumber":179,"author":{"gitId":"SynapseProgramming"},"content":"            .toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":180,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":181,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":182,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":183,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-07"},{"lineNumber":184,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"SynapseProgramming":184}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Service;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Specialization;","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Yoe;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"                getTagSet(\"friends\"))","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"        return new Patient[]{","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"            new Patient(new Name(\"Alex Yeohh\"), new Phone(\"87438807\"), new Birthdate(\"03-02-1999\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"                new Gender(\"F\"), new AppointmentDate(\"yes\"), new Service(\"Cleaning\"),","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"                getTagSet(\"friends\"))","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"        };","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"    public static Dentist[] getSampleDentist() {","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"        return new Dentist[]{","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"            new Dentist(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Specialization(\"Orthodintics\"),","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"                new Yoe(\"6\"), getTagSet(\"friends\")),","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"            new Dentist(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"                new Specialization(\"Whitening\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"                new Yoe(\"5\"), getTagSet(\"colleagues\", \"friends\"))","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"        sampleAb.setPatientId(1);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"        for (Patient samplePatients : getSamplePatients()) {","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"            sampleAb.addPatient(samplePatients);","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"        for (Dentist sampleDentist : getSampleDentist()) {","lastModifiedDate":"2023-10-09"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"            sampleAb.addDentist(sampleDentist);","lastModifiedDate":"2023-10-09"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"SynapseProgramming":24,"-":48,"freddychenyouren2":16}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.AppointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    private final String dentist;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    private final String patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    private final String start;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"    private final String duration;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    private final String treatment;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"     * @param dentist The dentist\u0027s name.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"     * @param patient The patient\u0027s name.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"     * @param start The start time of the appointment in string format.","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"     * @param duration The duration of the appointment in string format.","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"     * @param treatment The treatment provided during the appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"dentist\") String dentist, @JsonProperty(\"patient\") String patient,","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"                             @JsonProperty(\"start\") String start, @JsonProperty(\"duration\") String duration,","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"                                  @JsonProperty(\"treatment\") String treatment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        this.dentist \u003d dentist;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        this.treatment \u003d treatment;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"     * @param source The source appointment to be adapted.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"        dentist \u003d source.getDentist();","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"qyaner"},"content":"        patient \u003d source.getPatient();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"qyaner"},"content":"        start \u003d source.getAppointmentTime().startToString();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"qyaner"},"content":"        duration \u003d source.getAppointmentTime().durationToString();","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"qyaner"},"content":"        treatment \u003d source.getTreatment();","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"qyaner"},"content":"     * @return The corresponding {@code Appointment} object.","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"qyaner"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"qyaner"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"qyaner"},"content":"        if (dentist \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"qyaner"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"qyaner"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"qyaner"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"qyaner"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"qyaner"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"qyaner"},"content":"        if (start \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"qyaner"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"qyaner"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"qyaner"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"qyaner"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"qyaner"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"qyaner"},"content":"        if (treatment \u003d\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"qyaner"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"qyaner"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"qyaner"},"content":"        final AppointmentTime appointmentTime \u003d new AppointmentTime(start, duration);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"qyaner"},"content":"        return new Appointment(dentist, patient, appointmentTime, duration, treatment);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"qyaner":87}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDentist.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Specialization;","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Yoe;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":" * Jackson-friendly version of {@link Dentist}.","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"class JsonAdaptedDentist {","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Dentist\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    private final String name;","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    private final String phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    private final String email;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    private final String address;","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    private final String specialization;","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    private final String yearsOfExperience;","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"     * Constructs a {@code JsonAdaptedDentist} with the given dentist details.","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    public JsonAdaptedDentist(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"                              @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"                              @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"                              @JsonProperty(\"specialization\") String specialization,","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"                              @JsonProperty(\"yoe\") String yearsOfExperience,","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        this.specialization \u003d specialization;","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        this.yearsOfExperience \u003d yearsOfExperience;","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"     * Converts a given {@code Dentist} into this class for Jackson use.","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"    public JsonAdaptedDentist(Dentist source) {","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"freddychenyouren2"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"freddychenyouren2"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"freddychenyouren2"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"freddychenyouren2"},"content":"        specialization \u003d source.getSpecialization().getValue();","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"freddychenyouren2"},"content":"        yearsOfExperience \u003d source.getYoe().getValue();","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"freddychenyouren2"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"freddychenyouren2"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"freddychenyouren2"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"freddychenyouren2"},"content":"     * Converts this Jackson-friendly adapted dentist object into the model\u0027s {@code Dentist} object.","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"freddychenyouren2"},"content":"     *                               dentist.","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"freddychenyouren2"},"content":"    public Dentist toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"freddychenyouren2"},"content":"        final List\u003cTag\u003e dentistTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"freddychenyouren2"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"            dentistTags.add(tag.toModelType());","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"freddychenyouren2"},"content":"        final Name modelName \u003d validateName();","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"freddychenyouren2"},"content":"        final Phone modelPhone \u003d validatePhone();","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"        final Email modelEmail \u003d validateEmail();","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"        final Address modelAddress \u003d validateAddress();","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"        final Specialization modelSpecialization \u003d validateSpecialization();","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"freddychenyouren2"},"content":"        final Yoe modelYoe \u003d validateYoe();","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"freddychenyouren2"},"content":"        final Set\u003cTag\u003e modelTags \u003d validateTags();","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"freddychenyouren2"},"content":"        return new Dentist(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"freddychenyouren2"},"content":"                modelSpecialization, modelYoe, modelTags);","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the name supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid name object.","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if name supplied is not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"freddychenyouren2"},"content":"    private Name validateName() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"freddychenyouren2"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"freddychenyouren2"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"freddychenyouren2"},"content":"        return new Name(name);","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":118,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the phone supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid phone object.","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if phone supplied is not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"freddychenyouren2"},"content":"    private Phone validatePhone() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"freddychenyouren2"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"freddychenyouren2"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"        return new Phone(phone);","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the email supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid email object.","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if email supplied is not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"freddychenyouren2"},"content":"    private Email validateEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":141,"author":{"gitId":"freddychenyouren2"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"freddychenyouren2"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":145,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"freddychenyouren2"},"content":"        return new Email(email);","lastModifiedDate":"2023-10-08"},{"lineNumber":149,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the address supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":153,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid address object.","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if address supplied is not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":156,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":157,"author":{"gitId":"freddychenyouren2"},"content":"    private Address validateAddress() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"freddychenyouren2"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":160,"author":{"gitId":"freddychenyouren2"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":161,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":162,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":163,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"freddychenyouren2"},"content":"        return new Address(address);","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the specialization supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid specialization object.","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if specialization supplied is not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"freddychenyouren2"},"content":"    private Specialization validateSpecialization() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"freddychenyouren2"},"content":"        if (specialization \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Specialization.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":178,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Specialization.isValidSpecialization(specialization)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(Specialization.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":182,"author":{"gitId":"freddychenyouren2"},"content":"        return new Specialization(specialization);","lastModifiedDate":"2023-10-08"},{"lineNumber":183,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":184,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":185,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":186,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the years of experience supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":188,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid years of experience object.","lastModifiedDate":"2023-10-08"},{"lineNumber":189,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if years of experience supplied is not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":190,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"freddychenyouren2"},"content":"    private Yoe validateYoe() throws IllegalValueException {","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"freddychenyouren2"},"content":"        if (yearsOfExperience \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":193,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":194,"author":{"gitId":"freddychenyouren2"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Years of Experience\")); // To be changed","lastModifiedDate":"2023-10-08"},{"lineNumber":195,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":196,"author":{"gitId":"freddychenyouren2"},"content":"        if (!Yoe.isValidYoe(yearsOfExperience)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":197,"author":{"gitId":"freddychenyouren2"},"content":"            throw new IllegalValueException(Yoe.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":198,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":199,"author":{"gitId":"freddychenyouren2"},"content":"        //To be added more","lastModifiedDate":"2023-10-08"},{"lineNumber":200,"author":{"gitId":"freddychenyouren2"},"content":"        return new Yoe(yearsOfExperience);","lastModifiedDate":"2023-10-10"},{"lineNumber":201,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":202,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":203,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":204,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":205,"author":{"gitId":"freddychenyouren2"},"content":"     * Validate the tags supplied from storage.","lastModifiedDate":"2023-10-08"},{"lineNumber":206,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":207,"author":{"gitId":"freddychenyouren2"},"content":"     * @return a valid set of tags","lastModifiedDate":"2023-10-08"},{"lineNumber":208,"author":{"gitId":"freddychenyouren2"},"content":"     * @throws IllegalValueException if tags supplied are not valid.","lastModifiedDate":"2023-10-08"},{"lineNumber":209,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":210,"author":{"gitId":"freddychenyouren2"},"content":"    private Set\u003cTag\u003e validateTags() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":211,"author":{"gitId":"freddychenyouren2"},"content":"        final List\u003cTag\u003e dentistTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":212,"author":{"gitId":"freddychenyouren2"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-08"},{"lineNumber":213,"author":{"gitId":"freddychenyouren2"},"content":"            dentistTags.add(tag.toModelType());","lastModifiedDate":"2023-10-08"},{"lineNumber":214,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":215,"author":{"gitId":"freddychenyouren2"},"content":"        return new HashSet\u003c\u003e(dentistTags);","lastModifiedDate":"2023-10-08"},{"lineNumber":216,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":217,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":218,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-08"},{"lineNumber":219,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"freddychenyouren2":219}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.List;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.Service;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"class JsonAdaptedPatient {","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"    private final String name;","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    private final String phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"    private final String email;","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"    private final String address;","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"    private final String gender;","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    private final String birthdate;","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"    private final String appointment;","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    private final String service;","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"    private final String id;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"birthdate\") String birthdate,","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"appointmentdate\") String appointment,","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"service\") String service,","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"        @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"        this.service \u003d service;","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"SynapseProgramming"},"content":"        birthdate \u003d source.getBirthdate().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"SynapseProgramming"},"content":"        appointment \u003d source.getAppointmentdate().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"SynapseProgramming"},"content":"        service \u003d source.getService().value;","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"SynapseProgramming"},"content":"        id \u003d String.valueOf(source.getId());","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"SynapseProgramming"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"SynapseProgramming"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"SynapseProgramming"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"SynapseProgramming"},"content":"     *                               person.","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"SynapseProgramming"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"SynapseProgramming"},"content":"        final List\u003cTag\u003e patientags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"SynapseProgramming"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"SynapseProgramming"},"content":"            patientags.add(tag.toModelType());","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"SynapseProgramming"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":107,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"SynapseProgramming"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"SynapseProgramming"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":118,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"SynapseProgramming"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"SynapseProgramming"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"SynapseProgramming"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"SynapseProgramming"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":136,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"SynapseProgramming"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-08"},{"lineNumber":141,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"SynapseProgramming"},"content":"        if (birthdate \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":143,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthdate.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":145,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Birthdate.isValidDate(birthdate)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":147,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":148,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":149,"author":{"gitId":"SynapseProgramming"},"content":"        final Birthdate modelBirthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"SynapseProgramming"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":152,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":153,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":156,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":157,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"SynapseProgramming"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":160,"author":{"gitId":"SynapseProgramming"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":161,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":162,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, AppointmentDate.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":163,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"SynapseProgramming"},"content":"        if (!AppointmentDate.isValidDate(appointment)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(AppointmentDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"SynapseProgramming"},"content":"        final AppointmentDate modelAppointment \u003d new AppointmentDate(appointment);","lastModifiedDate":"2023-10-08"},{"lineNumber":168,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"SynapseProgramming"},"content":"        if (service \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"SynapseProgramming"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Service.class.getSimpleName()));","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"SynapseProgramming"},"content":"        if (!Service.isValidService(service)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(Service.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"SynapseProgramming"},"content":"        final Service modelService \u003d new Service(service);","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":178,"author":{"gitId":"SynapseProgramming"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(patientags);","lastModifiedDate":"2023-10-08"},{"lineNumber":179,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":180,"author":{"gitId":"SynapseProgramming"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"SynapseProgramming"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"SynapseProgramming"},"content":"                \"id value does not exist!\");","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"SynapseProgramming"},"content":"        long lid \u003d Long.parseLong(id);","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"SynapseProgramming"},"content":"        return new Patient(modelName, modelPhone, modelBirthdate, modelGender, modelAppointment,","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"SynapseProgramming"},"content":"            modelService,","lastModifiedDate":"2023-10-08"},{"lineNumber":188,"author":{"gitId":"SynapseProgramming"},"content":"            modelAddress, modelEmail, lid, modelTags);","lastModifiedDate":"2023-10-13"},{"lineNumber":189,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":190,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"SynapseProgramming":191}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_DUPLICATE_DENTIST \u003d \"Dentists list contains duplicate person(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate person(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"    public static final String MESSAGE_CLASHING_APPOINTMENTS \u003d \"Dentist is not free for this time slot\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    private final List\u003cJsonAdaptedDentist\u003e dentists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"    private String patientId;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        dentists.addAll(source.getDentistList().stream().map(JsonAdaptedDentist::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"qyaner"},"content":"        appointments.addAll(source.getAppointmentList().stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"qyaner"},"content":"                .map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"        patientId \u003d String.valueOf(source.getPatientId());","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"        for (JsonAdaptedPatient adaptedPatient : patients) {","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"            Patient patient \u003d adaptedPatient.toModelType();","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"SynapseProgramming"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"SynapseProgramming"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2023-10-08"},{"lineNumber":84,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"freddychenyouren2"},"content":"        for (JsonAdaptedDentist jsonAdaptedDentist : dentists) {","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"freddychenyouren2"},"content":"            Dentist dentist \u003d jsonAdaptedDentist.toModelType();","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"SynapseProgramming"},"content":"            if (addressBook.hasDentist(dentist)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"SynapseProgramming"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DENTIST);","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"freddychenyouren2"},"content":"            addressBook.addDentist(dentist);","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"qyaner"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"qyaner"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"qyaner"},"content":"            if (addressBook.hasAppointment(appointment)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"qyaner"},"content":"                throw new IllegalValueException(MESSAGE_CLASHING_APPOINTMENTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"qyaner"},"content":"            addressBook.addAppointment(appointment);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"SynapseProgramming"},"content":"        addressBook.setPatientId(Long.parseLong(patientId));","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SynapseProgramming":21,"qyaner":15,"-":60,"freddychenyouren2":10}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":" * Represents a graphical user interface component to display details of an {@link Appointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"    private Label dentist;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"    private Label patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"    private Label appointmentTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"    private Label date;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"    private Label service;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"     * Constructs an {@code AppointmentCard} with the given {@code Appointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"     * @param appointment The appointment to display details of.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"    public AppointmentCard(Appointment appointment) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        dentist.setText(\"Dentist: \" + appointment.getDentist());","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"        patient.setText(\"Patient: \" + appointment.getPatient());","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"        appointmentTime.setText(appointment.getAppointmentTime().appointmentTimeToString());","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"        date.setText(appointment.getAppointmentTime().dateToString());","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"        service.setText(\"Treatment: \" + appointment.getTreatment());","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":44}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":" * Represents a graphical user interface component that displays a list of {@link Appointment}s.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"     * Constructs an {@code AppointmentListPanel} with the given list of appointments.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"     * @param appointmentList The list of appointments to display.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"        super(FXML);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"     * Custom {@code ListCell} that displays the content of an {@link Appointment}.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"qyaner"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"qyaner"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"qyaner"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"qyaner"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"qyaner"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"qyaner"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"qyaner"},"content":"                setText(null);","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"qyaner"},"content":"            } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"qyaner"},"content":"                setGraphic(new AppointmentCard(appointment).getRoot());","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"qyaner"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"qyaner"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"qyaner"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":50}},{"path":"src/main/java/seedu/address/ui/DentistCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":" * An UI component that displays information of a {@code Dentist}.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"public class DentistCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String FXML \u003d \"DentistListCard.fxml\";","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"     *","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"    public final Dentist dentist;","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    private Label name;","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"    private Label id;","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    private Label phone;","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"    private Label address;","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"    private Label email;","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"    private Label specialization;","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"    private Label yoe;","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"freddychenyouren2"},"content":"    public DentistCard(Dentist dentist, int displayedIndex) {","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"        super(FXML);","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"        this.dentist \u003d dentist;","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"freddychenyouren2"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"freddychenyouren2"},"content":"        name.setText(dentist.getName().fullName);","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"freddychenyouren2"},"content":"        phone.setText(dentist.getPhone().value);","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"        address.setText(dentist.getAddress().value);","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"        email.setText(dentist.getEmail().value);","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"freddychenyouren2"},"content":"        specialization.setText(dentist.getSpecialization().getValue());","lastModifiedDate":"2023-10-09"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"        yoe.setText(dentist.getYoe().getValue());","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"freddychenyouren2"},"content":"        dentist.getTags().stream()","lastModifiedDate":"2023-10-09"},{"lineNumber":62,"author":{"gitId":"freddychenyouren2"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-09"},{"lineNumber":63,"author":{"gitId":"freddychenyouren2"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-09"},{"lineNumber":64,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":65,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"freddychenyouren2":65}},{"path":"src/main/java/seedu/address/ui/DentistListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":" * Panel containing the list of dentists.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"public class DentistListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    private static final String FXML \u003d \"DentistListPanel.fxml\";","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DentistListPanel.class);","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"    private ListView\u003cDentist\u003e dentistListView;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"     * Creates a {@code DentistListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"    public DentistListPanel(ObservableList\u003cDentist\u003e dentistList) {","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"        super(FXML);","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        dentistListView.setItems(dentistList);","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"        dentistListView.setCellFactory(listView -\u003e new DentistListViewCell());","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Dentist} using a {@code DentistCard}.","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"    class DentistListViewCell extends ListCell\u003cDentist\u003e {","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"        @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"        protected void updateItem(Dentist dentist, boolean empty) {","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"            super.updateItem(dentist, empty);","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"freddychenyouren2"},"content":"            if (empty || dentist \u003d\u003d null) {","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"freddychenyouren2"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"freddychenyouren2"},"content":"                setText(null);","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"freddychenyouren2"},"content":"            } else {","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"freddychenyouren2"},"content":"                setGraphic(new DentistCard(dentist, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"freddychenyouren2"},"content":"            }","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"freddychenyouren2"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"freddychenyouren2"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"freddychenyouren2":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":" * The Main Window. Provides the basic application layout containing a menu bar and space where","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":" * other JavaFX elements can be placed.","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    private DentistListPanel dentistListPanel;","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"qyaner"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"freddychenyouren2"},"content":"    @FXML","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"freddychenyouren2"},"content":"    private StackPane dentistListPanelPlaceholder;","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"qyaner"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"qyaner"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"SynapseProgramming"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"SynapseProgramming"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"freddychenyouren2"},"content":"        dentistListPanel \u003d new DentistListPanel(logic.getFilteredDentistList());","lastModifiedDate":"2023-10-09"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"        dentistListPanelPlaceholder.getChildren().add(dentistListPanel.getRoot());","lastModifiedDate":"2023-10-09"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":130,"author":{"gitId":"qyaner"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"qyaner"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"SynapseProgramming"},"content":"    private CommandResult executeCommand(String commandText)","lastModifiedDate":"2023-10-08"},{"lineNumber":193,"author":{"gitId":"SynapseProgramming"},"content":"            throws CommandException, ParseException {","lastModifiedDate":"2023-10-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SynapseProgramming":9,"qyaner":5,"-":194,"freddychenyouren2":6}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"     * a consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"     * will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"     * AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"    public final Patient patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    private Label name;","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"    private Label id;","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"    private Label phone;","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"    private Label address;","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"    private Label email;","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"    private Label gender;","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"    private Label birthdate;","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"    private Label appointment;","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"    private Label service;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"    private Label patientid;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"SynapseProgramming"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"SynapseProgramming"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"SynapseProgramming"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"SynapseProgramming"},"content":"        super(FXML);","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"SynapseProgramming"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"SynapseProgramming"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"SynapseProgramming"},"content":"        name.setText(\"Name: \" + patient.getName().fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"SynapseProgramming"},"content":"        phone.setText(\"Phone: \" + patient.getPhone().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"SynapseProgramming"},"content":"        address.setText(\"Address: \" + patient.getAddress().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"SynapseProgramming"},"content":"        email.setText(\"Email: \" + patient.getEmail().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"SynapseProgramming"},"content":"        gender.setText(\"Gender: \" + patient.getGender().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"SynapseProgramming"},"content":"        birthdate.setText(\"Birthday: \" + patient.getBirthdate().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"SynapseProgramming"},"content":"        appointment.setText(\"Appointment: \" + patient.getAppointmentdate().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"SynapseProgramming"},"content":"        service.setText(\"Service: \" + patient.getService().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"SynapseProgramming"},"content":"        patientid.setText(\"ID: \" + String.valueOf(patient.getId()));","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"SynapseProgramming"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"SynapseProgramming"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"SynapseProgramming"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"SynapseProgramming":79}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"    @FXML","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        super(FXML);","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"     * {@code PersonCard}.","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"SynapseProgramming"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"SynapseProgramming"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"SynapseProgramming"},"content":"                setText(null);","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"SynapseProgramming"},"content":"            } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"SynapseProgramming"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"SynapseProgramming"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"SynapseProgramming"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"SynapseProgramming":52}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"qyaner"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"qyaner"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"qyaner"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"qyaner"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"qyaner"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"qyaner"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"qyaner"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"qyaner"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"qyaner"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"qyaner"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"                \u003cLabel fx:id\u003d\"id\" text\u003d\"Appointment: \" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"qyaner"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"qyaner"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"qyaner"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"qyaner"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"qyaner"},"content":"                \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"qyaner"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"qyaner"},"content":"            \u003cLabel fx:id\u003d\"appointmentTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointmentTime\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"qyaner"},"content":"            \u003cLabel fx:id\u003d\"dentist\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dentist\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"qyaner"},"content":"            \u003cLabel fx:id\u003d\"patient\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$patient\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"qyaner"},"content":"            \u003cLabel fx:id\u003d\"service\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$service\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"qyaner"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"qyaner"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"qyaner"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"qyaner":35}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qyaner"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"qyaner"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"qyaner"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"qyaner"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"qyaner"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"qyaner":8}},{"path":"src/main/resources/view/DentistListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"freddychenyouren2"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"freddychenyouren2"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"freddychenyouren2"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"freddychenyouren2"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"freddychenyouren2"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"freddychenyouren2"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"freddychenyouren2"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"freddychenyouren2"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"freddychenyouren2"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"freddychenyouren2"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"freddychenyouren2"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"freddychenyouren2"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"freddychenyouren2"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cLabel fx:id\u003d\"specialization\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$specialization\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"freddychenyouren2"},"content":"      \u003cLabel fx:id\u003d\"yoe\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$years of experience\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"freddychenyouren2"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"freddychenyouren2"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"freddychenyouren2":38}},{"path":"src/main/resources/view/DentistListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"freddychenyouren2"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"freddychenyouren2"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"freddychenyouren2"},"content":"  \u003cListView fx:id\u003d\"dentistListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"freddychenyouren2"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"freddychenyouren2":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"  xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"              text\u003d\"Help\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"SynapseProgramming"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"          VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"SynapseProgramming"},"content":"          \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"freddychenyouren2"},"content":"\u003c!--          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e--\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":58,"author":{"gitId":"freddychenyouren2"},"content":"          \u003cStackPane fx:id\u003d\"dentistListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-09"},{"lineNumber":59,"author":{"gitId":"qyaner"},"content":"          \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"SynapseProgramming":7,"qyaner":1,"-":56,"freddychenyouren2":2}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"SynapseProgramming"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"SynapseProgramming"},"content":"  xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"SynapseProgramming"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"SynapseProgramming"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"SynapseProgramming"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"SynapseProgramming"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"SynapseProgramming"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"SynapseProgramming"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"SynapseProgramming"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"SynapseProgramming"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"SynapseProgramming"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"SynapseProgramming"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"SynapseProgramming"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"SynapseProgramming"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"birthdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthdate\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"appointment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointment\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"service\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$service\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"SynapseProgramming"},"content":"      \u003cLabel fx:id\u003d\"patientid\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$patientid\"/\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"SynapseProgramming"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"SynapseProgramming"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"SynapseProgramming"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"SynapseProgramming":42}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"SynapseProgramming"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"SynapseProgramming"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"SynapseProgramming"},"content":"  \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"SynapseProgramming"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"SynapseProgramming":8}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"techjay-c"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"techjay-c"},"content":"        public void updateFilteredPatientList(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-10"},{"lineNumber":168,"author":{"gitId":"SynapseProgramming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"SynapseProgramming"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"SynapseProgramming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"freddychenyouren2"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":177,"author":{"gitId":"freddychenyouren2"},"content":"        public ObservableList\u003cDentist\u003e getFilteredDentistList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"freddychenyouren2"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-10"},{"lineNumber":179,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":181,"author":{"gitId":"qyaner"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"qyaner"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"qyaner"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"SynapseProgramming"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-10-08"},{"lineNumber":188,"author":{"gitId":"SynapseProgramming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":189,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":190,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"freddychenyouren2"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"freddychenyouren2"},"content":"        public void addDentist(Dentist dentist) {","lastModifiedDate":"2023-10-10"},{"lineNumber":193,"author":{"gitId":"freddychenyouren2"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-10"},{"lineNumber":194,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":195,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":196,"author":{"gitId":"qyaner"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"qyaner"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"qyaner"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":202,"author":{"gitId":"SynapseProgramming"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-08"},{"lineNumber":203,"author":{"gitId":"SynapseProgramming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":204,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":205,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":206,"author":{"gitId":"freddychenyouren2"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":207,"author":{"gitId":"freddychenyouren2"},"content":"        public boolean hasDentist(Dentist dentist) {","lastModifiedDate":"2023-10-10"},{"lineNumber":208,"author":{"gitId":"freddychenyouren2"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-10"},{"lineNumber":209,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":210,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":211,"author":{"gitId":"qyaner"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":212,"author":{"gitId":"qyaner"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-14"},{"lineNumber":213,"author":{"gitId":"qyaner"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":214,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"SynapseProgramming":23,"qyaner":16,"-":204,"freddychenyouren2":16,"techjay-c":2}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"freddychenyouren2"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \", hasGuiInteraction\u003d\" + commandResult.hasGuiInteraction() + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":62,"freddychenyouren2":1}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"techjay-c"},"content":"    /*","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"techjay-c"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":95,"techjay-c":2}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"qyaner"},"content":"import seedu.address.model.appointments.Appointment;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"freddychenyouren2"},"content":"import seedu.address.model.person.dentist.Dentist;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"SynapseProgramming"},"content":"import seedu.address.model.person.patients.Patient;","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"SynapseProgramming"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"SynapseProgramming"},"content":"            .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"SynapseProgramming"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"SynapseProgramming"},"content":"            .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"SynapseProgramming"},"content":"        String expected \u003d","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"SynapseProgramming"},"content":"            AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"SynapseProgramming"},"content":"                + \", patients\u003d\" + addressBook.getPatientList() + \"}\";","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"freddychenyouren2"},"content":"        private final ObservableList\u003cDentist\u003e dentists \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"qyaner"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"freddychenyouren2"},"content":"        //More types of stub to be added in the future.","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":118,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"SynapseProgramming"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"SynapseProgramming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"freddychenyouren2"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"SynapseProgramming"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"SynapseProgramming"},"content":"        public long getPatientId() {","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"SynapseProgramming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"SynapseProgramming"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"SynapseProgramming"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"freddychenyouren2"},"content":"        @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"freddychenyouren2"},"content":"        public ObservableList\u003cDentist\u003e getDentistList() {","lastModifiedDate":"2023-10-10"},{"lineNumber":130,"author":{"gitId":"freddychenyouren2"},"content":"            return dentists;","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"freddychenyouren2"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"qyaner"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"qyaner"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"qyaner"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"qyaner"},"content":"            return appointments;","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"qyaner"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"SynapseProgramming":19,"qyaner":7,"-":105,"freddychenyouren2":8}}]
